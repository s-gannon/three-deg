/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n\n//# sourceURL=webpack://three-deg/./node_modules/events/events.js?");

/***/ }),

/***/ "./node_modules/graphology-layout-force/defaults.js":
/*!**********************************************************!*\
  !*** ./node_modules/graphology-layout-force/defaults.js ***!
  \**********************************************************/
/***/ ((module) => {

eval("/**\n * Graphology Force Layout Defaults\n * =================================\n *\n * Default options & settings used by the library.\n */\nmodule.exports = {\n  nodeXAttribute: 'x',\n  nodeYAttribute: 'y',\n  isNodeFixed: 'fixed',\n  shouldSkipNode: null,\n  shouldSkipEdge: null,\n  settings: {\n    attraction: 0.0005,\n    repulsion: 0.1,\n    gravity: 0.0001,\n    inertia: 0.6,\n    maxMove: 200\n  }\n};\n\n\n//# sourceURL=webpack://three-deg/./node_modules/graphology-layout-force/defaults.js?");

/***/ }),

/***/ "./node_modules/graphology-layout-force/helpers.js":
/*!*********************************************************!*\
  !*** ./node_modules/graphology-layout-force/helpers.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n * Graphology Force Layout Helpers\n * ================================\n *\n * Miscellaneous helper functions related to the force layout.\n */\nexports.assignLayoutChanges = function (graph, nodeStates, params) {\n  const {nodeXAttribute: x, nodeYAttribute: y} = params;\n\n  graph.updateEachNodeAttributes(\n    (n, attr) => {\n      const state = nodeStates[n];\n\n      if (!state || state.fixed) return attr;\n\n      attr[x] = state.x;\n      attr[y] = state.y;\n\n      return attr;\n    },\n    {attributes: ['x', 'y']}\n  );\n};\n\nexports.collectLayoutChanges = function (nodeStates) {\n  const mapping = {};\n\n  for (const n in nodeStates) {\n    const state = nodeStates[n];\n\n    mapping[n] = {x: state.x, y: state.y};\n  }\n\n  return mapping;\n};\n\n\n//# sourceURL=webpack://three-deg/./node_modules/graphology-layout-force/helpers.js?");

/***/ }),

/***/ "./node_modules/graphology-layout-force/iterate.js":
/*!*********************************************************!*\
  !*** ./node_modules/graphology-layout-force/iterate.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Graphology Force Layout Iteration\n * ==================================\n *\n * Function describing a single iteration of the force layout.\n */\nconst {\n  createNodeValueGetter,\n  createEdgeValueGetter\n} = __webpack_require__(/*! graphology-utils/getters */ \"./node_modules/graphology-utils/getters.js\");\n\n// const EPSILON = -Infinity;\n\n// function isVeryCloseToZero(x) {\n//   return Math.abs(x) < EPSILON;\n// }\n\nmodule.exports = function iterate(graph, nodeStates, params) {\n  const {nodeXAttribute: xKey, nodeYAttribute: yKey} = params;\n  const {attraction, repulsion, gravity, inertia, maxMove} = params.settings;\n\n  let {shouldSkipNode, shouldSkipEdge, isNodeFixed} = params;\n\n  isNodeFixed = createNodeValueGetter(isNodeFixed);\n  shouldSkipNode = createNodeValueGetter(shouldSkipNode, false);\n  shouldSkipEdge = createEdgeValueGetter(shouldSkipEdge, false);\n\n  const nodes = graph.filterNodes((n, attr) => {\n    return !shouldSkipNode.fromEntry(n, attr);\n  });\n\n  const adjustedOrder = nodes.length;\n\n  // Check nodeStatess and inertia\n  for (let i = 0; i < adjustedOrder; i++) {\n    const n = nodes[i];\n    const attr = graph.getNodeAttributes(n);\n    const nodeState = nodeStates[n];\n\n    if (!nodeState)\n      nodeStates[n] = {\n        dx: 0,\n        dy: 0,\n        x: attr[xKey] || 0,\n        y: attr[yKey] || 0\n      };\n    else\n      nodeStates[n] = {\n        dx: nodeState.dx * inertia,\n        dy: nodeState.dy * inertia,\n        x: attr[xKey] || 0,\n        y: attr[yKey] || 0\n      };\n  }\n\n  // Repulsion\n  if (repulsion)\n    for (let i = 0; i < adjustedOrder; i++) {\n      const n1 = nodes[i];\n      const n1State = nodeStates[n1];\n\n      for (let j = i + 1; j < adjustedOrder; j++) {\n        const n2 = nodes[j];\n        const n2State = nodeStates[n2];\n\n        // Compute distance:\n        const dx = n2State.x - n1State.x;\n        const dy = n2State.y - n1State.y;\n        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n\n        // Repulse nodes relatively to 1 / distance:\n        const repulsionX = (repulsion / distance) * dx;\n        const repulsionY = (repulsion / distance) * dy;\n        n1State.dx -= repulsionX;\n        n1State.dy -= repulsionY;\n        n2State.dx += repulsionX;\n        n2State.dy += repulsionY;\n      }\n    }\n\n  // Attraction\n  if (attraction)\n    graph.forEachEdge(\n      (edge, attr, source, target, sourceAttr, targetAttr, undirected) => {\n        if (source === target) return;\n\n        if (\n          shouldSkipNode.fromEntry(source, sourceAttr) ||\n          shouldSkipNode.fromEntry(target, targetAttr)\n        )\n          return;\n\n        if (\n          shouldSkipEdge.fromEntry(\n            edge,\n            attr,\n            source,\n            target,\n            sourceAttr,\n            targetAttr,\n            undirected\n          )\n        )\n          return;\n\n        const n1State = nodeStates[source];\n        const n2State = nodeStates[target];\n\n        // Compute distance:\n        const dx = n2State.x - n1State.x;\n        const dy = n2State.y - n1State.y;\n\n        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n\n        // Attract nodes relatively to their distance:\n        const attractionX = attraction * distance * dx;\n        const attractionY = attraction * distance * dy;\n        n1State.dx += attractionX;\n        n1State.dy += attractionY;\n        n2State.dx -= attractionX;\n        n2State.dy -= attractionY;\n      }\n    );\n\n  // Gravity\n  if (gravity)\n    for (let i = 0; i < adjustedOrder; i++) {\n      const n = nodes[i];\n      const nodeState = nodeStates[n];\n\n      // Attract nodes to [0, 0] relatively to the distance:\n      const {x, y} = nodeState;\n      const distance = Math.sqrt(x * x + y * y) || 1;\n      nodeStates[n].dx -= x * gravity * distance;\n      nodeStates[n].dy -= y * gravity * distance;\n    }\n\n  // Apply forces\n  const converged = false;\n\n  for (let i = 0; i < adjustedOrder; i++) {\n    const n = nodes[i];\n    const nodeState = nodeStates[n];\n\n    const distance = Math.sqrt(\n      nodeState.dx * nodeState.dx + nodeState.dy * nodeState.dy\n    );\n\n    if (distance > maxMove) {\n      nodeState.dx *= maxMove / distance;\n      nodeState.dy *= maxMove / distance;\n    }\n\n    // if (!isVeryCloseToZero(nodeState.dx) || !isVeryCloseToZero(nodeState.dy)) {\n    //   converged = false;\n    // }\n\n    if (!isNodeFixed.fromGraph(graph, n)) {\n      nodeState.x += nodeState.dx;\n      nodeState.y += nodeState.dy;\n      nodeState.fixed = false;\n    } else {\n      nodeState.fixed = true;\n    }\n\n    // NOTE: possibility to assign here to save one loop in the future\n  }\n\n  return {converged};\n};\n\n\n//# sourceURL=webpack://three-deg/./node_modules/graphology-layout-force/iterate.js?");

/***/ }),

/***/ "./node_modules/graphology-layout-force/worker.js":
/*!********************************************************!*\
  !*** ./node_modules/graphology-layout-force/worker.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Graphology Force Layout Worker\n * ===============================\n *\n * A worker made for running a force layout live.\n *\n * Note that it does not run in a webworker yet but respect animation frames.\n */\nconst isGraph = __webpack_require__(/*! graphology-utils/is-graph */ \"./node_modules/graphology-utils/is-graph.js\");\nconst resolveDefaults = __webpack_require__(/*! graphology-utils/defaults */ \"./node_modules/graphology-utils/defaults.js\");\n\nconst iterate = __webpack_require__(/*! ./iterate.js */ \"./node_modules/graphology-layout-force/iterate.js\");\nconst helpers = __webpack_require__(/*! ./helpers.js */ \"./node_modules/graphology-layout-force/helpers.js\");\nconst DEFAULTS = __webpack_require__(/*! ./defaults.js */ \"./node_modules/graphology-layout-force/defaults.js\");\n\nfunction ForceSupervisor(graph, params) {\n  // Validation\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout-force/worker: the given graph is not a valid graphology instance.'\n    );\n\n  params = resolveDefaults(params, DEFAULTS);\n\n  this.callbacks = {};\n\n  if (params.onConverged) this.callbacks.onConverged = params.onConverged;\n\n  this.graph = graph;\n  this.params = params;\n  this.nodeStates = {};\n  this.frameID = null;\n  this.running = false;\n  this.killed = false;\n\n  // TODO: hook listeners on graph to listen to dropNode, dropEdge, clear, clearEdges\n}\n\nForceSupervisor.prototype.isRunning = function () {\n  return this.running;\n};\n\nForceSupervisor.prototype.runFrame = function () {\n  let {converged} = iterate(this.graph, this.nodeStates, this.params);\n\n  helpers.assignLayoutChanges(this.graph, this.nodeStates, this.params);\n\n  // TODO: figure out convergence\n  converged = false;\n\n  if (converged) {\n    if (this.callbacks.onConverged) this.callbacks.onConverged();\n    this.stop();\n  } else {\n    this.frameID = window.requestAnimationFrame(() => this.runFrame());\n  }\n};\n\nForceSupervisor.prototype.stop = function () {\n  this.running = false;\n\n  if (this.frameID !== null) {\n    window.cancelAnimationFrame(this.frameID);\n    this.frameID = null;\n  }\n\n  return this;\n};\n\nForceSupervisor.prototype.start = function () {\n  if (this.killed)\n    throw new Error('graphology-layout-force/worker.start: layout was killed.');\n\n  if (this.running) return;\n\n  this.running = true;\n  this.runFrame();\n};\n\nForceSupervisor.prototype.kill = function () {\n  this.stop();\n  delete this.nodeStates;\n  this.killed = true;\n\n  // TODO: cleanup events\n};\n\nmodule.exports = ForceSupervisor;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/graphology-layout-force/worker.js?");

/***/ }),

/***/ "./node_modules/graphology-utils/defaults.js":
/*!***************************************************!*\
  !*** ./node_modules/graphology-utils/defaults.js ***!
  \***************************************************/
/***/ ((module) => {

eval("/**\n * Graphology Defaults\n * ====================\n *\n * Helper function used throughout the standard lib to resolve defaults.\n */\nfunction isLeaf(o) {\n  return (\n    !o ||\n    typeof o !== 'object' ||\n    typeof o === 'function' ||\n    Array.isArray(o) ||\n    o instanceof Set ||\n    o instanceof Map ||\n    o instanceof RegExp ||\n    o instanceof Date\n  );\n}\n\nfunction resolveDefaults(target, defaults) {\n  target = target || {};\n\n  var output = {};\n\n  for (var k in defaults) {\n    var existing = target[k];\n    var def = defaults[k];\n\n    // Recursion\n    if (!isLeaf(def)) {\n      output[k] = resolveDefaults(existing, def);\n\n      continue;\n    }\n\n    // Leaf\n    if (existing === undefined) {\n      output[k] = def;\n    } else {\n      output[k] = existing;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = resolveDefaults;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/graphology-utils/defaults.js?");

/***/ }),

/***/ "./node_modules/graphology-utils/getters.js":
/*!**************************************************!*\
  !*** ./node_modules/graphology-utils/getters.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n * Graphology Weight Getter\n * =========================\n *\n * Function creating weight getters.\n */\nfunction coerceWeight(value) {\n  // Ensuring target value is a correct number\n  if (typeof value !== 'number' || isNaN(value)) return 1;\n\n  return value;\n}\n\nfunction createNodeValueGetter(nameOrFunction, defaultValue) {\n  var getter = {};\n\n  var coerceToDefault = function (v) {\n    if (typeof v === 'undefined') return defaultValue;\n\n    return v;\n  };\n\n  if (typeof defaultValue === 'function') coerceToDefault = defaultValue;\n\n  var get = function (attributes) {\n    return coerceToDefault(attributes[nameOrFunction]);\n  };\n\n  var returnDefault = function () {\n    return coerceToDefault(undefined);\n  };\n\n  if (typeof nameOrFunction === 'string') {\n    getter.fromAttributes = get;\n    getter.fromGraph = function (graph, node) {\n      return get(graph.getNodeAttributes(node));\n    };\n    getter.fromEntry = function (node, attributes) {\n      return get(attributes);\n    };\n  } else if (typeof nameOrFunction === 'function') {\n    getter.fromAttributes = function () {\n      throw new Error(\n        'graphology-utils/getters/createNodeValueGetter: irrelevant usage.'\n      );\n    };\n    getter.fromGraph = function (graph, node) {\n      return coerceToDefault(\n        nameOrFunction(node, graph.getNodeAttributes(node))\n      );\n    };\n    getter.fromEntry = function (node, attributes) {\n      return coerceToDefault(nameOrFunction(node, attributes));\n    };\n  } else {\n    getter.fromAttributes = returnDefault;\n    getter.fromGraph = returnDefault;\n    getter.fromEntry = returnDefault;\n  }\n\n  return getter;\n}\n\nfunction createEdgeValueGetter(nameOrFunction, defaultValue) {\n  var getter = {};\n\n  var coerceToDefault = function (v) {\n    if (typeof v === 'undefined') return defaultValue;\n\n    return v;\n  };\n\n  if (typeof defaultValue === 'function') coerceToDefault = defaultValue;\n\n  var get = function (attributes) {\n    return coerceToDefault(attributes[nameOrFunction]);\n  };\n\n  var returnDefault = function () {\n    return coerceToDefault(undefined);\n  };\n\n  if (typeof nameOrFunction === 'string') {\n    getter.fromAttributes = get;\n    getter.fromGraph = function (graph, edge) {\n      return get(graph.getEdgeAttributes(edge));\n    };\n    getter.fromEntry = function (edge, attributes) {\n      return get(attributes);\n    };\n    getter.fromPartialEntry = getter.fromEntry;\n    getter.fromMinimalEntry = getter.fromEntry;\n  } else if (typeof nameOrFunction === 'function') {\n    getter.fromAttributes = function () {\n      throw new Error(\n        'graphology-utils/getters/createEdgeValueGetter: irrelevant usage.'\n      );\n    };\n    getter.fromGraph = function (graph, edge) {\n      // TODO: we can do better, check #310\n      var extremities = graph.extremities(edge);\n      return coerceToDefault(\n        nameOrFunction(\n          edge,\n          graph.getEdgeAttributes(edge),\n          extremities[0],\n          extremities[1],\n          graph.getNodeAttributes(extremities[0]),\n          graph.getNodeAttributes(extremities[1]),\n          graph.isUndirected(edge)\n        )\n      );\n    };\n    getter.fromEntry = function (e, a, s, t, sa, ta, u) {\n      return coerceToDefault(nameOrFunction(e, a, s, t, sa, ta, u));\n    };\n    getter.fromPartialEntry = function (e, a, s, t) {\n      return coerceToDefault(nameOrFunction(e, a, s, t));\n    };\n    getter.fromMinimalEntry = function (e, a) {\n      return coerceToDefault(nameOrFunction(e, a));\n    };\n  } else {\n    getter.fromAttributes = returnDefault;\n    getter.fromGraph = returnDefault;\n    getter.fromEntry = returnDefault;\n    getter.fromMinimalEntry = returnDefault;\n  }\n\n  return getter;\n}\n\nexports.createNodeValueGetter = createNodeValueGetter;\nexports.createEdgeValueGetter = createEdgeValueGetter;\nexports.createEdgeWeightGetter = function (name) {\n  return createEdgeValueGetter(name, coerceWeight);\n};\n\n\n//# sourceURL=webpack://three-deg/./node_modules/graphology-utils/getters.js?");

/***/ }),

/***/ "./node_modules/graphology-utils/is-graph.js":
/*!***************************************************!*\
  !*** ./node_modules/graphology-utils/is-graph.js ***!
  \***************************************************/
/***/ ((module) => {

eval("/**\n * Graphology isGraph\n * ===================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology instance.\n */\n\n/**\n * Checking the value is a graphology instance.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraph(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.dropNode === 'function' &&\n    typeof value.multi === 'boolean'\n  );\n};\n\n\n//# sourceURL=webpack://three-deg/./node_modules/graphology-utils/is-graph.js?");

/***/ }),

/***/ "./node_modules/graphology/dist/graphology.umd.min.js":
/*!************************************************************!*\
  !*** ./node_modules/graphology/dist/graphology.umd.min.js ***!
  \************************************************************/
/***/ (function(module) {

eval("!function(t,e){ true?module.exports=e():0}(this,(function(){\"use strict\";function t(e){return t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},t(e)}function e(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,r(t,e)}function n(t){return n=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},n(t)}function r(t,e){return r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},r(t,e)}function i(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}function o(t,e,n){return o=i()?Reflect.construct.bind():function(t,e,n){var i=[null];i.push.apply(i,e);var o=new(Function.bind.apply(t,i));return n&&r(o,n.prototype),o},o.apply(null,arguments)}function a(t){var e=\"function\"==typeof Map?new Map:void 0;return a=function(t){if(null===t||(i=t,-1===Function.toString.call(i).indexOf(\"[native code]\")))return t;var i;if(\"function\"!=typeof t)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,a)}function a(){return o(t,arguments,n(this).constructor)}return a.prototype=Object.create(t.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),r(a,t)},a(t)}function c(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}var u=function(){for(var t=arguments[0],e=1,n=arguments.length;e<n;e++)if(arguments[e])for(var r in arguments[e])t[r]=arguments[e][r];return t};function d(t,e,n,r){var i=t._nodes.get(e),o=null;return i?o=\"mixed\"===r?i.out&&i.out[n]||i.undirected&&i.undirected[n]:\"directed\"===r?i.out&&i.out[n]:i.undirected&&i.undirected[n]:o}function s(e){return\"object\"===t(e)&&null!==e}function h(t){var e;for(e in t)return!1;return!0}function p(t,e,n){Object.defineProperty(t,e,{enumerable:!1,configurable:!1,writable:!0,value:n})}function f(t,e,n){var r={enumerable:!0,configurable:!0};\"function\"==typeof n?r.get=n:(r.value=n,r.writable=!1),Object.defineProperty(t,e,r)}function l(t){return!!s(t)&&!(t.attributes&&!Array.isArray(t.attributes))}\"function\"==typeof Object.assign&&(u=Object.assign);var g,y={exports:{}},w=\"object\"==typeof Reflect?Reflect:null,v=w&&\"function\"==typeof w.apply?w.apply:function(t,e,n){return Function.prototype.apply.call(t,e,n)};g=w&&\"function\"==typeof w.ownKeys?w.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var b=Number.isNaN||function(t){return t!=t};function m(){m.init.call(this)}y.exports=m,y.exports.once=function(t,e){return new Promise((function(n,r){function i(n){t.removeListener(e,o),r(n)}function o(){\"function\"==typeof t.removeListener&&t.removeListener(\"error\",i),n([].slice.call(arguments))}U(t,e,o,{once:!0}),\"error\"!==e&&function(t,e,n){\"function\"==typeof t.on&&U(t,\"error\",e,n)}(t,i,{once:!0})}))},m.EventEmitter=m,m.prototype._events=void 0,m.prototype._eventsCount=0,m.prototype._maxListeners=void 0;var k=10;function _(t){if(\"function\"!=typeof t)throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof t)}function G(t){return void 0===t._maxListeners?m.defaultMaxListeners:t._maxListeners}function x(t,e,n,r){var i,o,a,c;if(_(n),void 0===(o=t._events)?(o=t._events=Object.create(null),t._eventsCount=0):(void 0!==o.newListener&&(t.emit(\"newListener\",e,n.listener?n.listener:n),o=t._events),a=o[e]),void 0===a)a=o[e]=n,++t._eventsCount;else if(\"function\"==typeof a?a=o[e]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),(i=G(t))>0&&a.length>i&&!a.warned){a.warned=!0;var u=new Error(\"Possible EventEmitter memory leak detected. \"+a.length+\" \"+String(e)+\" listeners added. Use emitter.setMaxListeners() to increase limit\");u.name=\"MaxListenersExceededWarning\",u.emitter=t,u.type=e,u.count=a.length,c=u,console&&console.warn&&console.warn(c)}return t}function E(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function A(t,e,n){var r={fired:!1,wrapFn:void 0,target:t,type:e,listener:n},i=E.bind(r);return i.listener=n,r.wrapFn=i,i}function L(t,e,n){var r=t._events;if(void 0===r)return[];var i=r[e];return void 0===i?[]:\"function\"==typeof i?n?[i.listener||i]:[i]:n?function(t){for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e}(i):D(i,i.length)}function S(t){var e=this._events;if(void 0!==e){var n=e[t];if(\"function\"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function D(t,e){for(var n=new Array(e),r=0;r<e;++r)n[r]=t[r];return n}function U(t,e,n,r){if(\"function\"==typeof t.on)r.once?t.once(e,n):t.on(e,n);else{if(\"function\"!=typeof t.addEventListener)throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,(function i(o){r.once&&t.removeEventListener(e,i),n(o)}))}}function N(t){if(\"function\"!=typeof t)throw new Error(\"obliterator/iterator: expecting a function!\");this.next=t}Object.defineProperty(m,\"defaultMaxListeners\",{enumerable:!0,get:function(){return k},set:function(t){if(\"number\"!=typeof t||t<0||b(t))throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received '+t+\".\");k=t}}),m.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},m.prototype.setMaxListeners=function(t){if(\"number\"!=typeof t||t<0||b(t))throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received '+t+\".\");return this._maxListeners=t,this},m.prototype.getMaxListeners=function(){return G(this)},m.prototype.emit=function(t){for(var e=[],n=1;n<arguments.length;n++)e.push(arguments[n]);var r=\"error\"===t,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var o;if(e.length>0&&(o=e[0]),o instanceof Error)throw o;var a=new Error(\"Unhandled error.\"+(o?\" (\"+o.message+\")\":\"\"));throw a.context=o,a}var c=i[t];if(void 0===c)return!1;if(\"function\"==typeof c)v(c,this,e);else{var u=c.length,d=D(c,u);for(n=0;n<u;++n)v(d[n],this,e)}return!0},m.prototype.addListener=function(t,e){return x(this,t,e,!1)},m.prototype.on=m.prototype.addListener,m.prototype.prependListener=function(t,e){return x(this,t,e,!0)},m.prototype.once=function(t,e){return _(e),this.on(t,A(this,t,e)),this},m.prototype.prependOnceListener=function(t,e){return _(e),this.prependListener(t,A(this,t,e)),this},m.prototype.removeListener=function(t,e){var n,r,i,o,a;if(_(e),void 0===(r=this._events))return this;if(void 0===(n=r[t]))return this;if(n===e||n.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete r[t],r.removeListener&&this.emit(\"removeListener\",t,n.listener||e));else if(\"function\"!=typeof n){for(i=-1,o=n.length-1;o>=0;o--)if(n[o]===e||n[o].listener===e){a=n[o].listener,i=o;break}if(i<0)return this;0===i?n.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(n,i),1===n.length&&(r[t]=n[0]),void 0!==r.removeListener&&this.emit(\"removeListener\",t,a||e)}return this},m.prototype.off=m.prototype.removeListener,m.prototype.removeAllListeners=function(t){var e,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[t]),this;if(0===arguments.length){var i,o=Object.keys(n);for(r=0;r<o.length;++r)\"removeListener\"!==(i=o[r])&&this.removeAllListeners(i);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(\"function\"==typeof(e=n[t]))this.removeListener(t,e);else if(void 0!==e)for(r=e.length-1;r>=0;r--)this.removeListener(t,e[r]);return this},m.prototype.listeners=function(t){return L(this,t,!0)},m.prototype.rawListeners=function(t){return L(this,t,!1)},m.listenerCount=function(t,e){return\"function\"==typeof t.listenerCount?t.listenerCount(e):S.call(t,e)},m.prototype.listenerCount=S,m.prototype.eventNames=function(){return this._eventsCount>0?g(this._events):[]},\"undefined\"!=typeof Symbol&&(N.prototype[Symbol.iterator]=function(){return this}),N.of=function(){var t=arguments,e=t.length,n=0;return new N((function(){return n>=e?{done:!0}:{done:!1,value:t[n++]}}))},N.empty=function(){return new N((function(){return{done:!0}}))},N.fromSequence=function(t){var e=0,n=t.length;return new N((function(){return e>=n?{done:!0}:{done:!1,value:t[e++]}}))},N.is=function(t){return t instanceof N||\"object\"==typeof t&&null!==t&&\"function\"==typeof t.next};var O=N,j={};j.ARRAY_BUFFER_SUPPORT=\"undefined\"!=typeof ArrayBuffer,j.SYMBOL_SUPPORT=\"undefined\"!=typeof Symbol;var C=O,M=j,z=M.ARRAY_BUFFER_SUPPORT,W=M.SYMBOL_SUPPORT;var P=function(t){var e=function(t){return\"string\"==typeof t||Array.isArray(t)||z&&ArrayBuffer.isView(t)?C.fromSequence(t):\"object\"!=typeof t||null===t?null:W&&\"function\"==typeof t[Symbol.iterator]?t[Symbol.iterator]():\"function\"==typeof t.next?t:null}(t);if(!e)throw new Error(\"obliterator: target is not iterable nor a valid iterator.\");return e},R=P,K=function(t,e){for(var n,r=arguments.length>1?e:1/0,i=r!==1/0?new Array(r):[],o=0,a=R(t);;){if(o===r)return i;if((n=a.next()).done)return o!==e&&(i.length=o),i;i[o++]=n.value}},T=function(t){function n(e){var n;return(n=t.call(this)||this).name=\"GraphError\",n.message=e,n}return e(n,t),n}(a(Error)),B=function(t){function n(e){var r;return(r=t.call(this,e)||this).name=\"InvalidArgumentsGraphError\",\"function\"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(r),n.prototype.constructor),r}return e(n,t),n}(T),F=function(t){function n(e){var r;return(r=t.call(this,e)||this).name=\"NotFoundGraphError\",\"function\"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(r),n.prototype.constructor),r}return e(n,t),n}(T),I=function(t){function n(e){var r;return(r=t.call(this,e)||this).name=\"UsageGraphError\",\"function\"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(r),n.prototype.constructor),r}return e(n,t),n}(T);function Y(t,e){this.key=t,this.attributes=e,this.clear()}function q(t,e){this.key=t,this.attributes=e,this.clear()}function J(t,e){this.key=t,this.attributes=e,this.clear()}function V(t,e,n,r,i){this.key=e,this.attributes=i,this.undirected=t,this.source=n,this.target=r}Y.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.undirectedDegree=0,this.undirectedLoops=0,this.directedLoops=0,this.in={},this.out={},this.undirected={}},q.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.directedLoops=0,this.in={},this.out={}},J.prototype.clear=function(){this.undirectedDegree=0,this.undirectedLoops=0,this.undirected={}},V.prototype.attach=function(){var t=\"out\",e=\"in\";this.undirected&&(t=e=\"undirected\");var n=this.source.key,r=this.target.key;this.source[t][r]=this,this.undirected&&n===r||(this.target[e][n]=this)},V.prototype.attachMulti=function(){var t=\"out\",e=\"in\",n=this.source.key,r=this.target.key;this.undirected&&(t=e=\"undirected\");var i=this.source[t],o=i[r];if(void 0===o)return i[r]=this,void(this.undirected&&n===r||(this.target[e][n]=this));o.previous=this,this.next=o,i[r]=this,this.target[e][n]=this},V.prototype.detach=function(){var t=this.source.key,e=this.target.key,n=\"out\",r=\"in\";this.undirected&&(n=r=\"undirected\"),delete this.source[n][e],delete this.target[r][t]},V.prototype.detachMulti=function(){var t=this.source.key,e=this.target.key,n=\"out\",r=\"in\";this.undirected&&(n=r=\"undirected\"),void 0===this.previous?void 0===this.next?(delete this.source[n][e],delete this.target[r][t]):(this.next.previous=void 0,this.source[n][e]=this.next,this.target[r][t]=this.next):(this.previous.next=this.next,void 0!==this.next&&(this.next.previous=this.previous))};function H(t,e,n,r,i,o,a){var c,u,d,s;if(r=\"\"+r,0===n){if(!(c=t._nodes.get(r)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(r,'\" node in the graph.'));d=i,s=o}else if(3===n){if(i=\"\"+i,!(u=t._edges.get(i)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(i,'\" edge in the graph.'));var h=u.source.key,p=u.target.key;if(r===h)c=u.target;else{if(r!==p)throw new F(\"Graph.\".concat(e,': the \"').concat(r,'\" node is not attached to the \"').concat(i,'\" edge (').concat(h,\", \").concat(p,\").\"));c=u.source}d=o,s=a}else{if(!(u=t._edges.get(r)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(r,'\" edge in the graph.'));c=1===n?u.source:u.target,d=i,s=o}return[c,d,s]}var Q=[{name:function(t){return\"get\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];return a.attributes[c]}}},{name:function(t){return\"get\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){return H(this,e,n,t,r)[0].attributes}}},{name:function(t){return\"has\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];return a.attributes.hasOwnProperty(c)}}},{name:function(t){return\"set\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i,o){var a=H(this,e,n,t,r,i,o),c=a[0],u=a[1],d=a[2];return c.attributes[u]=d,this.emit(\"nodeAttributesUpdated\",{key:c.key,type:\"set\",attributes:c.attributes,name:u}),this}}},{name:function(t){return\"update\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i,o){var a=H(this,e,n,t,r,i,o),c=a[0],u=a[1],d=a[2];if(\"function\"!=typeof d)throw new B(\"Graph.\".concat(e,\": updater should be a function.\"));var s=c.attributes,h=d(s[u]);return s[u]=h,this.emit(\"nodeAttributesUpdated\",{key:c.key,type:\"set\",attributes:c.attributes,name:u}),this}}},{name:function(t){return\"remove\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];return delete a.attributes[c],this.emit(\"nodeAttributesUpdated\",{key:a.key,type:\"remove\",attributes:a.attributes,name:c}),this}}},{name:function(t){return\"replace\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];if(!s(c))throw new B(\"Graph.\".concat(e,\": provided attributes are not a plain object.\"));return a.attributes=c,this.emit(\"nodeAttributesUpdated\",{key:a.key,type:\"replace\",attributes:a.attributes}),this}}},{name:function(t){return\"merge\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];if(!s(c))throw new B(\"Graph.\".concat(e,\": provided attributes are not a plain object.\"));return u(a.attributes,c),this.emit(\"nodeAttributesUpdated\",{key:a.key,type:\"merge\",attributes:a.attributes,data:c}),this}}},{name:function(t){return\"update\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];if(\"function\"!=typeof c)throw new B(\"Graph.\".concat(e,\": provided updater is not a function.\"));return a.attributes=c(a.attributes),this.emit(\"nodeAttributesUpdated\",{key:a.key,type:\"update\",attributes:a.attributes}),this}}}];var X=[{name:function(t){return\"get\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}return i.attributes[r]}}},{name:function(t){return\"get\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t){var r;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>1){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var i=\"\"+t,o=\"\"+arguments[1];if(!(r=d(this,i,o,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(i,'\" - \"').concat(o,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(r=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}return r.attributes}}},{name:function(t){return\"has\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}return i.attributes.hasOwnProperty(r)}}},{name:function(t){return\"set\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>3){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var a=\"\"+t,c=\"\"+r;if(r=arguments[2],i=arguments[3],!(o=d(this,a,c,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(a,'\" - \"').concat(c,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(o=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}return o.attributes[r]=i,this.emit(\"edgeAttributesUpdated\",{key:o.key,type:\"set\",attributes:o.attributes,name:r}),this}}},{name:function(t){return\"update\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>3){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var a=\"\"+t,c=\"\"+r;if(r=arguments[2],i=arguments[3],!(o=d(this,a,c,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(a,'\" - \"').concat(c,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(o=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}if(\"function\"!=typeof i)throw new B(\"Graph.\".concat(e,\": updater should be a function.\"));return o.attributes[r]=i(o.attributes[r]),this.emit(\"edgeAttributesUpdated\",{key:o.key,type:\"set\",attributes:o.attributes,name:r}),this}}},{name:function(t){return\"remove\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}return delete i.attributes[r],this.emit(\"edgeAttributesUpdated\",{key:i.key,type:\"remove\",attributes:i.attributes,name:r}),this}}},{name:function(t){return\"replace\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}if(!s(r))throw new B(\"Graph.\".concat(e,\": provided attributes are not a plain object.\"));return i.attributes=r,this.emit(\"edgeAttributesUpdated\",{key:i.key,type:\"replace\",attributes:i.attributes}),this}}},{name:function(t){return\"merge\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}if(!s(r))throw new B(\"Graph.\".concat(e,\": provided attributes are not a plain object.\"));return u(i.attributes,r),this.emit(\"edgeAttributesUpdated\",{key:i.key,type:\"merge\",attributes:i.attributes,data:r}),this}}},{name:function(t){return\"update\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}if(\"function\"!=typeof r)throw new B(\"Graph.\".concat(e,\": provided updater is not a function.\"));return i.attributes=r(i.attributes),this.emit(\"edgeAttributesUpdated\",{key:i.key,type:\"update\",attributes:i.attributes}),this}}}];var Z=O,$=P,tt=function(){var t=arguments,e=null,n=-1;return new Z((function(){for(var r=null;;){if(null===e){if(++n>=t.length)return{done:!0};e=$(t[n])}if(!0!==(r=e.next()).done)break;e=null}return r}))},et=[{name:\"edges\",type:\"mixed\"},{name:\"inEdges\",type:\"directed\",direction:\"in\"},{name:\"outEdges\",type:\"directed\",direction:\"out\"},{name:\"inboundEdges\",type:\"mixed\",direction:\"in\"},{name:\"outboundEdges\",type:\"mixed\",direction:\"out\"},{name:\"directedEdges\",type:\"directed\"},{name:\"undirectedEdges\",type:\"undirected\"}];function nt(t,e,n,r){var i=!1;for(var o in e)if(o!==r){var a=e[o];if(i=n(a.key,a.attributes,a.source.key,a.target.key,a.source.attributes,a.target.attributes,a.undirected),t&&i)return a.key}}function rt(t,e,n,r){var i,o,a,c=!1;for(var u in e)if(u!==r){i=e[u];do{if(o=i.source,a=i.target,c=n(i.key,i.attributes,o.key,a.key,o.attributes,a.attributes,i.undirected),t&&c)return i.key;i=i.next}while(void 0!==i)}}function it(t,e){var n,r=Object.keys(t),i=r.length,o=0;return new O((function(){do{if(n)n=n.next;else{if(o>=i)return{done:!0};var a=r[o++];if(a===e){n=void 0;continue}n=t[a]}}while(!n);return{done:!1,value:{edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected}}}))}function ot(t,e,n,r){var i=e[n];if(i){var o=i.source,a=i.target;return r(i.key,i.attributes,o.key,a.key,o.attributes,a.attributes,i.undirected)&&t?i.key:void 0}}function at(t,e,n,r){var i=e[n];if(i){var o=!1;do{if(o=r(i.key,i.attributes,i.source.key,i.target.key,i.source.attributes,i.target.attributes,i.undirected),t&&o)return i.key;i=i.next}while(void 0!==i)}}function ct(t,e){var n=t[e];return void 0!==n.next?new O((function(){if(!n)return{done:!0};var t={edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected};return n=n.next,{done:!1,value:t}})):O.of({edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected})}function ut(t,e){if(0===t.size)return[];if(\"mixed\"===e||e===t.type)return\"function\"==typeof Array.from?Array.from(t._edges.keys()):K(t._edges.keys(),t._edges.size);for(var n,r,i=\"undirected\"===e?t.undirectedSize:t.directedSize,o=new Array(i),a=\"undirected\"===e,c=t._edges.values(),u=0;!0!==(n=c.next()).done;)(r=n.value).undirected===a&&(o[u++]=r.key);return o}function dt(t,e,n,r){if(0!==e.size)for(var i,o,a=\"mixed\"!==n&&n!==e.type,c=\"undirected\"===n,u=!1,d=e._edges.values();!0!==(i=d.next()).done;)if(o=i.value,!a||o.undirected===c){var s=o,h=s.key,p=s.attributes,f=s.source,l=s.target;if(u=r(h,p,f.key,l.key,f.attributes,l.attributes,o.undirected),t&&u)return h}}function st(t,e){if(0===t.size)return O.empty();var n=\"mixed\"!==e&&e!==t.type,r=\"undirected\"===e,i=t._edges.values();return new O((function(){for(var t,e;;){if((t=i.next()).done)return t;if(e=t.value,!n||e.undirected===r)break}return{value:{edge:e.key,attributes:e.attributes,source:e.source.key,target:e.target.key,sourceAttributes:e.source.attributes,targetAttributes:e.target.attributes,undirected:e.undirected},done:!1}}))}function ht(t,e,n,r,i,o){var a,c=e?rt:nt;if(\"undirected\"!==n){if(\"out\"!==r&&(a=c(t,i.in,o),t&&a))return a;if(\"in\"!==r&&(a=c(t,i.out,o,r?void 0:i.key),t&&a))return a}if(\"directed\"!==n&&(a=c(t,i.undirected,o),t&&a))return a}function pt(t,e,n,r){var i=[];return ht(!1,t,e,n,r,(function(t){i.push(t)})),i}function ft(t,e,n){var r=O.empty();return\"undirected\"!==t&&(\"out\"!==e&&void 0!==n.in&&(r=tt(r,it(n.in))),\"in\"!==e&&void 0!==n.out&&(r=tt(r,it(n.out,e?void 0:n.key)))),\"directed\"!==t&&void 0!==n.undirected&&(r=tt(r,it(n.undirected))),r}function lt(t,e,n,r,i,o,a){var c,u=n?at:ot;if(\"undirected\"!==e){if(void 0!==i.in&&\"out\"!==r&&(c=u(t,i.in,o,a),t&&c))return c;if(void 0!==i.out&&\"in\"!==r&&(r||i.key!==o)&&(c=u(t,i.out,o,a),t&&c))return c}if(\"directed\"!==e&&void 0!==i.undirected&&(c=u(t,i.undirected,o,a),t&&c))return c}function gt(t,e,n,r,i){var o=[];return lt(!1,t,e,n,r,i,(function(t){o.push(t)})),o}function yt(t,e,n,r){var i=O.empty();return\"undirected\"!==t&&(void 0!==n.in&&\"out\"!==e&&r in n.in&&(i=tt(i,ct(n.in,r))),void 0!==n.out&&\"in\"!==e&&r in n.out&&(e||n.key!==r)&&(i=tt(i,ct(n.out,r)))),\"directed\"!==t&&void 0!==n.undirected&&r in n.undirected&&(i=tt(i,ct(n.undirected,r))),i}var wt=[{name:\"neighbors\",type:\"mixed\"},{name:\"inNeighbors\",type:\"directed\",direction:\"in\"},{name:\"outNeighbors\",type:\"directed\",direction:\"out\"},{name:\"inboundNeighbors\",type:\"mixed\",direction:\"in\"},{name:\"outboundNeighbors\",type:\"mixed\",direction:\"out\"},{name:\"directedNeighbors\",type:\"directed\"},{name:\"undirectedNeighbors\",type:\"undirected\"}];function vt(){this.A=null,this.B=null}function bt(t,e,n,r,i){for(var o in r){var a=r[o],c=a.source,u=a.target,d=c===n?u:c;if(!e||!e.has(d.key)){var s=i(d.key,d.attributes);if(t&&s)return d.key}}}function mt(t,e,n,r,i){if(\"mixed\"!==e){if(\"undirected\"===e)return bt(t,null,r,r.undirected,i);if(\"string\"==typeof n)return bt(t,null,r,r[n],i)}var o,a=new vt;if(\"undirected\"!==e){if(\"out\"!==n){if(o=bt(t,null,r,r.in,i),t&&o)return o;a.wrap(r.in)}if(\"in\"!==n){if(o=bt(t,a,r,r.out,i),t&&o)return o;a.wrap(r.out)}}if(\"directed\"!==e&&(o=bt(t,a,r,r.undirected,i),t&&o))return o}function kt(t,e,n){var r=Object.keys(n),i=r.length,o=0;return new O((function(){var a=null;do{if(o>=i)return t&&t.wrap(n),{done:!0};var c=n[r[o++]],u=c.source,d=c.target;a=u===e?d:u,t&&t.has(a.key)&&(a=null)}while(null===a);return{done:!1,value:{neighbor:a.key,attributes:a.attributes}}}))}function _t(t,e){var n=e.name,r=e.type,i=e.direction;t.prototype[n]=function(t){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return[];t=\"\"+t;var e=this._nodes.get(t);if(void 0===e)throw new F(\"Graph.\".concat(n,': could not find the \"').concat(t,'\" node in the graph.'));return function(t,e,n){if(\"mixed\"!==t){if(\"undirected\"===t)return Object.keys(n.undirected);if(\"string\"==typeof e)return Object.keys(n[e])}var r=[];return mt(!1,t,e,n,(function(t){r.push(t)})),r}(\"mixed\"===r?this.type:r,i,e)}}function Gt(t,e){var n=e.name,r=e.type,i=e.direction,o=n.slice(0,-1)+\"Entries\";t.prototype[o]=function(t){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return O.empty();t=\"\"+t;var e=this._nodes.get(t);if(void 0===e)throw new F(\"Graph.\".concat(o,': could not find the \"').concat(t,'\" node in the graph.'));return function(t,e,n){if(\"mixed\"!==t){if(\"undirected\"===t)return kt(null,n,n.undirected);if(\"string\"==typeof e)return kt(null,n,n[e])}var r=O.empty(),i=new vt;return\"undirected\"!==t&&(\"out\"!==e&&(r=tt(r,kt(i,n,n.in))),\"in\"!==e&&(r=tt(r,kt(i,n,n.out)))),\"directed\"!==t&&(r=tt(r,kt(i,n,n.undirected))),r}(\"mixed\"===r?this.type:r,i,e)}}function xt(t,e,n,r,i){for(var o,a,c,u,d,s,h,p=r._nodes.values(),f=r.type;!0!==(o=p.next()).done;){var l=!1;if(a=o.value,\"undirected\"!==f)for(c in u=a.out){d=u[c];do{if(s=d.target,l=!0,h=i(a.key,s.key,a.attributes,s.attributes,d.key,d.attributes,d.undirected),t&&h)return d;d=d.next}while(d)}if(\"directed\"!==f)for(c in u=a.undirected)if(!(e&&a.key>c)){d=u[c];do{if((s=d.target).key!==c&&(s=d.source),l=!0,h=i(a.key,s.key,a.attributes,s.attributes,d.key,d.attributes,d.undirected),t&&h)return d;d=d.next}while(d)}if(n&&!l&&(h=i(a.key,null,a.attributes,null,null,null,null),t&&h))return null}}function Et(t){if(!s(t))throw new B('Graph.import: invalid serialized node. A serialized node should be a plain object with at least a \"key\" property.');if(!(\"key\"in t))throw new B(\"Graph.import: serialized node is missing its key.\");if(\"attributes\"in t&&(!s(t.attributes)||null===t.attributes))throw new B(\"Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.\")}function At(t){if(!s(t))throw new B('Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a \"source\" & \"target\" property.');if(!(\"source\"in t))throw new B(\"Graph.import: serialized edge is missing its source.\");if(!(\"target\"in t))throw new B(\"Graph.import: serialized edge is missing its target.\");if(\"attributes\"in t&&(!s(t.attributes)||null===t.attributes))throw new B(\"Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.\");if(\"undirected\"in t&&\"boolean\"!=typeof t.undirected)throw new B(\"Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.\")}vt.prototype.wrap=function(t){null===this.A?this.A=t:null===this.B&&(this.B=t)},vt.prototype.has=function(t){return null!==this.A&&t in this.A||null!==this.B&&t in this.B};var Lt,St=(Lt=255&Math.floor(256*Math.random()),function(){return Lt++}),Dt=new Set([\"directed\",\"undirected\",\"mixed\"]),Ut=new Set([\"domain\",\"_events\",\"_eventsCount\",\"_maxListeners\"]),Nt={allowSelfLoops:!0,multi:!1,type:\"mixed\"};function Ot(t,e,n){var r=new t.NodeDataClass(e,n);return t._nodes.set(e,r),t.emit(\"nodeAdded\",{key:e,attributes:n}),r}function jt(t,e,n,r,i,o,a,c){if(!r&&\"undirected\"===t.type)throw new I(\"Graph.\".concat(e,\": you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.\"));if(r&&\"directed\"===t.type)throw new I(\"Graph.\".concat(e,\": you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.\"));if(c&&!s(c))throw new B(\"Graph.\".concat(e,': invalid attributes. Expecting an object but got \"').concat(c,'\"'));if(o=\"\"+o,a=\"\"+a,c=c||{},!t.allowSelfLoops&&o===a)throw new I(\"Graph.\".concat(e,': source & target are the same (\"').concat(o,\"\\\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.\"));var u=t._nodes.get(o),d=t._nodes.get(a);if(!u)throw new F(\"Graph.\".concat(e,': source node \"').concat(o,'\" not found.'));if(!d)throw new F(\"Graph.\".concat(e,': target node \"').concat(a,'\" not found.'));var h={key:null,undirected:r,source:o,target:a,attributes:c};if(n)i=t._edgeKeyGenerator();else if(i=\"\"+i,t._edges.has(i))throw new I(\"Graph.\".concat(e,': the \"').concat(i,'\" edge already exists in the graph.'));if(!t.multi&&(r?void 0!==u.undirected[a]:void 0!==u.out[a]))throw new I(\"Graph.\".concat(e,': an edge linking \"').concat(o,'\" to \"').concat(a,\"\\\" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.\"));var p=new V(r,i,u,d,c);t._edges.set(i,p);var f=o===a;return r?(u.undirectedDegree++,d.undirectedDegree++,f&&(u.undirectedLoops++,t._undirectedSelfLoopCount++)):(u.outDegree++,d.inDegree++,f&&(u.directedLoops++,t._directedSelfLoopCount++)),t.multi?p.attachMulti():p.attach(),r?t._undirectedSize++:t._directedSize++,h.key=i,t.emit(\"edgeAdded\",h),i}function Ct(t,e,n,r,i,o,a,c,d){if(!r&&\"undirected\"===t.type)throw new I(\"Graph.\".concat(e,\": you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.\"));if(r&&\"directed\"===t.type)throw new I(\"Graph.\".concat(e,\": you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.\"));if(c)if(d){if(\"function\"!=typeof c)throw new B(\"Graph.\".concat(e,': invalid updater function. Expecting a function but got \"').concat(c,'\"'))}else if(!s(c))throw new B(\"Graph.\".concat(e,': invalid attributes. Expecting an object but got \"').concat(c,'\"'));var h;if(o=\"\"+o,a=\"\"+a,d&&(h=c,c=void 0),!t.allowSelfLoops&&o===a)throw new I(\"Graph.\".concat(e,': source & target are the same (\"').concat(o,\"\\\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.\"));var p,f,l=t._nodes.get(o),g=t._nodes.get(a);if(!n&&(p=t._edges.get(i))){if(!(p.source.key===o&&p.target.key===a||r&&p.source.key===a&&p.target.key===o))throw new I(\"Graph.\".concat(e,': inconsistency detected when attempting to merge the \"').concat(i,'\" edge with \"').concat(o,'\" source & \"').concat(a,'\" target vs. (\"').concat(p.source.key,'\", \"').concat(p.target.key,'\").'));f=p}if(f||t.multi||!l||(f=r?l.undirected[a]:l.out[a]),f){var y=[f.key,!1,!1,!1];if(d?!h:!c)return y;if(d){var w=f.attributes;f.attributes=h(w),t.emit(\"edgeAttributesUpdated\",{type:\"replace\",key:f.key,attributes:f.attributes})}else u(f.attributes,c),t.emit(\"edgeAttributesUpdated\",{type:\"merge\",key:f.key,attributes:f.attributes,data:c});return y}c=c||{},d&&h&&(c=h(c));var v={key:null,undirected:r,source:o,target:a,attributes:c};if(n)i=t._edgeKeyGenerator();else if(i=\"\"+i,t._edges.has(i))throw new I(\"Graph.\".concat(e,': the \"').concat(i,'\" edge already exists in the graph.'));var b=!1,m=!1;l||(l=Ot(t,o,{}),b=!0,o===a&&(g=l,m=!0)),g||(g=Ot(t,a,{}),m=!0),p=new V(r,i,l,g,c),t._edges.set(i,p);var k=o===a;return r?(l.undirectedDegree++,g.undirectedDegree++,k&&(l.undirectedLoops++,t._undirectedSelfLoopCount++)):(l.outDegree++,g.inDegree++,k&&(l.directedLoops++,t._directedSelfLoopCount++)),t.multi?p.attachMulti():p.attach(),r?t._undirectedSize++:t._directedSize++,v.key=i,t.emit(\"edgeAdded\",v),[i,!0,b,m]}function Mt(t,e){t._edges.delete(e.key);var n=e.source,r=e.target,i=e.attributes,o=e.undirected,a=n===r;o?(n.undirectedDegree--,r.undirectedDegree--,a&&(n.undirectedLoops--,t._undirectedSelfLoopCount--)):(n.outDegree--,r.inDegree--,a&&(n.directedLoops--,t._directedSelfLoopCount--)),t.multi?e.detachMulti():e.detach(),o?t._undirectedSize--:t._directedSize--,t.emit(\"edgeDropped\",{key:e.key,attributes:i,source:n.key,target:r.key,undirected:o})}var zt=function(n){function r(t){var e;if(e=n.call(this)||this,\"boolean\"!=typeof(t=u({},Nt,t)).multi)throw new B(\"Graph.constructor: invalid 'multi' option. Expecting a boolean but got \\\"\".concat(t.multi,'\".'));if(!Dt.has(t.type))throw new B('Graph.constructor: invalid \\'type\\' option. Should be one of \"mixed\", \"directed\" or \"undirected\" but got \"'.concat(t.type,'\".'));if(\"boolean\"!=typeof t.allowSelfLoops)throw new B(\"Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got \\\"\".concat(t.allowSelfLoops,'\".'));var r=\"mixed\"===t.type?Y:\"directed\"===t.type?q:J;p(c(e),\"NodeDataClass\",r);var i=\"geid_\"+St()+\"_\",o=0;return p(c(e),\"_attributes\",{}),p(c(e),\"_nodes\",new Map),p(c(e),\"_edges\",new Map),p(c(e),\"_directedSize\",0),p(c(e),\"_undirectedSize\",0),p(c(e),\"_directedSelfLoopCount\",0),p(c(e),\"_undirectedSelfLoopCount\",0),p(c(e),\"_edgeKeyGenerator\",(function(){var t;do{t=i+o++}while(e._edges.has(t));return t})),p(c(e),\"_options\",t),Ut.forEach((function(t){return p(c(e),t,e[t])})),f(c(e),\"order\",(function(){return e._nodes.size})),f(c(e),\"size\",(function(){return e._edges.size})),f(c(e),\"directedSize\",(function(){return e._directedSize})),f(c(e),\"undirectedSize\",(function(){return e._undirectedSize})),f(c(e),\"selfLoopCount\",(function(){return e._directedSelfLoopCount+e._undirectedSelfLoopCount})),f(c(e),\"directedSelfLoopCount\",(function(){return e._directedSelfLoopCount})),f(c(e),\"undirectedSelfLoopCount\",(function(){return e._undirectedSelfLoopCount})),f(c(e),\"multi\",e._options.multi),f(c(e),\"type\",e._options.type),f(c(e),\"allowSelfLoops\",e._options.allowSelfLoops),f(c(e),\"implementation\",(function(){return\"graphology\"})),e}e(r,n);var i=r.prototype;return i._resetInstanceCounters=function(){this._directedSize=0,this._undirectedSize=0,this._directedSelfLoopCount=0,this._undirectedSelfLoopCount=0},i.hasNode=function(t){return this._nodes.has(\"\"+t)},i.hasDirectedEdge=function(t,e){if(\"undirected\"===this.type)return!1;if(1===arguments.length){var n=\"\"+t,r=this._edges.get(n);return!!r&&!r.undirected}if(2===arguments.length){t=\"\"+t,e=\"\"+e;var i=this._nodes.get(t);return!!i&&i.out.hasOwnProperty(e)}throw new B(\"Graph.hasDirectedEdge: invalid arity (\".concat(arguments.length,\", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.\"))},i.hasUndirectedEdge=function(t,e){if(\"directed\"===this.type)return!1;if(1===arguments.length){var n=\"\"+t,r=this._edges.get(n);return!!r&&r.undirected}if(2===arguments.length){t=\"\"+t,e=\"\"+e;var i=this._nodes.get(t);return!!i&&i.undirected.hasOwnProperty(e)}throw new B(\"Graph.hasDirectedEdge: invalid arity (\".concat(arguments.length,\", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.\"))},i.hasEdge=function(t,e){if(1===arguments.length){var n=\"\"+t;return this._edges.has(n)}if(2===arguments.length){t=\"\"+t,e=\"\"+e;var r=this._nodes.get(t);return!!r&&(void 0!==r.out&&r.out.hasOwnProperty(e)||void 0!==r.undirected&&r.undirected.hasOwnProperty(e))}throw new B(\"Graph.hasEdge: invalid arity (\".concat(arguments.length,\", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.\"))},i.directedEdge=function(t,e){if(\"undirected\"!==this.type){if(t=\"\"+t,e=\"\"+e,this.multi)throw new I(\"Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.\");var n=this._nodes.get(t);if(!n)throw new F('Graph.directedEdge: could not find the \"'.concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F('Graph.directedEdge: could not find the \"'.concat(e,'\" target node in the graph.'));var r=n.out&&n.out[e]||void 0;return r?r.key:void 0}},i.undirectedEdge=function(t,e){if(\"directed\"!==this.type){if(t=\"\"+t,e=\"\"+e,this.multi)throw new I(\"Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.\");var n=this._nodes.get(t);if(!n)throw new F('Graph.undirectedEdge: could not find the \"'.concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F('Graph.undirectedEdge: could not find the \"'.concat(e,'\" target node in the graph.'));var r=n.undirected&&n.undirected[e]||void 0;return r?r.key:void 0}},i.edge=function(t,e){if(this.multi)throw new I(\"Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.\");t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.edge: could not find the \"'.concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F('Graph.edge: could not find the \"'.concat(e,'\" target node in the graph.'));var r=n.out&&n.out[e]||n.undirected&&n.undirected[e]||void 0;if(r)return r.key},i.areDirectedNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areDirectedNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&(e in n.in||e in n.out)},i.areOutNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areOutNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&e in n.out},i.areInNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areInNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&e in n.in},i.areUndirectedNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areUndirectedNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"directed\"!==this.type&&e in n.undirected},i.areNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&(e in n.in||e in n.out)||\"directed\"!==this.type&&e in n.undirected},i.areInboundNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areInboundNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&e in n.in||\"directed\"!==this.type&&e in n.undirected},i.areOutboundNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areOutboundNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&e in n.out||\"directed\"!==this.type&&e in n.undirected},i.inDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inDegree: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.inDegree},i.outDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outDegree: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.outDegree},i.directedDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.directedDegree: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.inDegree+e.outDegree},i.undirectedDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.undirectedDegree: could not find the \"'.concat(t,'\" node in the graph.'));return\"directed\"===this.type?0:e.undirectedDegree},i.inboundDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inboundDegree: could not find the \"'.concat(t,'\" node in the graph.'));var n=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree),\"undirected\"!==this.type&&(n+=e.inDegree),n},i.outboundDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outboundDegree: could not find the \"'.concat(t,'\" node in the graph.'));var n=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree),\"undirected\"!==this.type&&(n+=e.outDegree),n},i.degree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.degree: could not find the \"'.concat(t,'\" node in the graph.'));var n=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree),\"undirected\"!==this.type&&(n+=e.inDegree+e.outDegree),n},i.inDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.inDegree-e.directedLoops},i.outDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.outDegree-e.directedLoops},i.directedDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.directedDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.inDegree+e.outDegree-2*e.directedLoops},i.undirectedDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.undirectedDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));return\"directed\"===this.type?0:e.undirectedDegree-2*e.undirectedLoops},i.inboundDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inboundDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));var n=0,r=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree,r+=2*e.undirectedLoops),\"undirected\"!==this.type&&(n+=e.inDegree,r+=e.directedLoops),n-r},i.outboundDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outboundDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));var n=0,r=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree,r+=2*e.undirectedLoops),\"undirected\"!==this.type&&(n+=e.outDegree,r+=e.directedLoops),n-r},i.degreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.degreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));var n=0,r=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree,r+=2*e.undirectedLoops),\"undirected\"!==this.type&&(n+=e.inDegree+e.outDegree,r+=2*e.directedLoops),n-r},i.source=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.source: could not find the \"'.concat(t,'\" edge in the graph.'));return e.source.key},i.target=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.target: could not find the \"'.concat(t,'\" edge in the graph.'));return e.target.key},i.extremities=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.extremities: could not find the \"'.concat(t,'\" edge in the graph.'));return[e.source.key,e.target.key]},i.opposite=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._edges.get(e);if(!n)throw new F('Graph.opposite: could not find the \"'.concat(e,'\" edge in the graph.'));var r=n.source.key,i=n.target.key;if(t===r)return i;if(t===i)return r;throw new F('Graph.opposite: the \"'.concat(t,'\" node is not attached to the \"').concat(e,'\" edge (').concat(r,\", \").concat(i,\").\"))},i.hasExtremity=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._edges.get(t);if(!n)throw new F('Graph.hasExtremity: could not find the \"'.concat(t,'\" edge in the graph.'));return n.source.key===e||n.target.key===e},i.isUndirected=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.isUndirected: could not find the \"'.concat(t,'\" edge in the graph.'));return e.undirected},i.isDirected=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.isDirected: could not find the \"'.concat(t,'\" edge in the graph.'));return!e.undirected},i.isSelfLoop=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.isSelfLoop: could not find the \"'.concat(t,'\" edge in the graph.'));return e.source===e.target},i.addNode=function(t,e){var n=function(t,e,n){if(n&&!s(n))throw new B('Graph.addNode: invalid attributes. Expecting an object but got \"'.concat(n,'\"'));if(e=\"\"+e,n=n||{},t._nodes.has(e))throw new I('Graph.addNode: the \"'.concat(e,'\" node already exist in the graph.'));var r=new t.NodeDataClass(e,n);return t._nodes.set(e,r),t.emit(\"nodeAdded\",{key:e,attributes:n}),r}(this,t,e);return n.key},i.mergeNode=function(t,e){if(e&&!s(e))throw new B('Graph.mergeNode: invalid attributes. Expecting an object but got \"'.concat(e,'\"'));t=\"\"+t,e=e||{};var n=this._nodes.get(t);return n?(e&&(u(n.attributes,e),this.emit(\"nodeAttributesUpdated\",{type:\"merge\",key:t,attributes:n.attributes,data:e})),[t,!1]):(n=new this.NodeDataClass(t,e),this._nodes.set(t,n),this.emit(\"nodeAdded\",{key:t,attributes:e}),[t,!0])},i.updateNode=function(t,e){if(e&&\"function\"!=typeof e)throw new B('Graph.updateNode: invalid updater function. Expecting a function but got \"'.concat(e,'\"'));t=\"\"+t;var n=this._nodes.get(t);if(n){if(e){var r=n.attributes;n.attributes=e(r),this.emit(\"nodeAttributesUpdated\",{type:\"replace\",key:t,attributes:n.attributes})}return[t,!1]}var i=e?e({}):{};return n=new this.NodeDataClass(t,i),this._nodes.set(t,n),this.emit(\"nodeAdded\",{key:t,attributes:i}),[t,!0]},i.dropNode=function(t){t=\"\"+t;var e,n=this._nodes.get(t);if(!n)throw new F('Graph.dropNode: could not find the \"'.concat(t,'\" node in the graph.'));if(\"undirected\"!==this.type){for(var r in n.out){e=n.out[r];do{Mt(this,e),e=e.next}while(e)}for(var i in n.in){e=n.in[i];do{Mt(this,e),e=e.next}while(e)}}if(\"directed\"!==this.type)for(var o in n.undirected){e=n.undirected[o];do{Mt(this,e),e=e.next}while(e)}this._nodes.delete(t),this.emit(\"nodeDropped\",{key:t,attributes:n.attributes})},i.dropEdge=function(t){var e;if(arguments.length>1){var n=\"\"+arguments[0],r=\"\"+arguments[1];if(!(e=d(this,n,r,this.type)))throw new F('Graph.dropEdge: could not find the \"'.concat(n,'\" -> \"').concat(r,'\" edge in the graph.'))}else if(t=\"\"+t,!(e=this._edges.get(t)))throw new F('Graph.dropEdge: could not find the \"'.concat(t,'\" edge in the graph.'));return Mt(this,e),this},i.dropDirectedEdge=function(t,e){if(arguments.length<2)throw new I(\"Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.\");if(this.multi)throw new I(\"Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.\");var n=d(this,t=\"\"+t,e=\"\"+e,\"directed\");if(!n)throw new F('Graph.dropDirectedEdge: could not find a \"'.concat(t,'\" -> \"').concat(e,'\" edge in the graph.'));return Mt(this,n),this},i.dropUndirectedEdge=function(t,e){if(arguments.length<2)throw new I(\"Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.\");if(this.multi)throw new I(\"Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.\");var n=d(this,t,e,\"undirected\");if(!n)throw new F('Graph.dropUndirectedEdge: could not find a \"'.concat(t,'\" -> \"').concat(e,'\" edge in the graph.'));return Mt(this,n),this},i.clear=function(){this._edges.clear(),this._nodes.clear(),this._resetInstanceCounters(),this.emit(\"cleared\")},i.clearEdges=function(){for(var t,e=this._nodes.values();!0!==(t=e.next()).done;)t.value.clear();this._edges.clear(),this._resetInstanceCounters(),this.emit(\"edgesCleared\")},i.getAttribute=function(t){return this._attributes[t]},i.getAttributes=function(){return this._attributes},i.hasAttribute=function(t){return this._attributes.hasOwnProperty(t)},i.setAttribute=function(t,e){return this._attributes[t]=e,this.emit(\"attributesUpdated\",{type:\"set\",attributes:this._attributes,name:t}),this},i.updateAttribute=function(t,e){if(\"function\"!=typeof e)throw new B(\"Graph.updateAttribute: updater should be a function.\");var n=this._attributes[t];return this._attributes[t]=e(n),this.emit(\"attributesUpdated\",{type:\"set\",attributes:this._attributes,name:t}),this},i.removeAttribute=function(t){return delete this._attributes[t],this.emit(\"attributesUpdated\",{type:\"remove\",attributes:this._attributes,name:t}),this},i.replaceAttributes=function(t){if(!s(t))throw new B(\"Graph.replaceAttributes: provided attributes are not a plain object.\");return this._attributes=t,this.emit(\"attributesUpdated\",{type:\"replace\",attributes:this._attributes}),this},i.mergeAttributes=function(t){if(!s(t))throw new B(\"Graph.mergeAttributes: provided attributes are not a plain object.\");return u(this._attributes,t),this.emit(\"attributesUpdated\",{type:\"merge\",attributes:this._attributes,data:t}),this},i.updateAttributes=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.updateAttributes: provided updater is not a function.\");return this._attributes=t(this._attributes),this.emit(\"attributesUpdated\",{type:\"update\",attributes:this._attributes}),this},i.updateEachNodeAttributes=function(t,e){if(\"function\"!=typeof t)throw new B(\"Graph.updateEachNodeAttributes: expecting an updater function.\");if(e&&!l(e))throw new B(\"Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}\");for(var n,r,i=this._nodes.values();!0!==(n=i.next()).done;)(r=n.value).attributes=t(r.key,r.attributes);this.emit(\"eachNodeAttributesUpdated\",{hints:e||null})},i.updateEachEdgeAttributes=function(t,e){if(\"function\"!=typeof t)throw new B(\"Graph.updateEachEdgeAttributes: expecting an updater function.\");if(e&&!l(e))throw new B(\"Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}\");for(var n,r,i,o,a=this._edges.values();!0!==(n=a.next()).done;)i=(r=n.value).source,o=r.target,r.attributes=t(r.key,r.attributes,i.key,o.key,i.attributes,o.attributes,r.undirected);this.emit(\"eachEdgeAttributesUpdated\",{hints:e||null})},i.forEachAdjacencyEntry=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.forEachAdjacencyEntry: expecting a callback.\");xt(!1,!1,!1,this,t)},i.forEachAdjacencyEntryWithOrphans=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.\");xt(!1,!1,!0,this,t)},i.forEachAssymetricAdjacencyEntry=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.forEachAssymetricAdjacencyEntry: expecting a callback.\");xt(!1,!0,!1,this,t)},i.forEachAssymetricAdjacencyEntryWithOrphans=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.\");xt(!1,!0,!0,this,t)},i.nodes=function(){return\"function\"==typeof Array.from?Array.from(this._nodes.keys()):K(this._nodes.keys(),this._nodes.size)},i.forEachNode=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.forEachNode: expecting a callback.\");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)t((n=e.value).key,n.attributes)},i.findNode=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.findNode: expecting a callback.\");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)if(t((n=e.value).key,n.attributes))return n.key},i.mapNodes=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.mapNode: expecting a callback.\");for(var e,n,r=this._nodes.values(),i=new Array(this.order),o=0;!0!==(e=r.next()).done;)n=e.value,i[o++]=t(n.key,n.attributes);return i},i.someNode=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.someNode: expecting a callback.\");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)if(t((n=e.value).key,n.attributes))return!0;return!1},i.everyNode=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.everyNode: expecting a callback.\");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)if(!t((n=e.value).key,n.attributes))return!1;return!0},i.filterNodes=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.filterNodes: expecting a callback.\");for(var e,n,r=this._nodes.values(),i=[];!0!==(e=r.next()).done;)t((n=e.value).key,n.attributes)&&i.push(n.key);return i},i.reduceNodes=function(t,e){if(\"function\"!=typeof t)throw new B(\"Graph.reduceNodes: expecting a callback.\");if(arguments.length<2)throw new B(\"Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.\");for(var n,r,i=e,o=this._nodes.values();!0!==(n=o.next()).done;)i=t(i,(r=n.value).key,r.attributes);return i},i.nodeEntries=function(){var t=this._nodes.values();return new O((function(){var e=t.next();if(e.done)return e;var n=e.value;return{value:{node:n.key,attributes:n.attributes},done:!1}}))},i.export=function(){var t=this,e=new Array(this._nodes.size),n=0;this._nodes.forEach((function(t,r){e[n++]=function(t,e){var n={key:t};return h(e.attributes)||(n.attributes=u({},e.attributes)),n}(r,t)}));var r=new Array(this._edges.size);return n=0,this._edges.forEach((function(e,i){r[n++]=function(t,e,n){var r={key:e,source:n.source.key,target:n.target.key};return h(n.attributes)||(r.attributes=u({},n.attributes)),\"mixed\"===t&&n.undirected&&(r.undirected=!0),r}(t.type,i,e)})),{options:{type:this.type,multi:this.multi,allowSelfLoops:this.allowSelfLoops},attributes:this.getAttributes(),nodes:e,edges:r}},i.import=function(t){var e,n,i,o,a,c=this,u=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(t instanceof r)return t.forEachNode((function(t,e){u?c.mergeNode(t,e):c.addNode(t,e)})),t.forEachEdge((function(t,e,n,r,i,o,a){u?a?c.mergeUndirectedEdgeWithKey(t,n,r,e):c.mergeDirectedEdgeWithKey(t,n,r,e):a?c.addUndirectedEdgeWithKey(t,n,r,e):c.addDirectedEdgeWithKey(t,n,r,e)})),this;if(!s(t))throw new B(\"Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.\");if(t.attributes){if(!s(t.attributes))throw new B(\"Graph.import: invalid attributes. Expecting a plain object.\");u?this.mergeAttributes(t.attributes):this.replaceAttributes(t.attributes)}if(t.nodes){if(i=t.nodes,!Array.isArray(i))throw new B(\"Graph.import: invalid nodes. Expecting an array.\");for(e=0,n=i.length;e<n;e++){Et(o=i[e]);var d=o,h=d.key,p=d.attributes;u?this.mergeNode(h,p):this.addNode(h,p)}}if(t.edges){var f=!1;if(\"undirected\"===this.type&&(f=!0),i=t.edges,!Array.isArray(i))throw new B(\"Graph.import: invalid edges. Expecting an array.\");for(e=0,n=i.length;e<n;e++){At(a=i[e]);var l=a,g=l.source,y=l.target,w=l.attributes,v=l.undirected,b=void 0===v?f:v;\"key\"in a?(u?b?this.mergeUndirectedEdgeWithKey:this.mergeDirectedEdgeWithKey:b?this.addUndirectedEdgeWithKey:this.addDirectedEdgeWithKey).call(this,a.key,g,y,w):(u?b?this.mergeUndirectedEdge:this.mergeDirectedEdge:b?this.addUndirectedEdge:this.addDirectedEdge).call(this,g,y,w)}}return this},i.nullCopy=function(t){var e=new r(u({},this._options,t));return e.replaceAttributes(u({},this.getAttributes())),e},i.emptyCopy=function(t){var e=this.nullCopy(t);return this._nodes.forEach((function(t,n){var r=u({},t.attributes);t=new e.NodeDataClass(n,r),e._nodes.set(n,t)})),e},i.copy=function(t){if(\"string\"==typeof(t=t||{}).type&&t.type!==this.type&&\"mixed\"!==t.type)throw new I('Graph.copy: cannot create an incompatible copy from \"'.concat(this.type,'\" type to \"').concat(t.type,'\" because this would mean losing information about the current graph.'));if(\"boolean\"==typeof t.multi&&t.multi!==this.multi&&!0!==t.multi)throw new I(\"Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.\");if(\"boolean\"==typeof t.allowSelfLoops&&t.allowSelfLoops!==this.allowSelfLoops&&!0!==t.allowSelfLoops)throw new I(\"Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.\");for(var e,n,r=this.emptyCopy(t),i=this._edges.values();!0!==(e=i.next()).done;)jt(r,\"copy\",!1,(n=e.value).undirected,n.key,n.source.key,n.target.key,u({},n.attributes));return r},i.toJSON=function(){return this.export()},i.toString=function(){return\"[object Graph]\"},i.inspect=function(){var e=this,n={};this._nodes.forEach((function(t,e){n[e]=t.attributes}));var r={},i={};this._edges.forEach((function(t,n){var o,a=t.undirected?\"--\":\"->\",c=\"\",u=t.source.key,d=t.target.key;t.undirected&&u>d&&(o=u,u=d,d=o);var s=\"(\".concat(u,\")\").concat(a,\"(\").concat(d,\")\");n.startsWith(\"geid_\")?e.multi&&(void 0===i[s]?i[s]=0:i[s]++,c+=\"\".concat(i[s],\". \")):c+=\"[\".concat(n,\"]: \"),r[c+=s]=t.attributes}));var o={};for(var a in this)this.hasOwnProperty(a)&&!Ut.has(a)&&\"function\"!=typeof this[a]&&\"symbol\"!==t(a)&&(o[a]=this[a]);return o.attributes=this._attributes,o.nodes=n,o.edges=r,p(o,\"constructor\",this.constructor),o},r}(y.exports.EventEmitter);\"undefined\"!=typeof Symbol&&(zt.prototype[Symbol.for(\"nodejs.util.inspect.custom\")]=zt.prototype.inspect),[{name:function(t){return\"\".concat(t,\"Edge\")},generateKey:!0},{name:function(t){return\"\".concat(t,\"DirectedEdge\")},generateKey:!0,type:\"directed\"},{name:function(t){return\"\".concat(t,\"UndirectedEdge\")},generateKey:!0,type:\"undirected\"},{name:function(t){return\"\".concat(t,\"EdgeWithKey\")}},{name:function(t){return\"\".concat(t,\"DirectedEdgeWithKey\")},type:\"directed\"},{name:function(t){return\"\".concat(t,\"UndirectedEdgeWithKey\")},type:\"undirected\"}].forEach((function(t){[\"add\",\"merge\",\"update\"].forEach((function(e){var n=t.name(e),r=\"add\"===e?jt:Ct;t.generateKey?zt.prototype[n]=function(i,o,a){return r(this,n,!0,\"undirected\"===(t.type||this.type),null,i,o,a,\"update\"===e)}:zt.prototype[n]=function(i,o,a,c){return r(this,n,!1,\"undirected\"===(t.type||this.type),i,o,a,c,\"update\"===e)}}))})),function(t){Q.forEach((function(e){var n=e.name,r=e.attacher;r(t,n(\"Node\"),0),r(t,n(\"Source\"),1),r(t,n(\"Target\"),2),r(t,n(\"Opposite\"),3)}))}(zt),function(t){X.forEach((function(e){var n=e.name,r=e.attacher;r(t,n(\"Edge\"),\"mixed\"),r(t,n(\"DirectedEdge\"),\"directed\"),r(t,n(\"UndirectedEdge\"),\"undirected\")}))}(zt),function(t){et.forEach((function(e){!function(t,e){var n=e.name,r=e.type,i=e.direction;t.prototype[n]=function(t,e){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return[];if(!arguments.length)return ut(this,r);if(1===arguments.length){t=\"\"+t;var o=this._nodes.get(t);if(void 0===o)throw new F(\"Graph.\".concat(n,': could not find the \"').concat(t,'\" node in the graph.'));return pt(this.multi,\"mixed\"===r?this.type:r,i,o)}if(2===arguments.length){t=\"\"+t,e=\"\"+e;var a=this._nodes.get(t);if(!a)throw new F(\"Graph.\".concat(n,':  could not find the \"').concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F(\"Graph.\".concat(n,':  could not find the \"').concat(e,'\" target node in the graph.'));return gt(r,this.multi,i,a,e)}throw new B(\"Graph.\".concat(n,\": too many arguments (expecting 0, 1 or 2 and got \").concat(arguments.length,\").\"))}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=\"forEach\"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[o]=function(t,e,n){if(\"mixed\"===r||\"mixed\"===this.type||r===this.type){if(1===arguments.length)return dt(!1,this,r,n=t);if(2===arguments.length){t=\"\"+t,n=e;var a=this._nodes.get(t);if(void 0===a)throw new F(\"Graph.\".concat(o,': could not find the \"').concat(t,'\" node in the graph.'));return ht(!1,this.multi,\"mixed\"===r?this.type:r,i,a,n)}if(3===arguments.length){t=\"\"+t,e=\"\"+e;var c=this._nodes.get(t);if(!c)throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(e,'\" target node in the graph.'));return lt(!1,r,this.multi,i,c,e,n)}throw new B(\"Graph.\".concat(o,\": too many arguments (expecting 1, 2 or 3 and got \").concat(arguments.length,\").\"))}};var a=\"map\"+n[0].toUpperCase()+n.slice(1);t.prototype[a]=function(){var t,e=Array.prototype.slice.call(arguments),n=e.pop();if(0===e.length){var i=0;\"directed\"!==r&&(i+=this.undirectedSize),\"undirected\"!==r&&(i+=this.directedSize),t=new Array(i);var a=0;e.push((function(e,r,i,o,c,u,d){t[a++]=n(e,r,i,o,c,u,d)}))}else t=[],e.push((function(e,r,i,o,a,c,u){t.push(n(e,r,i,o,a,c,u))}));return this[o].apply(this,e),t};var c=\"filter\"+n[0].toUpperCase()+n.slice(1);t.prototype[c]=function(){var t=Array.prototype.slice.call(arguments),e=t.pop(),n=[];return t.push((function(t,r,i,o,a,c,u){e(t,r,i,o,a,c,u)&&n.push(t)})),this[o].apply(this,t),n};var u=\"reduce\"+n[0].toUpperCase()+n.slice(1);t.prototype[u]=function(){var t,e,n=Array.prototype.slice.call(arguments);if(n.length<2||n.length>4)throw new B(\"Graph.\".concat(u,\": invalid number of arguments (expecting 2, 3 or 4 and got \").concat(n.length,\").\"));if(\"function\"==typeof n[n.length-1]&&\"function\"!=typeof n[n.length-2])throw new B(\"Graph.\".concat(u,\": missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.\"));2===n.length?(t=n[0],e=n[1],n=[]):3===n.length?(t=n[1],e=n[2],n=[n[0]]):4===n.length&&(t=n[2],e=n[3],n=[n[0],n[1]]);var r=e;return n.push((function(e,n,i,o,a,c,u){r=t(r,e,n,i,o,a,c,u)})),this[o].apply(this,n),r}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=\"find\"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[o]=function(t,e,n){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return!1;if(1===arguments.length)return dt(!0,this,r,n=t);if(2===arguments.length){t=\"\"+t,n=e;var a=this._nodes.get(t);if(void 0===a)throw new F(\"Graph.\".concat(o,': could not find the \"').concat(t,'\" node in the graph.'));return ht(!0,this.multi,\"mixed\"===r?this.type:r,i,a,n)}if(3===arguments.length){t=\"\"+t,e=\"\"+e;var c=this._nodes.get(t);if(!c)throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(e,'\" target node in the graph.'));return lt(!0,r,this.multi,i,c,e,n)}throw new B(\"Graph.\".concat(o,\": too many arguments (expecting 1, 2 or 3 and got \").concat(arguments.length,\").\"))};var a=\"some\"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[a]=function(){var t=Array.prototype.slice.call(arguments),e=t.pop();return t.push((function(t,n,r,i,o,a,c){return e(t,n,r,i,o,a,c)})),!!this[o].apply(this,t)};var c=\"every\"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[c]=function(){var t=Array.prototype.slice.call(arguments),e=t.pop();return t.push((function(t,n,r,i,o,a,c){return!e(t,n,r,i,o,a,c)})),!this[o].apply(this,t)}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=n.slice(0,-1)+\"Entries\";t.prototype[o]=function(t,e){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return O.empty();if(!arguments.length)return st(this,r);if(1===arguments.length){t=\"\"+t;var n=this._nodes.get(t);if(!n)throw new F(\"Graph.\".concat(o,': could not find the \"').concat(t,'\" node in the graph.'));return ft(r,i,n)}if(2===arguments.length){t=\"\"+t,e=\"\"+e;var a=this._nodes.get(t);if(!a)throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(e,'\" target node in the graph.'));return yt(r,i,a,e)}throw new B(\"Graph.\".concat(o,\": too many arguments (expecting 0, 1 or 2 and got \").concat(arguments.length,\").\"))}}(t,e)}))}(zt),function(t){wt.forEach((function(e){_t(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=\"forEach\"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[o]=function(t,e){if(\"mixed\"===r||\"mixed\"===this.type||r===this.type){t=\"\"+t;var n=this._nodes.get(t);if(void 0===n)throw new F(\"Graph.\".concat(o,': could not find the \"').concat(t,'\" node in the graph.'));mt(!1,\"mixed\"===r?this.type:r,i,n,e)}};var a=\"map\"+n[0].toUpperCase()+n.slice(1);t.prototype[a]=function(t,e){var n=[];return this[o](t,(function(t,r){n.push(e(t,r))})),n};var c=\"filter\"+n[0].toUpperCase()+n.slice(1);t.prototype[c]=function(t,e){var n=[];return this[o](t,(function(t,r){e(t,r)&&n.push(t)})),n};var u=\"reduce\"+n[0].toUpperCase()+n.slice(1);t.prototype[u]=function(t,e,n){if(arguments.length<3)throw new B(\"Graph.\".concat(u,\": missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.\"));var r=n;return this[o](t,(function(t,n){r=e(r,t,n)})),r}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=n[0].toUpperCase()+n.slice(1,-1),a=\"find\"+o;t.prototype[a]=function(t,e){if(\"mixed\"===r||\"mixed\"===this.type||r===this.type){t=\"\"+t;var n=this._nodes.get(t);if(void 0===n)throw new F(\"Graph.\".concat(a,': could not find the \"').concat(t,'\" node in the graph.'));return mt(!0,\"mixed\"===r?this.type:r,i,n,e)}};var c=\"some\"+o;t.prototype[c]=function(t,e){return!!this[a](t,e)};var u=\"every\"+o;t.prototype[u]=function(t,e){return!this[a](t,(function(t,n){return!e(t,n)}))}}(t,e),Gt(t,e)}))}(zt);var Wt=function(t){function n(e){var n=u({type:\"directed\"},e);if(\"multi\"in n&&!1!==n.multi)throw new B(\"DirectedGraph.from: inconsistent indication that the graph should be multi in given options!\");if(\"directed\"!==n.type)throw new B('DirectedGraph.from: inconsistent \"'+n.type+'\" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt),Pt=function(t){function n(e){var n=u({type:\"undirected\"},e);if(\"multi\"in n&&!1!==n.multi)throw new B(\"UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!\");if(\"undirected\"!==n.type)throw new B('UndirectedGraph.from: inconsistent \"'+n.type+'\" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt),Rt=function(t){function n(e){var n=u({multi:!0},e);if(\"multi\"in n&&!0!==n.multi)throw new B(\"MultiGraph.from: inconsistent indication that the graph should be simple in given options!\");return t.call(this,n)||this}return e(n,t),n}(zt),Kt=function(t){function n(e){var n=u({type:\"directed\",multi:!0},e);if(\"multi\"in n&&!0!==n.multi)throw new B(\"MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!\");if(\"directed\"!==n.type)throw new B('MultiDirectedGraph.from: inconsistent \"'+n.type+'\" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt),Tt=function(t){function n(e){var n=u({type:\"undirected\",multi:!0},e);if(\"multi\"in n&&!0!==n.multi)throw new B(\"MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!\");if(\"undirected\"!==n.type)throw new B('MultiUndirectedGraph.from: inconsistent \"'+n.type+'\" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt);function Bt(t){t.from=function(e,n){var r=u({},e.options,n),i=new t(r);return i.import(e),i}}return Bt(zt),Bt(Wt),Bt(Pt),Bt(Rt),Bt(Kt),Bt(Tt),zt.Graph=zt,zt.DirectedGraph=Wt,zt.UndirectedGraph=Pt,zt.MultiGraph=Rt,zt.MultiDirectedGraph=Kt,zt.MultiUndirectedGraph=Tt,zt.InvalidArgumentsGraphError=B,zt.NotFoundGraphError=F,zt.UsageGraphError=I,zt}));\n//# sourceMappingURL=graphology.umd.min.js.map\n\n\n//# sourceURL=webpack://three-deg/./node_modules/graphology/dist/graphology.umd.min.js?");

/***/ }),

/***/ "./node_modules/sigma/core/camera.js":
/*!*******************************************!*\
  !*** ./node_modules/sigma/core/camera.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Sigma.js Camera Class\n * ======================\n *\n * Class designed to store camera information & used to update it.\n * @module\n */\nvar animate_1 = __webpack_require__(/*! ../utils/animate */ \"./node_modules/sigma/utils/animate.js\");\nvar easings_1 = __importDefault(__webpack_require__(/*! ../utils/easings */ \"./node_modules/sigma/utils/easings.js\"));\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/sigma/utils/index.js\");\nvar types_1 = __webpack_require__(/*! ../types */ \"./node_modules/sigma/types.js\");\n/**\n * Defaults.\n */\nvar DEFAULT_ZOOMING_RATIO = 1.5;\n/**\n * Camera class\n *\n * @constructor\n */\nvar Camera = /** @class */ (function (_super) {\n    __extends(Camera, _super);\n    function Camera() {\n        var _this = _super.call(this) || this;\n        _this.x = 0.5;\n        _this.y = 0.5;\n        _this.angle = 0;\n        _this.ratio = 1;\n        _this.minRatio = null;\n        _this.maxRatio = null;\n        _this.nextFrame = null;\n        _this.previousState = null;\n        _this.enabled = true;\n        // State\n        _this.previousState = _this.getState();\n        return _this;\n    }\n    /**\n     * Static method used to create a Camera object with a given state.\n     *\n     * @param state\n     * @return {Camera}\n     */\n    Camera.from = function (state) {\n        var camera = new Camera();\n        return camera.setState(state);\n    };\n    /**\n     * Method used to enable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.enable = function () {\n        this.enabled = true;\n        return this;\n    };\n    /**\n     * Method used to disable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.disable = function () {\n        this.enabled = false;\n        return this;\n    };\n    /**\n     * Method used to retrieve the camera's current state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getState = function () {\n        return {\n            x: this.x,\n            y: this.y,\n            angle: this.angle,\n            ratio: this.ratio,\n        };\n    };\n    /**\n     * Method used to check whether the camera has the given state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.hasState = function (state) {\n        return this.x === state.x && this.y === state.y && this.ratio === state.ratio && this.angle === state.angle;\n    };\n    /**\n     * Method used to retrieve the camera's previous state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getPreviousState = function () {\n        var state = this.previousState;\n        if (!state)\n            return null;\n        return {\n            x: state.x,\n            y: state.y,\n            angle: state.angle,\n            ratio: state.ratio,\n        };\n    };\n    /**\n     * Method used to check minRatio and maxRatio values.\n     *\n     * @param ratio\n     * @return {number}\n     */\n    Camera.prototype.getBoundedRatio = function (ratio) {\n        var r = ratio;\n        if (typeof this.minRatio === \"number\")\n            r = Math.max(r, this.minRatio);\n        if (typeof this.maxRatio === \"number\")\n            r = Math.min(r, this.maxRatio);\n        return r;\n    };\n    /**\n     * Method used to check various things to return a legit state candidate.\n     *\n     * @param state\n     * @return {object}\n     */\n    Camera.prototype.validateState = function (state) {\n        var validatedState = {};\n        if (typeof state.x === \"number\")\n            validatedState.x = state.x;\n        if (typeof state.y === \"number\")\n            validatedState.y = state.y;\n        if (typeof state.angle === \"number\")\n            validatedState.angle = state.angle;\n        if (typeof state.ratio === \"number\")\n            validatedState.ratio = this.getBoundedRatio(state.ratio);\n        return validatedState;\n    };\n    /**\n     * Method used to check whether the camera is currently being animated.\n     *\n     * @return {boolean}\n     */\n    Camera.prototype.isAnimated = function () {\n        return !!this.nextFrame;\n    };\n    /**\n     * Method used to set the camera's state.\n     *\n     * @param  {object} state - New state.\n     * @return {Camera}\n     */\n    Camera.prototype.setState = function (state) {\n        if (!this.enabled)\n            return this;\n        // TODO: update by function\n        // Keeping track of last state\n        this.previousState = this.getState();\n        var validState = this.validateState(state);\n        if (typeof validState.x === \"number\")\n            this.x = validState.x;\n        if (typeof validState.y === \"number\")\n            this.y = validState.y;\n        if (typeof validState.angle === \"number\")\n            this.angle = validState.angle;\n        if (typeof validState.ratio === \"number\")\n            this.ratio = validState.ratio;\n        // Emitting\n        if (!this.hasState(this.previousState))\n            this.emit(\"updated\", this.getState());\n        return this;\n    };\n    /**\n     * Method used to update the camera's state using a function.\n     *\n     * @param  {function} updater - Updated function taking current state and\n     *                              returning next state.\n     * @return {Camera}\n     */\n    Camera.prototype.updateState = function (updater) {\n        this.setState(updater(this.getState()));\n        return this;\n    };\n    /**\n     * Method used to animate the camera.\n     *\n     * @param  {object}                    state      - State to reach eventually.\n     * @param  {object}                    opts       - Options:\n     * @param  {number}                      duration - Duration of the animation.\n     * @param  {string | number => number}   easing   - Easing function or name of an existing one\n     * @param  {function}                  callback   - Callback\n     */\n    Camera.prototype.animate = function (state, opts, callback) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        var options = Object.assign({}, animate_1.ANIMATE_DEFAULTS, opts);\n        var validState = this.validateState(state);\n        var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n        // State\n        var start = Date.now(), initialState = this.getState();\n        // Function performing the animation\n        var fn = function () {\n            var t = (Date.now() - start) / options.duration;\n            // The animation is over:\n            if (t >= 1) {\n                _this.nextFrame = null;\n                _this.setState(validState);\n                if (_this.animationCallback) {\n                    _this.animationCallback.call(null);\n                    _this.animationCallback = undefined;\n                }\n                return;\n            }\n            var coefficient = easing(t);\n            var newState = {};\n            if (typeof validState.x === \"number\")\n                newState.x = initialState.x + (validState.x - initialState.x) * coefficient;\n            if (typeof validState.y === \"number\")\n                newState.y = initialState.y + (validState.y - initialState.y) * coefficient;\n            if (typeof validState.angle === \"number\")\n                newState.angle = initialState.angle + (validState.angle - initialState.angle) * coefficient;\n            if (typeof validState.ratio === \"number\")\n                newState.ratio = initialState.ratio + (validState.ratio - initialState.ratio) * coefficient;\n            _this.setState(newState);\n            _this.nextFrame = (0, utils_1.requestFrame)(fn);\n        };\n        if (this.nextFrame) {\n            (0, utils_1.cancelFrame)(this.nextFrame);\n            if (this.animationCallback)\n                this.animationCallback.call(null);\n            this.nextFrame = (0, utils_1.requestFrame)(fn);\n        }\n        else {\n            fn();\n        }\n        this.animationCallback = callback;\n    };\n    /**\n     * Method used to zoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     * @return {function}\n     */\n    Camera.prototype.animatedZoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio / DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio / factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to unzoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     */\n    Camera.prototype.animatedUnzoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio * DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio * factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to reset the camera.\n     *\n     * @param  {object} options - Options.\n     */\n    Camera.prototype.animatedReset = function (options) {\n        this.animate({\n            x: 0.5,\n            y: 0.5,\n            ratio: 1,\n            angle: 0,\n        }, options);\n    };\n    /**\n     * Returns a new Camera instance, with the same state as the current camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.copy = function () {\n        return Camera.from(this.getState());\n    };\n    return Camera;\n}(types_1.TypedEventEmitter));\nexports[\"default\"] = Camera;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/core/camera.js?");

/***/ }),

/***/ "./node_modules/sigma/core/captors/captor.js":
/*!***************************************************!*\
  !*** ./node_modules/sigma/core/captors/captor.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getWheelDelta = exports.getTouchCoords = exports.getTouchesArray = exports.getWheelCoords = exports.getMouseCoords = exports.getPosition = void 0;\n/**\n * Sigma.js Captor Class\n * ======================\n * @module\n */\nvar types_1 = __webpack_require__(/*! ../../types */ \"./node_modules/sigma/types.js\");\n/**\n * Captor utils functions\n * ======================\n */\n/**\n * Extract the local X and Y coordinates from a mouse event or touch object. If\n * a DOM element is given, it uses this element's offset to compute the position\n * (this allows using events that are not bound to the container itself and\n * still have a proper position).\n *\n * @param  {event}       e - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {number}      The local Y value of the mouse.\n */\nfunction getPosition(e, dom) {\n    var bbox = dom.getBoundingClientRect();\n    return {\n        x: e.clientX - bbox.left,\n        y: e.clientY - bbox.top,\n    };\n}\nexports.getPosition = getPosition;\n/**\n * Convert mouse coords to sigma coords.\n *\n * @param  {event}       e   - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getMouseCoords(e, dom) {\n    var res = __assign(__assign({}, getPosition(e, dom)), { sigmaDefaultPrevented: false, preventSigmaDefault: function () {\n            res.sigmaDefaultPrevented = true;\n        }, original: e });\n    return res;\n}\nexports.getMouseCoords = getMouseCoords;\n/**\n * Convert mouse wheel event coords to sigma coords.\n *\n * @param  {event}       e   - A wheel mouse event.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getWheelCoords(e, dom) {\n    return __assign(__assign({}, getMouseCoords(e, dom)), { delta: getWheelDelta(e) });\n}\nexports.getWheelCoords = getWheelCoords;\nvar MAX_TOUCHES = 2;\nfunction getTouchesArray(touches) {\n    var arr = [];\n    for (var i = 0, l = Math.min(touches.length, MAX_TOUCHES); i < l; i++)\n        arr.push(touches[i]);\n    return arr;\n}\nexports.getTouchesArray = getTouchesArray;\n/**\n * Convert touch coords to sigma coords.\n *\n * @param  {event}       e   - A touch event.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getTouchCoords(e, dom) {\n    return {\n        touches: getTouchesArray(e.touches).map(function (touch) { return getPosition(touch, dom); }),\n        original: e,\n    };\n}\nexports.getTouchCoords = getTouchCoords;\n/**\n * Extract the wheel delta from a mouse event or touch object.\n *\n * @param  {event}  e - A mouse event or touch object.\n * @return {number}     The wheel delta of the mouse.\n */\nfunction getWheelDelta(e) {\n    // TODO: check those ratios again to ensure a clean Chrome/Firefox compat\n    if (typeof e.deltaY !== \"undefined\")\n        return (e.deltaY * -3) / 360;\n    if (typeof e.detail !== \"undefined\")\n        return e.detail / -9;\n    throw new Error(\"Captor: could not extract delta from event.\");\n}\nexports.getWheelDelta = getWheelDelta;\n/**\n * Abstract class representing a captor like the user's mouse or touch controls.\n */\nvar Captor = /** @class */ (function (_super) {\n    __extends(Captor, _super);\n    function Captor(container, renderer) {\n        var _this = _super.call(this) || this;\n        // Properties\n        _this.container = container;\n        _this.renderer = renderer;\n        return _this;\n    }\n    return Captor;\n}(types_1.TypedEventEmitter));\nexports[\"default\"] = Captor;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/core/captors/captor.js?");

/***/ }),

/***/ "./node_modules/sigma/core/captors/mouse.js":
/*!**************************************************!*\
  !*** ./node_modules/sigma/core/captors/mouse.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar captor_1 = __importStar(__webpack_require__(/*! ./captor */ \"./node_modules/sigma/core/captors/captor.js\"));\n/**\n * Constants.\n */\nvar DRAG_TIMEOUT = 100;\nvar DRAGGED_EVENTS_TOLERANCE = 3;\nvar MOUSE_INERTIA_DURATION = 200;\nvar MOUSE_INERTIA_RATIO = 3;\nvar MOUSE_ZOOM_DURATION = 250;\nvar ZOOMING_RATIO = 1.7;\nvar DOUBLE_CLICK_TIMEOUT = 300;\nvar DOUBLE_CLICK_ZOOMING_RATIO = 2.2;\nvar DOUBLE_CLICK_ZOOMING_DURATION = 200;\n/**\n * Mouse captor class.\n *\n * @constructor\n */\nvar MouseCaptor = /** @class */ (function (_super) {\n    __extends(MouseCaptor, _super);\n    function MouseCaptor(container, renderer) {\n        var _this = _super.call(this, container, renderer) || this;\n        // State\n        _this.enabled = true;\n        _this.draggedEvents = 0;\n        _this.downStartTime = null;\n        _this.lastMouseX = null;\n        _this.lastMouseY = null;\n        _this.isMouseDown = false;\n        _this.isMoving = false;\n        _this.movingTimeout = null;\n        _this.startCameraState = null;\n        _this.clicks = 0;\n        _this.doubleClickTimeout = null;\n        _this.currentWheelDirection = 0;\n        // Binding methods\n        _this.handleClick = _this.handleClick.bind(_this);\n        _this.handleRightClick = _this.handleRightClick.bind(_this);\n        _this.handleDown = _this.handleDown.bind(_this);\n        _this.handleUp = _this.handleUp.bind(_this);\n        _this.handleMove = _this.handleMove.bind(_this);\n        _this.handleWheel = _this.handleWheel.bind(_this);\n        _this.handleOut = _this.handleOut.bind(_this);\n        // Binding events\n        container.addEventListener(\"click\", _this.handleClick, false);\n        container.addEventListener(\"contextmenu\", _this.handleRightClick, false);\n        container.addEventListener(\"mousedown\", _this.handleDown, false);\n        container.addEventListener(\"wheel\", _this.handleWheel, false);\n        container.addEventListener(\"mouseout\", _this.handleOut, false);\n        document.addEventListener(\"mousemove\", _this.handleMove, false);\n        document.addEventListener(\"mouseup\", _this.handleUp, false);\n        return _this;\n    }\n    MouseCaptor.prototype.kill = function () {\n        var container = this.container;\n        container.removeEventListener(\"click\", this.handleClick);\n        container.removeEventListener(\"contextmenu\", this.handleRightClick);\n        container.removeEventListener(\"mousedown\", this.handleDown);\n        container.removeEventListener(\"wheel\", this.handleWheel);\n        container.removeEventListener(\"mouseout\", this.handleOut);\n        document.removeEventListener(\"mousemove\", this.handleMove);\n        document.removeEventListener(\"mouseup\", this.handleUp);\n    };\n    MouseCaptor.prototype.handleClick = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        this.clicks++;\n        if (this.clicks === 2) {\n            this.clicks = 0;\n            if (typeof this.doubleClickTimeout === \"number\") {\n                clearTimeout(this.doubleClickTimeout);\n                this.doubleClickTimeout = null;\n            }\n            return this.handleDoubleClick(e);\n        }\n        setTimeout(function () {\n            _this.clicks = 0;\n            _this.doubleClickTimeout = null;\n        }, DOUBLE_CLICK_TIMEOUT);\n        // NOTE: this is here to prevent click events on drag\n        if (this.draggedEvents < DRAGGED_EVENTS_TOLERANCE)\n            this.emit(\"click\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleRightClick = function (e) {\n        if (!this.enabled)\n            return;\n        this.emit(\"rightClick\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleDoubleClick = function (e) {\n        if (!this.enabled)\n            return;\n        e.preventDefault();\n        e.stopPropagation();\n        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\n        this.emit(\"doubleClick\", mouseCoords);\n        if (mouseCoords.sigmaDefaultPrevented)\n            return;\n        // default behavior\n        var camera = this.renderer.getCamera();\n        var newRatio = camera.getBoundedRatio(camera.getState().ratio / DOUBLE_CLICK_ZOOMING_RATIO);\n        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\n            easing: \"quadraticInOut\",\n            duration: DOUBLE_CLICK_ZOOMING_DURATION,\n        });\n    };\n    MouseCaptor.prototype.handleDown = function (e) {\n        if (!this.enabled)\n            return;\n        // We only start dragging on left button\n        if (e.button === 0) {\n            this.startCameraState = this.renderer.getCamera().getState();\n            var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;\n            this.lastMouseX = x;\n            this.lastMouseY = y;\n            this.draggedEvents = 0;\n            this.downStartTime = Date.now();\n            this.isMouseDown = true;\n        }\n        this.emit(\"mousedown\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleUp = function (e) {\n        var _this = this;\n        if (!this.enabled || !this.isMouseDown)\n            return;\n        var camera = this.renderer.getCamera();\n        this.isMouseDown = false;\n        if (typeof this.movingTimeout === \"number\") {\n            clearTimeout(this.movingTimeout);\n            this.movingTimeout = null;\n        }\n        var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;\n        var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };\n        if (this.isMoving) {\n            camera.animate({\n                x: cameraState.x + MOUSE_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n                y: cameraState.y + MOUSE_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\n            }, {\n                duration: MOUSE_INERTIA_DURATION,\n                easing: \"quadraticOut\",\n            });\n        }\n        else if (this.lastMouseX !== x || this.lastMouseY !== y) {\n            camera.setState({\n                x: cameraState.x,\n                y: cameraState.y,\n            });\n        }\n        this.isMoving = false;\n        setTimeout(function () {\n            var shouldRefresh = _this.draggedEvents > 0;\n            _this.draggedEvents = 0;\n            // NOTE: this refresh is here to make sure `hideEdgesOnMove` can work\n            // when someone releases camera pan drag after having stopped moving.\n            // See commit: https://github.com/jacomyal/sigma.js/commit/cfd9197f70319109db6b675dd7c82be493ca95a2\n            // See also issue: https://github.com/jacomyal/sigma.js/issues/1290\n            // It could be possible to render instead of scheduling a refresh but for\n            // now it seems good enough.\n            if (shouldRefresh)\n                _this.renderer.refresh();\n        }, 0);\n        this.emit(\"mouseup\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleMove = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\n        // Always trigger a \"mousemovebody\" event, so that it is possible to develop\n        // a drag-and-drop effect that works even when the mouse is out of the\n        // container:\n        this.emit(\"mousemovebody\", mouseCoords);\n        // Only trigger the \"mousemove\" event when the mouse is actually hovering\n        // the container, to avoid weirdly hovering nodes and/or edges when the\n        // mouse is not hover the container:\n        if (e.target === this.container) {\n            this.emit(\"mousemove\", mouseCoords);\n        }\n        if (mouseCoords.sigmaDefaultPrevented)\n            return;\n        // Handle the case when \"isMouseDown\" all the time, to allow dragging the\n        // stage while the mouse is not hover the container:\n        if (this.isMouseDown) {\n            this.isMoving = true;\n            this.draggedEvents++;\n            if (typeof this.movingTimeout === \"number\") {\n                clearTimeout(this.movingTimeout);\n            }\n            this.movingTimeout = window.setTimeout(function () {\n                _this.movingTimeout = null;\n                _this.isMoving = false;\n            }, DRAG_TIMEOUT);\n            var camera = this.renderer.getCamera();\n            var _a = (0, captor_1.getPosition)(e, this.container), eX = _a.x, eY = _a.y;\n            var lastMouse = this.renderer.viewportToFramedGraph({\n                x: this.lastMouseX,\n                y: this.lastMouseY,\n            });\n            var mouse = this.renderer.viewportToFramedGraph({ x: eX, y: eY });\n            var offsetX = lastMouse.x - mouse.x, offsetY = lastMouse.y - mouse.y;\n            var cameraState = camera.getState();\n            var x = cameraState.x + offsetX, y = cameraState.y + offsetY;\n            camera.setState({ x: x, y: y });\n            this.lastMouseX = eX;\n            this.lastMouseY = eY;\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    };\n    MouseCaptor.prototype.handleWheel = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        e.preventDefault();\n        e.stopPropagation();\n        var delta = (0, captor_1.getWheelDelta)(e);\n        if (!delta)\n            return;\n        var wheelCoords = (0, captor_1.getWheelCoords)(e, this.container);\n        this.emit(\"wheel\", wheelCoords);\n        if (wheelCoords.sigmaDefaultPrevented)\n            return;\n        // Default behavior\n        var ratioDiff = delta > 0 ? 1 / ZOOMING_RATIO : ZOOMING_RATIO;\n        var camera = this.renderer.getCamera();\n        var newRatio = camera.getBoundedRatio(camera.getState().ratio * ratioDiff);\n        var wheelDirection = delta > 0 ? 1 : -1;\n        var now = Date.now();\n        // Cancel events that are too close too each other and in the same direction:\n        if (this.currentWheelDirection === wheelDirection &&\n            this.lastWheelTriggerTime &&\n            now - this.lastWheelTriggerTime < MOUSE_ZOOM_DURATION / 5) {\n            return;\n        }\n        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\n            easing: \"quadraticOut\",\n            duration: MOUSE_ZOOM_DURATION,\n        }, function () {\n            _this.currentWheelDirection = 0;\n        });\n        this.currentWheelDirection = wheelDirection;\n        this.lastWheelTriggerTime = now;\n    };\n    MouseCaptor.prototype.handleOut = function () {\n        // TODO: dispatch event\n    };\n    return MouseCaptor;\n}(captor_1.default));\nexports[\"default\"] = MouseCaptor;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/core/captors/mouse.js?");

/***/ }),

/***/ "./node_modules/sigma/core/captors/touch.js":
/*!**************************************************!*\
  !*** ./node_modules/sigma/core/captors/touch.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar captor_1 = __importStar(__webpack_require__(/*! ./captor */ \"./node_modules/sigma/core/captors/captor.js\"));\nvar DRAG_TIMEOUT = 200;\nvar TOUCH_INERTIA_RATIO = 3;\nvar TOUCH_INERTIA_DURATION = 200;\n/**\n * Touch captor class.\n *\n * @constructor\n */\nvar TouchCaptor = /** @class */ (function (_super) {\n    __extends(TouchCaptor, _super);\n    function TouchCaptor(container, renderer) {\n        var _this = _super.call(this, container, renderer) || this;\n        _this.enabled = true;\n        _this.isMoving = false;\n        _this.hasMoved = false;\n        _this.touchMode = 0; // number of touches down\n        _this.startTouchesPositions = [];\n        // Binding methods:\n        _this.handleStart = _this.handleStart.bind(_this);\n        _this.handleLeave = _this.handleLeave.bind(_this);\n        _this.handleMove = _this.handleMove.bind(_this);\n        // Binding events\n        container.addEventListener(\"touchstart\", _this.handleStart, false);\n        container.addEventListener(\"touchend\", _this.handleLeave, false);\n        container.addEventListener(\"touchcancel\", _this.handleLeave, false);\n        container.addEventListener(\"touchmove\", _this.handleMove, false);\n        return _this;\n    }\n    TouchCaptor.prototype.kill = function () {\n        var container = this.container;\n        container.removeEventListener(\"touchstart\", this.handleStart);\n        container.removeEventListener(\"touchend\", this.handleLeave);\n        container.removeEventListener(\"touchcancel\", this.handleLeave);\n        container.removeEventListener(\"touchmove\", this.handleMove);\n    };\n    TouchCaptor.prototype.getDimensions = function () {\n        return {\n            width: this.container.offsetWidth,\n            height: this.container.offsetHeight,\n        };\n    };\n    TouchCaptor.prototype.dispatchRelatedMouseEvent = function (type, e, touch, emitter) {\n        var mousePosition = touch || e.touches[0];\n        var mouseEvent = new MouseEvent(type, {\n            clientX: mousePosition.clientX,\n            clientY: mousePosition.clientY,\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n        });\n        mouseEvent.isFakeSigmaMouseEvent = true;\n        (emitter || this.container).dispatchEvent(mouseEvent);\n    };\n    TouchCaptor.prototype.handleStart = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 1)\n            this.dispatchRelatedMouseEvent(\"mousedown\", e);\n        var touches = (0, captor_1.getTouchesArray)(e.touches);\n        this.touchMode = touches.length;\n        this.startCameraState = this.renderer.getCamera().getState();\n        this.startTouchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });\n        this.lastTouches = touches;\n        this.lastTouchesPositions = this.startTouchesPositions;\n        // When there are two touches down, let's record distance and angle as well:\n        if (this.touchMode === 2) {\n            var _a = __read(this.startTouchesPositions, 2), _b = _a[0], x0 = _b.x, y0 = _b.y, _c = _a[1], x1 = _c.x, y1 = _c.y;\n            this.startTouchesAngle = Math.atan2(y1 - y0, x1 - x0);\n            this.startTouchesDistance = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n        }\n        this.emit(\"touchdown\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    TouchCaptor.prototype.handleLeave = function (e) {\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 0 && this.lastTouches && this.lastTouches.length) {\n            this.dispatchRelatedMouseEvent(\"mouseup\", e, this.lastTouches[0], document);\n            // ... and only click if no move was made\n            if (!this.hasMoved) {\n                this.dispatchRelatedMouseEvent(\"click\", e, this.lastTouches[0]);\n            }\n        }\n        if (this.movingTimeout) {\n            this.isMoving = false;\n            clearTimeout(this.movingTimeout);\n        }\n        switch (this.touchMode) {\n            case 2:\n                if (e.touches.length === 1) {\n                    this.handleStart(e);\n                    e.preventDefault();\n                    break;\n                }\n            /* falls through */\n            case 1:\n                // TODO\n                // Dispatch event\n                if (this.isMoving) {\n                    var camera = this.renderer.getCamera();\n                    var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };\n                    camera.animate({\n                        x: cameraState.x + TOUCH_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n                        y: cameraState.y + TOUCH_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\n                    }, {\n                        duration: TOUCH_INERTIA_DURATION,\n                        easing: \"quadraticOut\",\n                    });\n                }\n                this.hasMoved = false;\n                this.isMoving = false;\n                this.touchMode = 0;\n                break;\n        }\n        this.emit(\"touchup\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    TouchCaptor.prototype.handleMove = function (e) {\n        var _a;\n        var _this = this;\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 1)\n            this.dispatchRelatedMouseEvent(\"mousemove\", e);\n        var touches = (0, captor_1.getTouchesArray)(e.touches);\n        var touchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });\n        this.lastTouches = touches;\n        this.lastTouchesPositions = touchesPositions;\n        // If a move was initiated at some point and we get back to startpoint,\n        // we should still consider that we did move (which also happens after a\n        // multiple touch when only one touch remains in which case handleStart\n        // is recalled within handleLeave).\n        // Now, some mobile browsers report zero-distance moves so we also check that\n        // one of the touches did actually move from the origin position.\n        this.hasMoved || (this.hasMoved = touchesPositions.some(function (position, idx) {\n            var startPosition = _this.startTouchesPositions[idx];\n            return position.x !== startPosition.x || position.y !== startPosition.y;\n        }));\n        // If there was no move, do not trigger touch moves behavior\n        if (!this.hasMoved) {\n            return;\n        }\n        this.isMoving = true;\n        if (this.movingTimeout)\n            clearTimeout(this.movingTimeout);\n        this.movingTimeout = window.setTimeout(function () {\n            _this.isMoving = false;\n        }, DRAG_TIMEOUT);\n        var camera = this.renderer.getCamera();\n        var startCameraState = this.startCameraState;\n        switch (this.touchMode) {\n            case 1: {\n                var _b = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0]), xStart = _b.x, yStart = _b.y;\n                var _c = this.renderer.viewportToFramedGraph(touchesPositions[0]), x = _c.x, y = _c.y;\n                camera.setState({\n                    x: startCameraState.x + xStart - x,\n                    y: startCameraState.y + yStart - y,\n                });\n                break;\n            }\n            case 2: {\n                /**\n                 * Here is the thinking here:\n                 *\n                 * 1. We can find the new angle and ratio, by comparing the vector from \"touch one\" to \"touch two\" at the start\n                 *    of the d'n'd and now\n                 *\n                 * 2. We can use `Camera#viewportToGraph` inside formula to retrieve the new camera position, using the graph\n                 *    position of a touch at the beginning of the d'n'd (using `startCamera.viewportToGraph`) and the viewport\n                 *    position of this same touch now\n                 */\n                var newCameraState = {};\n                var _d = touchesPositions[0], x0 = _d.x, y0 = _d.y;\n                var _e = touchesPositions[1], x1 = _e.x, y1 = _e.y;\n                var angleDiff = Math.atan2(y1 - y0, x1 - x0) - this.startTouchesAngle;\n                var ratioDiff = Math.hypot(y1 - y0, x1 - x0) / this.startTouchesDistance;\n                // 1.\n                var newRatio = camera.getBoundedRatio(startCameraState.ratio / ratioDiff);\n                newCameraState.ratio = newRatio;\n                newCameraState.angle = startCameraState.angle + angleDiff;\n                // 2.\n                var dimensions = this.getDimensions();\n                var touchGraphPosition = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0], { cameraState: startCameraState });\n                var smallestDimension = Math.min(dimensions.width, dimensions.height);\n                var dx = smallestDimension / dimensions.width;\n                var dy = smallestDimension / dimensions.height;\n                var ratio = newRatio / smallestDimension;\n                // Align with center of the graph:\n                var x = x0 - smallestDimension / 2 / dx;\n                var y = y0 - smallestDimension / 2 / dy;\n                // Rotate:\n                _a = __read([\n                    x * Math.cos(-newCameraState.angle) - y * Math.sin(-newCameraState.angle),\n                    y * Math.cos(-newCameraState.angle) + x * Math.sin(-newCameraState.angle),\n                ], 2), x = _a[0], y = _a[1];\n                newCameraState.x = touchGraphPosition.x - x * ratio;\n                newCameraState.y = touchGraphPosition.y + y * ratio;\n                camera.setState(newCameraState);\n                break;\n            }\n        }\n        this.emit(\"touchmove\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    return TouchCaptor;\n}(captor_1.default));\nexports[\"default\"] = TouchCaptor;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/core/captors/touch.js?");

/***/ }),

/***/ "./node_modules/sigma/core/labels.js":
/*!*******************************************!*\
  !*** ./node_modules/sigma/core/labels.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.edgeLabelsToDisplayFromNodes = exports.LabelGrid = void 0;\n/**\n * Class representing a single candidate for the label grid selection.\n *\n * It also describes a deterministic way to compare two candidates to assess\n * which one is better.\n */\nvar LabelCandidate = /** @class */ (function () {\n    function LabelCandidate(key, size) {\n        this.key = key;\n        this.size = size;\n    }\n    LabelCandidate.compare = function (first, second) {\n        // First we compare by size\n        if (first.size > second.size)\n            return -1;\n        if (first.size < second.size)\n            return 1;\n        // Then since no two nodes can have the same key, we use it to\n        // deterministically tie-break by key\n        if (first.key > second.key)\n            return 1;\n        // NOTE: this comparator cannot return 0\n        return -1;\n    };\n    return LabelCandidate;\n}());\n/**\n * Class representing a 2D spatial grid divided into constant-size cells.\n */\nvar LabelGrid = /** @class */ (function () {\n    function LabelGrid() {\n        this.width = 0;\n        this.height = 0;\n        this.cellSize = 0;\n        this.columns = 0;\n        this.rows = 0;\n        this.cells = {};\n    }\n    LabelGrid.prototype.resizeAndClear = function (dimensions, cellSize) {\n        this.width = dimensions.width;\n        this.height = dimensions.height;\n        this.cellSize = cellSize;\n        this.columns = Math.ceil(dimensions.width / cellSize);\n        this.rows = Math.ceil(dimensions.height / cellSize);\n        this.cells = {};\n    };\n    LabelGrid.prototype.getIndex = function (pos) {\n        var xIndex = Math.floor(pos.x / this.cellSize);\n        var yIndex = Math.floor(pos.y / this.cellSize);\n        return yIndex * this.columns + xIndex;\n    };\n    LabelGrid.prototype.add = function (key, size, pos) {\n        var candidate = new LabelCandidate(key, size);\n        var index = this.getIndex(pos);\n        var cell = this.cells[index];\n        if (!cell) {\n            cell = [];\n            this.cells[index] = cell;\n        }\n        cell.push(candidate);\n    };\n    LabelGrid.prototype.organize = function () {\n        for (var k in this.cells) {\n            var cell = this.cells[k];\n            cell.sort(LabelCandidate.compare);\n        }\n    };\n    LabelGrid.prototype.getLabelsToDisplay = function (ratio, density) {\n        // TODO: work on visible nodes to optimize? ^ -> threshold outside so that memoization works?\n        // TODO: adjust threshold lower, but increase cells a bit?\n        // TODO: hunt for geom issue in disguise\n        // TODO: memoize while ratio does not move. method to force recompute\n        var cellArea = this.cellSize * this.cellSize;\n        var scaledCellArea = cellArea / ratio / ratio;\n        var scaledDensity = (scaledCellArea * density) / cellArea;\n        var labelsToDisplayPerCell = Math.ceil(scaledDensity);\n        var labels = [];\n        for (var k in this.cells) {\n            var cell = this.cells[k];\n            for (var i = 0; i < Math.min(labelsToDisplayPerCell, cell.length); i++) {\n                labels.push(cell[i].key);\n            }\n        }\n        return labels;\n    };\n    return LabelGrid;\n}());\nexports.LabelGrid = LabelGrid;\n/**\n * Label heuristic selecting edge labels to display, based on displayed node\n * labels\n *\n * @param  {object} params                 - Parameters:\n * @param  {Set}      displayedNodeLabels  - Currently displayed node labels.\n * @param  {Set}      highlightedNodes     - Highlighted nodes.\n * @param  {Graph}    graph                - The rendered graph.\n * @param  {string}   hoveredNode          - Hovered node (optional)\n * @return {Array}                         - The selected labels.\n */\nfunction edgeLabelsToDisplayFromNodes(params) {\n    var graph = params.graph, hoveredNode = params.hoveredNode, highlightedNodes = params.highlightedNodes, displayedNodeLabels = params.displayedNodeLabels;\n    var worthyEdges = [];\n    // TODO: the code below can be optimized using #.forEach and batching the code per adj\n    // We should display an edge's label if:\n    //   - Any of its extremities is highlighted or hovered\n    //   - Both of its extremities has its label shown\n    graph.forEachEdge(function (edge, _, source, target) {\n        if (source === hoveredNode ||\n            target === hoveredNode ||\n            highlightedNodes.has(source) ||\n            highlightedNodes.has(target) ||\n            (displayedNodeLabels.has(source) && displayedNodeLabels.has(target))) {\n            worthyEdges.push(edge);\n        }\n    });\n    return worthyEdges;\n}\nexports.edgeLabelsToDisplayFromNodes = edgeLabelsToDisplayFromNodes;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/core/labels.js?");

/***/ }),

/***/ "./node_modules/sigma/index.js":
/*!*************************************!*\
  !*** ./node_modules/sigma/index.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sigma = exports.MouseCaptor = exports.Camera = void 0;\n/**\n * Sigma.js Library Endpoint\n * =========================\n *\n * The library endpoint.\n * @module\n */\nvar sigma_1 = __importDefault(__webpack_require__(/*! ./sigma */ \"./node_modules/sigma/sigma.js\"));\nexports.Sigma = sigma_1.default;\nvar camera_1 = __importDefault(__webpack_require__(/*! ./core/camera */ \"./node_modules/sigma/core/camera.js\"));\nexports.Camera = camera_1.default;\nvar mouse_1 = __importDefault(__webpack_require__(/*! ./core/captors/mouse */ \"./node_modules/sigma/core/captors/mouse.js\"));\nexports.MouseCaptor = mouse_1.default;\nexports[\"default\"] = sigma_1.default;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/index.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/edge-labels.js":
/*!*****************************************************!*\
  !*** ./node_modules/sigma/rendering/edge-labels.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.drawStraightEdgeLabel = void 0;\nfunction drawStraightEdgeLabel(context, edgeData, sourceData, targetData, settings) {\n    var size = settings.edgeLabelSize, font = settings.edgeLabelFont, weight = settings.edgeLabelWeight, color = settings.edgeLabelColor.attribute\n        ? edgeData[settings.edgeLabelColor.attribute] || settings.edgeLabelColor.color || \"#000\"\n        : settings.edgeLabelColor.color;\n    var label = edgeData.label;\n    if (!label)\n        return;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    // Computing positions without considering nodes sizes:\n    var sSize = sourceData.size;\n    var tSize = targetData.size;\n    var sx = sourceData.x;\n    var sy = sourceData.y;\n    var tx = targetData.x;\n    var ty = targetData.y;\n    var cx = (sx + tx) / 2;\n    var cy = (sy + ty) / 2;\n    var dx = tx - sx;\n    var dy = ty - sy;\n    var d = Math.sqrt(dx * dx + dy * dy);\n    if (d < sSize + tSize)\n        return;\n    // Adding nodes sizes:\n    sx += (dx * sSize) / d;\n    sy += (dy * sSize) / d;\n    tx -= (dx * tSize) / d;\n    ty -= (dy * tSize) / d;\n    cx = (sx + tx) / 2;\n    cy = (sy + ty) / 2;\n    dx = tx - sx;\n    dy = ty - sy;\n    d = Math.sqrt(dx * dx + dy * dy);\n    // Handling ellipsis\n    var textLength = context.measureText(label).width;\n    if (textLength > d) {\n        var ellipsis = \"…\";\n        label = label + ellipsis;\n        textLength = context.measureText(label).width;\n        while (textLength > d && label.length > 1) {\n            label = label.slice(0, -2) + ellipsis;\n            textLength = context.measureText(label).width;\n        }\n        if (label.length < 4)\n            return;\n    }\n    var angle;\n    if (dx > 0) {\n        if (dy > 0)\n            angle = Math.acos(dx / d);\n        else\n            angle = Math.asin(dy / d);\n    }\n    else {\n        if (dy > 0)\n            angle = Math.acos(dx / d) + Math.PI;\n        else\n            angle = Math.asin(dx / d) + Math.PI / 2;\n    }\n    context.save();\n    context.translate(cx, cy);\n    context.rotate(angle);\n    context.fillText(label, -textLength / 2, edgeData.size / 2 + size);\n    context.restore();\n}\nexports.drawStraightEdgeLabel = drawStraightEdgeLabel;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/edge-labels.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/edge.js":
/*!**********************************************!*\
  !*** ./node_modules/sigma/rendering/edge.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createEdgeCompoundProgram = exports.EdgeProgram = exports.AbstractEdgeProgram = void 0;\nvar program_1 = __webpack_require__(/*! ./program */ \"./node_modules/sigma/rendering/program.js\");\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/sigma/utils/index.js\");\nvar AbstractEdgeProgram = /** @class */ (function (_super) {\n    __extends(AbstractEdgeProgram, _super);\n    function AbstractEdgeProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AbstractEdgeProgram;\n}(program_1.AbstractProgram));\nexports.AbstractEdgeProgram = AbstractEdgeProgram;\nvar EdgeProgram = /** @class */ (function (_super) {\n    __extends(EdgeProgram, _super);\n    function EdgeProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EdgeProgram.prototype.process = function (edgeIndex, offset, sourceData, targetData, data) {\n        var i = offset * this.STRIDE;\n        // NOTE: dealing with hidden items automatically\n        if (data.hidden || sourceData.hidden || targetData.hidden) {\n            for (var l = i + this.STRIDE; i < l; i++) {\n                this.array[i] = 0;\n            }\n            return;\n        }\n        return this.processVisibleItem((0, utils_1.indexToColor)(edgeIndex), i, sourceData, targetData, data);\n    };\n    EdgeProgram.drawLabel = undefined;\n    return EdgeProgram;\n}(program_1.Program));\nexports.EdgeProgram = EdgeProgram;\nvar EdgeImageClass = /** @class */ (function () {\n    function EdgeImageClass(_gl, _pickingBuffer, _renderer) {\n        return this;\n    }\n    EdgeImageClass.prototype.reallocate = function (_capacity) {\n        return undefined;\n    };\n    EdgeImageClass.prototype.process = function (_edgeIndex, _offset, _sourceData, _targetData, _data) {\n        return undefined;\n    };\n    EdgeImageClass.prototype.render = function (_params) {\n        return undefined;\n    };\n    EdgeImageClass.drawLabel = undefined;\n    return EdgeImageClass;\n}());\n/**\n * Helper function combining two or more programs into a single compound one.\n * Note that this is more a quick & easy way to combine program than a really\n * performant option. More performant programs can be written entirely.\n *\n * @param  {array}    programClasses - Program classes to combine.\n * @param  {function} drawLabel - An optional edge \"draw label\" function.\n * @return {function}\n */\nfunction createEdgeCompoundProgram(programClasses, drawLabel) {\n    var _a;\n    return _a = /** @class */ (function () {\n            function EdgeCompoundProgram(gl, pickingBuffer, renderer) {\n                this.programs = programClasses.map(function (Program) {\n                    return new Program(gl, pickingBuffer, renderer);\n                });\n            }\n            EdgeCompoundProgram.prototype.reallocate = function (capacity) {\n                this.programs.forEach(function (program) { return program.reallocate(capacity); });\n            };\n            EdgeCompoundProgram.prototype.process = function (edgeIndex, offset, sourceData, targetData, data) {\n                this.programs.forEach(function (program) { return program.process(edgeIndex, offset, sourceData, targetData, data); });\n            };\n            EdgeCompoundProgram.prototype.render = function (params) {\n                this.programs.forEach(function (program) { return program.render(params); });\n            };\n            return EdgeCompoundProgram;\n        }()),\n        _a.drawLabel = drawLabel,\n        _a;\n}\nexports.createEdgeCompoundProgram = createEdgeCompoundProgram;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/edge.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/node-hover.js":
/*!****************************************************!*\
  !*** ./node_modules/sigma/rendering/node-hover.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.drawDiscNodeHover = void 0;\nvar node_labels_1 = __webpack_require__(/*! ./node-labels */ \"./node_modules/sigma/rendering/node-labels.js\");\n/**\n * Draw an hovered node.\n * - if there is no label => display a shadow on the node\n * - if the label box is bigger than node size => display a label box that contains the node with a shadow\n * - else node with shadow and the label box\n */\nfunction drawDiscNodeHover(context, data, settings) {\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    // Then we draw the label background\n    context.fillStyle = \"#FFF\";\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 8;\n    context.shadowColor = \"#000\";\n    var PADDING = 2;\n    if (typeof data.label === \"string\") {\n        var textWidth = context.measureText(data.label).width, boxWidth = Math.round(textWidth + 5), boxHeight = Math.round(size + 2 * PADDING), radius = Math.max(data.size, size / 2) + PADDING;\n        var angleRadian = Math.asin(boxHeight / 2 / radius);\n        var xDeltaCoord = Math.sqrt(Math.abs(Math.pow(radius, 2) - Math.pow(boxHeight / 2, 2)));\n        context.beginPath();\n        context.moveTo(data.x + xDeltaCoord, data.y + boxHeight / 2);\n        context.lineTo(data.x + radius + boxWidth, data.y + boxHeight / 2);\n        context.lineTo(data.x + radius + boxWidth, data.y - boxHeight / 2);\n        context.lineTo(data.x + xDeltaCoord, data.y - boxHeight / 2);\n        context.arc(data.x, data.y, radius, angleRadian, -angleRadian);\n        context.closePath();\n        context.fill();\n    }\n    else {\n        context.beginPath();\n        context.arc(data.x, data.y, data.size + PADDING, 0, Math.PI * 2);\n        context.closePath();\n        context.fill();\n    }\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 0;\n    // And finally we draw the label\n    (0, node_labels_1.drawDiscNodeLabel)(context, data, settings);\n}\nexports.drawDiscNodeHover = drawDiscNodeHover;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/node-hover.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/node-labels.js":
/*!*****************************************************!*\
  !*** ./node_modules/sigma/rendering/node-labels.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.drawDiscNodeLabel = void 0;\nfunction drawDiscNodeLabel(context, data, settings) {\n    if (!data.label)\n        return;\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight, color = settings.labelColor.attribute\n        ? data[settings.labelColor.attribute] || settings.labelColor.color || \"#000\"\n        : settings.labelColor.color;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);\n}\nexports.drawDiscNodeLabel = drawDiscNodeLabel;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/node-labels.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/node.js":
/*!**********************************************!*\
  !*** ./node_modules/sigma/rendering/node.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createNodeCompoundProgram = exports.NodeProgram = exports.AbstractNodeProgram = void 0;\nvar program_1 = __webpack_require__(/*! ./program */ \"./node_modules/sigma/rendering/program.js\");\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/sigma/utils/index.js\");\nvar AbstractNodeProgram = /** @class */ (function (_super) {\n    __extends(AbstractNodeProgram, _super);\n    function AbstractNodeProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AbstractNodeProgram;\n}(program_1.AbstractProgram));\nexports.AbstractNodeProgram = AbstractNodeProgram;\nvar NodeProgram = /** @class */ (function (_super) {\n    __extends(NodeProgram, _super);\n    function NodeProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodeProgram.prototype.process = function (nodeIndex, offset, data) {\n        var i = offset * this.STRIDE;\n        // NOTE: dealing with hidden items automatically\n        if (data.hidden) {\n            for (var l = i + this.STRIDE; i < l; i++) {\n                this.array[i] = 0;\n            }\n            return;\n        }\n        return this.processVisibleItem((0, utils_1.indexToColor)(nodeIndex), i, data);\n    };\n    NodeProgram.drawLabel = undefined;\n    NodeProgram.drawHover = undefined;\n    return NodeProgram;\n}(program_1.Program));\nexports.NodeProgram = NodeProgram;\nvar NodeImageClass = /** @class */ (function () {\n    function NodeImageClass(_gl, _pickingBuffer, _renderer) {\n        return this;\n    }\n    NodeImageClass.prototype.reallocate = function (_capacity) {\n        return undefined;\n    };\n    NodeImageClass.prototype.process = function (_nodeIndex, _offset, _data) {\n        return undefined;\n    };\n    NodeImageClass.prototype.render = function (_params) {\n        return undefined;\n    };\n    NodeImageClass.drawLabel = undefined;\n    NodeImageClass.drawHover = undefined;\n    return NodeImageClass;\n}());\n/**\n * Helper function combining two or more programs into a single compound one.\n * Note that this is more a quick & easy way to combine program than a really\n * performant option. More performant programs can be written entirely.\n *\n * @param  {array}    programClasses - Program classes to combine.\n * @param  {function} drawLabel - An optional node \"draw label\" function.\n * @param  {function} drawHover - An optional node \"draw hover\" function.\n * @return {function}\n */\nfunction createNodeCompoundProgram(programClasses, drawLabel, drawHover) {\n    var _a;\n    return _a = /** @class */ (function () {\n            function NodeCompoundProgram(gl, pickingBuffer, renderer) {\n                this.programs = programClasses.map(function (Program) {\n                    return new Program(gl, pickingBuffer, renderer);\n                });\n            }\n            NodeCompoundProgram.prototype.reallocate = function (capacity) {\n                this.programs.forEach(function (program) { return program.reallocate(capacity); });\n            };\n            NodeCompoundProgram.prototype.process = function (nodeIndex, offset, data) {\n                this.programs.forEach(function (program) { return program.process(nodeIndex, offset, data); });\n            };\n            NodeCompoundProgram.prototype.render = function (params) {\n                this.programs.forEach(function (program) { return program.render(params); });\n            };\n            return NodeCompoundProgram;\n        }()),\n        _a.drawLabel = drawLabel,\n        _a.drawHover = drawHover,\n        _a;\n}\nexports.createNodeCompoundProgram = createNodeCompoundProgram;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/node.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/program.js":
/*!*************************************************!*\
  !*** ./node_modules/sigma/rendering/program.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Program = exports.AbstractProgram = void 0;\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/sigma/rendering/utils.js\");\nvar PICKING_PREFIX = \"#define PICKING_MODE\\n\";\nvar SIZE_FACTOR_PER_ATTRIBUTE_TYPE = (_a = {},\n    _a[WebGL2RenderingContext.BOOL] = 1,\n    _a[WebGL2RenderingContext.BYTE] = 1,\n    _a[WebGL2RenderingContext.UNSIGNED_BYTE] = 1,\n    _a[WebGL2RenderingContext.SHORT] = 2,\n    _a[WebGL2RenderingContext.UNSIGNED_SHORT] = 2,\n    _a[WebGL2RenderingContext.INT] = 4,\n    _a[WebGL2RenderingContext.UNSIGNED_INT] = 4,\n    _a[WebGL2RenderingContext.FLOAT] = 4,\n    _a);\nfunction getAttributeItemsCount(attr) {\n    return attr.normalized ? 1 : attr.size;\n}\nfunction getAttributesItemsCount(attrs) {\n    var res = 0;\n    attrs.forEach(function (attr) { return (res += getAttributeItemsCount(attr)); });\n    return res;\n}\nvar AbstractProgram = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    function AbstractProgram(_gl, _pickGl, _renderer) {\n    }\n    return AbstractProgram;\n}());\nexports.AbstractProgram = AbstractProgram;\nvar Program = /** @class */ (function () {\n    function Program(gl, pickingBuffer, renderer) {\n        this.array = new Float32Array();\n        this.constantArray = new Float32Array();\n        this.capacity = 0;\n        this.verticesCount = 0;\n        // Reading and caching program definition\n        var def = this.getDefinition();\n        this.VERTICES = def.VERTICES;\n        this.VERTEX_SHADER_SOURCE = def.VERTEX_SHADER_SOURCE;\n        this.FRAGMENT_SHADER_SOURCE = def.FRAGMENT_SHADER_SOURCE;\n        this.UNIFORMS = def.UNIFORMS;\n        this.ATTRIBUTES = def.ATTRIBUTES;\n        this.METHOD = def.METHOD;\n        this.CONSTANT_ATTRIBUTES = \"CONSTANT_ATTRIBUTES\" in def ? def.CONSTANT_ATTRIBUTES : [];\n        this.CONSTANT_DATA = \"CONSTANT_DATA\" in def ? def.CONSTANT_DATA : [];\n        this.isInstanced = \"CONSTANT_ATTRIBUTES\" in def;\n        // Computing stride\n        this.ATTRIBUTES_ITEMS_COUNT = getAttributesItemsCount(this.ATTRIBUTES);\n        this.STRIDE = this.VERTICES * this.ATTRIBUTES_ITEMS_COUNT;\n        // Members\n        this.renderer = renderer;\n        this.normalProgram = this.getProgramInfo(\"normal\", gl, def.VERTEX_SHADER_SOURCE, def.FRAGMENT_SHADER_SOURCE, null);\n        this.pickProgram = pickingBuffer\n            ? this.getProgramInfo(\"pick\", gl, PICKING_PREFIX + def.VERTEX_SHADER_SOURCE, PICKING_PREFIX + def.FRAGMENT_SHADER_SOURCE, pickingBuffer)\n            : null;\n        // For instanced programs:\n        if (this.isInstanced) {\n            var constantAttributesItemsCount = getAttributesItemsCount(this.CONSTANT_ATTRIBUTES);\n            if (this.CONSTANT_DATA.length !== this.VERTICES)\n                throw new Error(\"Program: error while getting constant data (expected \".concat(this.VERTICES, \" items, received \").concat(this.CONSTANT_DATA.length, \" instead)\"));\n            this.constantArray = new Float32Array(this.CONSTANT_DATA.length * constantAttributesItemsCount);\n            for (var i = 0; i < this.CONSTANT_DATA.length; i++) {\n                var vector = this.CONSTANT_DATA[i];\n                if (vector.length !== constantAttributesItemsCount)\n                    throw new Error(\"Program: error while getting constant data (one vector has \".concat(vector.length, \" items instead of \").concat(constantAttributesItemsCount, \")\"));\n                for (var j = 0; j < vector.length; j++)\n                    this.constantArray[i * constantAttributesItemsCount + j] = vector[j];\n            }\n            this.STRIDE = this.ATTRIBUTES_ITEMS_COUNT;\n        }\n    }\n    Program.prototype.getProgramInfo = function (name, gl, vertexShaderSource, fragmentShaderSource, frameBuffer) {\n        var def = this.getDefinition();\n        // WebGL buffers\n        var buffer = gl.createBuffer();\n        if (buffer === null)\n            throw new Error(\"Program: error while creating the WebGL buffer.\");\n        // Shaders and program\n        var vertexShader = (0, utils_1.loadVertexShader)(gl, vertexShaderSource);\n        var fragmentShader = (0, utils_1.loadFragmentShader)(gl, fragmentShaderSource);\n        var program = (0, utils_1.loadProgram)(gl, [vertexShader, fragmentShader]);\n        // Initializing locations\n        var uniformLocations = {};\n        def.UNIFORMS.forEach(function (uniformName) {\n            var location = gl.getUniformLocation(program, uniformName);\n            if (location)\n                uniformLocations[uniformName] = location;\n        });\n        var attributeLocations = {};\n        def.ATTRIBUTES.forEach(function (attr) {\n            attributeLocations[attr.name] = gl.getAttribLocation(program, attr.name);\n        });\n        // For instanced programs:\n        var constantBuffer;\n        if (\"CONSTANT_ATTRIBUTES\" in def) {\n            def.CONSTANT_ATTRIBUTES.forEach(function (attr) {\n                attributeLocations[attr.name] = gl.getAttribLocation(program, attr.name);\n            });\n            constantBuffer = gl.createBuffer();\n            if (constantBuffer === null)\n                throw new Error(\"Program: error while creating the WebGL constant buffer.\");\n        }\n        return {\n            name: name,\n            program: program,\n            gl: gl,\n            frameBuffer: frameBuffer,\n            buffer: buffer,\n            constantBuffer: constantBuffer || {},\n            uniformLocations: uniformLocations,\n            attributeLocations: attributeLocations,\n            isPicking: name === \"pick\",\n        };\n    };\n    Program.prototype.bindProgram = function (program) {\n        var _this = this;\n        var offset = 0;\n        var gl = program.gl, buffer = program.buffer;\n        if (!this.isInstanced) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            offset = 0;\n            this.ATTRIBUTES.forEach(function (attr) { return (offset += _this.bindAttribute(attr, program, offset)); });\n            gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n        }\n        else {\n            // Handle constant data (things that remain unchanged for all items):\n            gl.bindBuffer(gl.ARRAY_BUFFER, program.constantBuffer);\n            offset = 0;\n            this.CONSTANT_ATTRIBUTES.forEach(function (attr) { return (offset += _this.bindAttribute(attr, program, offset, false)); });\n            gl.bufferData(gl.ARRAY_BUFFER, this.constantArray, gl.STATIC_DRAW);\n            // Handle \"instance specific\" data (things that vary for each item):\n            gl.bindBuffer(gl.ARRAY_BUFFER, program.buffer);\n            offset = 0;\n            this.ATTRIBUTES.forEach(function (attr) { return (offset += _this.bindAttribute(attr, program, offset, true)); });\n            gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    };\n    Program.prototype.unbindProgram = function (program) {\n        var _this = this;\n        if (!this.isInstanced) {\n            this.ATTRIBUTES.forEach(function (attr) { return _this.unbindAttribute(attr, program); });\n        }\n        else {\n            this.CONSTANT_ATTRIBUTES.forEach(function (attr) { return _this.unbindAttribute(attr, program, false); });\n            this.ATTRIBUTES.forEach(function (attr) { return _this.unbindAttribute(attr, program, true); });\n        }\n    };\n    Program.prototype.bindAttribute = function (attr, program, offset, setDivisor) {\n        var sizeFactor = SIZE_FACTOR_PER_ATTRIBUTE_TYPE[attr.type];\n        if (typeof sizeFactor !== \"number\")\n            throw new Error(\"Program.bind: yet unsupported attribute type \\\"\".concat(attr.type, \"\\\"\"));\n        var location = program.attributeLocations[attr.name];\n        var gl = program.gl;\n        if (location !== -1) {\n            gl.enableVertexAttribArray(location);\n            var stride = !this.isInstanced\n                ? this.ATTRIBUTES_ITEMS_COUNT * Float32Array.BYTES_PER_ELEMENT\n                : (setDivisor ? this.ATTRIBUTES_ITEMS_COUNT : getAttributesItemsCount(this.CONSTANT_ATTRIBUTES)) *\n                    Float32Array.BYTES_PER_ELEMENT;\n            gl.vertexAttribPointer(location, attr.size, attr.type, attr.normalized || false, stride, offset);\n            if (this.isInstanced && setDivisor) {\n                if (gl instanceof WebGL2RenderingContext) {\n                    gl.vertexAttribDivisor(location, 1);\n                }\n                else {\n                    var ext = gl.getExtension(\"ANGLE_instanced_arrays\");\n                    if (ext)\n                        ext.vertexAttribDivisorANGLE(location, 1);\n                }\n            }\n        }\n        return attr.size * sizeFactor;\n    };\n    Program.prototype.unbindAttribute = function (attr, program, unsetDivisor) {\n        var location = program.attributeLocations[attr.name];\n        var gl = program.gl;\n        if (location !== -1) {\n            gl.disableVertexAttribArray(location);\n            if (this.isInstanced && unsetDivisor) {\n                if (gl instanceof WebGL2RenderingContext) {\n                    gl.vertexAttribDivisor(location, 0);\n                }\n                else {\n                    var ext = gl.getExtension(\"ANGLE_instanced_arrays\");\n                    if (ext)\n                        ext.vertexAttribDivisorANGLE(location, 0);\n                }\n            }\n        }\n    };\n    Program.prototype.reallocate = function (capacity) {\n        // If desired capacity has not changed we do nothing\n        // NOTE: it's possible here to implement more subtle reallocation schemes\n        // when the number of rendered items increase or decrease\n        if (capacity === this.capacity)\n            return;\n        this.capacity = capacity;\n        this.verticesCount = this.VERTICES * capacity;\n        this.array = new Float32Array(!this.isInstanced\n            ? this.verticesCount * this.ATTRIBUTES_ITEMS_COUNT\n            : this.capacity * this.ATTRIBUTES_ITEMS_COUNT);\n    };\n    Program.prototype.hasNothingToRender = function () {\n        return this.verticesCount === 0;\n    };\n    Program.prototype.renderProgram = function (params, programInfo) {\n        var gl = programInfo.gl, program = programInfo.program;\n        // With the current fix for #1397, the alpha blending is enabled for the\n        // picking layer:\n        gl.enable(gl.BLEND);\n        // Original code:\n        // if (!isPicking) gl.enable(gl.BLEND);\n        // else gl.disable(gl.BLEND);\n        gl.useProgram(program);\n        this.setUniforms(params, programInfo);\n        this.drawWebGL(this.METHOD, programInfo);\n    };\n    Program.prototype.render = function (params) {\n        if (this.hasNothingToRender())\n            return;\n        if (this.pickProgram) {\n            this.pickProgram.gl.viewport(0, 0, (params.width * params.pixelRatio) / params.downSizingRatio, (params.height * params.pixelRatio) / params.downSizingRatio);\n            this.bindProgram(this.pickProgram);\n            this.renderProgram(__assign(__assign({}, params), { pixelRatio: params.pixelRatio / params.downSizingRatio }), this.pickProgram);\n            this.unbindProgram(this.pickProgram);\n        }\n        this.normalProgram.gl.viewport(0, 0, params.width * params.pixelRatio, params.height * params.pixelRatio);\n        this.bindProgram(this.normalProgram);\n        this.renderProgram(params, this.normalProgram);\n        this.unbindProgram(this.normalProgram);\n    };\n    Program.prototype.drawWebGL = function (method, _a) {\n        var gl = _a.gl, frameBuffer = _a.frameBuffer;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n        if (!this.isInstanced) {\n            gl.drawArrays(method, 0, this.verticesCount);\n        }\n        else {\n            if (gl instanceof WebGL2RenderingContext) {\n                gl.drawArraysInstanced(method, 0, this.VERTICES, this.capacity);\n            }\n            else {\n                var ext = gl.getExtension(\"ANGLE_instanced_arrays\");\n                if (ext)\n                    ext.drawArraysInstancedANGLE(method, 0, this.VERTICES, this.capacity);\n            }\n        }\n    };\n    return Program;\n}());\nexports.Program = Program;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/program.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/edge-arrow-head/frag.glsl.js":
/*!****************************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/edge-arrow-head/frag.glsl.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("(()=>{\"use strict\";var e={d:(o,r)=>{for(var t in r)e.o(r,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:r[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>r});const r=\"precision mediump float;\\n\\nvarying vec4 v_color;\\n\\nvoid main(void) {\\n  gl_FragColor = v_color;\\n}\\n\";module.exports=o})();\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/edge-arrow-head/frag.glsl.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/edge-arrow-head/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/edge-arrow-head/index.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar utils_1 = __webpack_require__(/*! ../../../utils */ \"./node_modules/sigma/utils/index.js\");\nvar edge_1 = __webpack_require__(/*! ../../edge */ \"./node_modules/sigma/rendering/edge.js\");\nvar vert_glsl_1 = __importDefault(__webpack_require__(/*! ./vert.glsl.js */ \"./node_modules/sigma/rendering/programs/edge-arrow-head/vert.glsl.js\"));\nvar frag_glsl_1 = __importDefault(__webpack_require__(/*! ./frag.glsl.js */ \"./node_modules/sigma/rendering/programs/edge-arrow-head/frag.glsl.js\"));\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\nvar UNIFORMS = [\"u_matrix\", \"u_sizeRatio\", \"u_correctionRatio\"];\nvar EdgeArrowHeadProgram = /** @class */ (function (_super) {\n    __extends(EdgeArrowHeadProgram, _super);\n    function EdgeArrowHeadProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EdgeArrowHeadProgram.prototype.getDefinition = function () {\n        return {\n            VERTICES: 3,\n            VERTEX_SHADER_SOURCE: vert_glsl_1.default,\n            FRAGMENT_SHADER_SOURCE: frag_glsl_1.default,\n            METHOD: WebGLRenderingContext.TRIANGLES,\n            UNIFORMS: UNIFORMS,\n            ATTRIBUTES: [\n                { name: \"a_position\", size: 2, type: FLOAT },\n                { name: \"a_normal\", size: 2, type: FLOAT },\n                { name: \"a_radius\", size: 1, type: FLOAT },\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n                { name: \"a_id\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n            ],\n            CONSTANT_ATTRIBUTES: [{ name: \"a_barycentric\", size: 3, type: FLOAT }],\n            CONSTANT_DATA: [\n                [1, 0, 0],\n                [0, 1, 0],\n                [0, 0, 1],\n            ],\n        };\n    };\n    EdgeArrowHeadProgram.prototype.processVisibleItem = function (edgeIndex, startIndex, sourceData, targetData, data) {\n        var thickness = data.size || 1;\n        var radius = targetData.size || 1;\n        var x1 = sourceData.x;\n        var y1 = sourceData.y;\n        var x2 = targetData.x;\n        var y2 = targetData.y;\n        var color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        var len = dx * dx + dy * dy;\n        var n1 = 0;\n        var n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var array = this.array;\n        array[startIndex++] = x2;\n        array[startIndex++] = y2;\n        array[startIndex++] = -n1;\n        array[startIndex++] = -n2;\n        array[startIndex++] = radius;\n        array[startIndex++] = color;\n        array[startIndex++] = edgeIndex;\n    };\n    EdgeArrowHeadProgram.prototype.setUniforms = function (params, _a) {\n        var gl = _a.gl, uniformLocations = _a.uniformLocations;\n        var u_matrix = uniformLocations.u_matrix, u_sizeRatio = uniformLocations.u_sizeRatio, u_correctionRatio = uniformLocations.u_correctionRatio;\n        gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n        gl.uniform1f(u_sizeRatio, params.sizeRatio);\n        gl.uniform1f(u_correctionRatio, params.correctionRatio);\n    };\n    return EdgeArrowHeadProgram;\n}(edge_1.EdgeProgram));\nexports[\"default\"] = EdgeArrowHeadProgram;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/edge-arrow-head/index.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/edge-arrow-head/vert.glsl.js":
/*!****************************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/edge-arrow-head/vert.glsl.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("(()=>{\"use strict\";var e={d:(n,o)=>{for(var a in o)e.o(o,a)&&!e.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:o[a]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o=\"attribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_radius;\\nattribute vec3 a_barycentric;\\n\\n#ifdef PICKING_MODE\\nattribute vec4 a_id;\\n#else\\nattribute vec4 a_color;\\n#endif\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadWidthLengthRatio = 0.66;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl and\\n  // edge.clamped.vert.glsl. Please read it to get better comments on what's\\n  // happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n  float webGLNodeRadius = a_radius * 2.0 * u_correctionRatio / u_sizeRatio;\\n  float webGLArrowHeadLength = webGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n  float webGLArrowHeadHalfWidth = webGLArrowHeadLength * arrowHeadWidthLengthRatio / 2.0;\\n\\n  float da = a_barycentric.x;\\n  float db = a_barycentric.y;\\n  float dc = a_barycentric.z;\\n\\n  vec2 delta = vec2(\\n      da * (webGLNodeRadius * unitNormal.y)\\n    + db * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y + webGLArrowHeadHalfWidth * unitNormal.x)\\n    + dc * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y - webGLArrowHeadHalfWidth * unitNormal.x),\\n\\n      da * (-webGLNodeRadius * unitNormal.x)\\n    + db * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x + webGLArrowHeadHalfWidth * unitNormal.y)\\n    + dc * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x - webGLArrowHeadHalfWidth * unitNormal.y)\\n  );\\n\\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n\";module.exports=n})();\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/edge-arrow-head/vert.glsl.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/edge-arrow/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/edge-arrow/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Sigma.js WebGL Renderer Edge Arrow Program\n * ===========================================\n *\n * Compound program rendering edges as an arrow from the source to the target.\n * @module\n */\nvar edge_1 = __webpack_require__(/*! ../../edge */ \"./node_modules/sigma/rendering/edge.js\");\nvar edge_arrow_head_1 = __importDefault(__webpack_require__(/*! ../edge-arrow-head */ \"./node_modules/sigma/rendering/programs/edge-arrow-head/index.js\"));\nvar edge_clamped_1 = __importDefault(__webpack_require__(/*! ../edge-clamped */ \"./node_modules/sigma/rendering/programs/edge-clamped/index.js\"));\nvar EdgeArrowProgram = (0, edge_1.createEdgeCompoundProgram)([edge_clamped_1.default, edge_arrow_head_1.default]);\nexports[\"default\"] = EdgeArrowProgram;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/edge-arrow/index.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/edge-clamped/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/edge-clamped/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Sigma.js WebGL Renderer Edge Program\n * =====================================\n *\n * Program rendering edges as thick lines but with a twist: the end of edge\n * does not sit in the middle of target node but instead stays by some margin.\n *\n * This is useful when combined with arrows to draw directed edges.\n * @module\n */\nvar edge_rectangle_1 = __importDefault(__webpack_require__(/*! ../edge-rectangle */ \"./node_modules/sigma/rendering/programs/edge-rectangle/index.js\"));\nvar vert_glsl_1 = __importDefault(__webpack_require__(/*! ./vert.glsl.js */ \"./node_modules/sigma/rendering/programs/edge-clamped/vert.glsl.js\"));\nvar utils_1 = __webpack_require__(/*! ../../../utils */ \"./node_modules/sigma/utils/index.js\");\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\nvar EdgeClampedProgram = /** @class */ (function (_super) {\n    __extends(EdgeClampedProgram, _super);\n    function EdgeClampedProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EdgeClampedProgram.prototype.getDefinition = function () {\n        return __assign(__assign({}, _super.prototype.getDefinition.call(this)), { VERTEX_SHADER_SOURCE: vert_glsl_1.default, ATTRIBUTES: [\n                { name: \"a_positionStart\", size: 2, type: FLOAT },\n                { name: \"a_positionEnd\", size: 2, type: FLOAT },\n                { name: \"a_normal\", size: 2, type: FLOAT },\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n                { name: \"a_id\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n                { name: \"a_radius\", size: 1, type: FLOAT },\n            ], CONSTANT_ATTRIBUTES: [\n                // If 0, then position will be a_positionStart\n                // If 1, then position will be a_positionEnd\n                { name: \"a_positionCoef\", size: 1, type: FLOAT },\n                { name: \"a_normalCoef\", size: 1, type: FLOAT },\n                { name: \"a_radiusCoef\", size: 1, type: FLOAT },\n            ], CONSTANT_DATA: [\n                [0, 1, 0],\n                [0, -1, 0],\n                [1, 1, 1],\n                [1, 1, 1],\n                [0, -1, 0],\n                [1, -1, -1],\n            ] });\n    };\n    EdgeClampedProgram.prototype.processVisibleItem = function (edgeIndex, startIndex, sourceData, targetData, data) {\n        var thickness = data.size || 1;\n        var x1 = sourceData.x;\n        var y1 = sourceData.y;\n        var x2 = targetData.x;\n        var y2 = targetData.y;\n        var color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        var radius = targetData.size || 1;\n        var len = dx * dx + dy * dy;\n        var n1 = 0;\n        var n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var array = this.array;\n        array[startIndex++] = x1;\n        array[startIndex++] = y1;\n        array[startIndex++] = x2;\n        array[startIndex++] = y2;\n        array[startIndex++] = n1;\n        array[startIndex++] = n2;\n        array[startIndex++] = color;\n        array[startIndex++] = edgeIndex;\n        array[startIndex++] = radius;\n    };\n    return EdgeClampedProgram;\n}(edge_rectangle_1.default));\nexports[\"default\"] = EdgeClampedProgram;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/edge-clamped/index.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/edge-clamped/vert.glsl.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/edge-clamped/vert.glsl.js ***!
  \*************************************************************************/
/***/ ((module) => {

eval("(()=>{\"use strict\";var o={d:(e,n)=>{for(var t in n)o.o(n,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},o:(o,e)=>Object.prototype.hasOwnProperty.call(o,e),r:o=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(o,\"__esModule\",{value:!0})}},e={};o.r(e),o.d(e,{default:()=>n});const n=\"attribute vec4 a_id;\\nattribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute float a_normalCoef;\\nattribute vec2 a_positionStart;\\nattribute vec2 a_positionEnd;\\nattribute float a_positionCoef;\\nattribute float a_radius;\\nattribute float a_radiusCoef;\\n\\nuniform mat3 u_matrix;\\nuniform float u_zoomRatio;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float radius = a_radius * a_radiusCoef;\\n  vec2 normal = a_normal * a_normalCoef;\\n  vec2 position = a_positionStart * (1.0 - a_positionCoef) + a_positionEnd * a_positionCoef;\\n\\n  float normalLength = length(normal);\\n  vec2 unitNormal = normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl. Please read it to\\n  // get better comments on what's happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n\\n  // Here, we move the point to leave space for the arrow head:\\n  float direction = sign(radius);\\n  float webGLNodeRadius = direction * radius * 2.0 * u_correctionRatio / u_sizeRatio;\\n  float webGLArrowHeadLength = webGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n\\n  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (webGLNodeRadius + webGLArrowHeadLength);\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(position + unitNormal * webGLThickness + compensationVector, 1)).xy, 0, 1);\\n\\n  v_thickness = webGLThickness / u_zoomRatio;\\n\\n  v_normal = unitNormal;\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n\";module.exports=e})();\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/edge-clamped/vert.glsl.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/edge-rectangle/frag.glsl.js":
/*!***************************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/edge-rectangle/frag.glsl.js ***!
  \***************************************************************************/
/***/ ((module) => {

eval("(()=>{\"use strict\";var n={d:(e,o)=>{for(var t in o)n.o(o,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:o[t]})},o:(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r:n=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})}},e={};n.r(e),n.d(e,{default:()=>o});const o=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float feather = 0.001;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  // We only handle antialiasing for normal mode:\\n  #ifdef PICKING_MODE\\n  gl_FragColor = v_color;\\n  #else\\n  float dist = length(v_normal) * v_thickness;\\n\\n  float t = smoothstep(\\n    v_thickness - feather,\\n    v_thickness,\\n    dist\\n  );\\n\\n  gl_FragColor = mix(v_color, transparent, t);\\n  #endif\\n}\\n\";module.exports=e})();\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/edge-rectangle/frag.glsl.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/edge-rectangle/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/edge-rectangle/index.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar utils_1 = __webpack_require__(/*! ../../../utils */ \"./node_modules/sigma/utils/index.js\");\nvar edge_1 = __webpack_require__(/*! ../../edge */ \"./node_modules/sigma/rendering/edge.js\");\nvar vert_glsl_1 = __importDefault(__webpack_require__(/*! ./vert.glsl.js */ \"./node_modules/sigma/rendering/programs/edge-rectangle/vert.glsl.js\"));\nvar frag_glsl_1 = __importDefault(__webpack_require__(/*! ./frag.glsl.js */ \"./node_modules/sigma/rendering/programs/edge-rectangle/frag.glsl.js\"));\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\nvar UNIFORMS = [\"u_matrix\", \"u_zoomRatio\", \"u_sizeRatio\", \"u_correctionRatio\"];\nvar EdgeRectangleProgram = /** @class */ (function (_super) {\n    __extends(EdgeRectangleProgram, _super);\n    function EdgeRectangleProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EdgeRectangleProgram.prototype.getDefinition = function () {\n        return {\n            VERTICES: 6,\n            VERTEX_SHADER_SOURCE: vert_glsl_1.default,\n            FRAGMENT_SHADER_SOURCE: frag_glsl_1.default,\n            METHOD: WebGLRenderingContext.TRIANGLES,\n            UNIFORMS: UNIFORMS,\n            ATTRIBUTES: [\n                { name: \"a_positionStart\", size: 2, type: FLOAT },\n                { name: \"a_positionEnd\", size: 2, type: FLOAT },\n                { name: \"a_normal\", size: 2, type: FLOAT },\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n                { name: \"a_id\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n            ],\n            CONSTANT_ATTRIBUTES: [\n                // If 0, then position will be a_positionStart\n                // If 2, then position will be a_positionEnd\n                { name: \"a_positionCoef\", size: 1, type: FLOAT },\n                { name: \"a_normalCoef\", size: 1, type: FLOAT },\n            ],\n            CONSTANT_DATA: [\n                [0, 1],\n                [0, -1],\n                [1, 1],\n                [1, 1],\n                [0, -1],\n                [1, -1],\n            ],\n        };\n    };\n    EdgeRectangleProgram.prototype.processVisibleItem = function (edgeIndex, startIndex, sourceData, targetData, data) {\n        var thickness = data.size || 1;\n        var x1 = sourceData.x;\n        var y1 = sourceData.y;\n        var x2 = targetData.x;\n        var y2 = targetData.y;\n        var color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        var len = dx * dx + dy * dy;\n        var n1 = 0;\n        var n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var array = this.array;\n        array[startIndex++] = x1;\n        array[startIndex++] = y1;\n        array[startIndex++] = x2;\n        array[startIndex++] = y2;\n        array[startIndex++] = n1;\n        array[startIndex++] = n2;\n        array[startIndex++] = color;\n        array[startIndex++] = edgeIndex;\n    };\n    EdgeRectangleProgram.prototype.setUniforms = function (params, _a) {\n        var gl = _a.gl, uniformLocations = _a.uniformLocations;\n        var u_matrix = uniformLocations.u_matrix, u_zoomRatio = uniformLocations.u_zoomRatio, u_correctionRatio = uniformLocations.u_correctionRatio, u_sizeRatio = uniformLocations.u_sizeRatio;\n        gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n        gl.uniform1f(u_zoomRatio, params.zoomRatio);\n        gl.uniform1f(u_sizeRatio, params.sizeRatio);\n        gl.uniform1f(u_correctionRatio, params.correctionRatio);\n    };\n    return EdgeRectangleProgram;\n}(edge_1.EdgeProgram));\nexports[\"default\"] = EdgeRectangleProgram;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/edge-rectangle/index.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/edge-rectangle/vert.glsl.js":
/*!***************************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/edge-rectangle/vert.glsl.js ***!
  \***************************************************************************/
/***/ ((module) => {

eval("(()=>{\"use strict\";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o='attribute vec4 a_id;\\nattribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute float a_normalCoef;\\nattribute vec2 a_positionStart;\\nattribute vec2 a_positionEnd;\\nattribute float a_positionCoef;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_zoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  vec2 normal = a_normal * a_normalCoef;\\n  vec2 position = a_positionStart * (1.0 - a_positionCoef) + a_positionEnd * a_positionCoef;\\n\\n  float normalLength = length(normal);\\n  vec2 unitNormal = normal / normalLength;\\n\\n  // We require edges to be at least `minThickness` pixels thick *on screen*\\n  // (so we need to compensate the size ratio):\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n\\n  // Then, we need to retrieve the normalized thickness of the edge in the WebGL\\n  // referential (in a ([0, 1], [0, 1]) space), using our \"magic\" correction\\n  // ratio:\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(position + unitNormal * webGLThickness, 1)).xy, 0, 1);\\n\\n  // For the fragment shader though, we need a thickness that takes the \"magic\"\\n  // correction ratio into account (as in webGLThickness), but so that the\\n  // antialiasing effect does not depend on the zoom level. So here\\'s yet\\n  // another thickness version:\\n  v_thickness = webGLThickness / u_zoomRatio;\\n\\n  v_normal = unitNormal;\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n';module.exports=n})();\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/edge-rectangle/vert.glsl.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/node-point/frag.glsl.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/node-point/frag.glsl.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("(()=>{\"use strict\";var n={d:(e,o)=>{for(var r in o)n.o(o,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})},o:(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r:n=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})}},e={};n.r(e),n.d(e,{default:()=>o});const o=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float radius = 0.5;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  vec2 m = gl_PointCoord - vec2(0.5, 0.5);\\n  float dist = radius - length(m);\\n\\n  // No antialiasing for picking mode:\\n  #ifdef PICKING_MODE\\n  if (dist > v_border)\\n    gl_FragColor = v_color;\\n  else\\n    gl_FragColor = transparent;\\n\\n  #else\\n  float t = 0.0;\\n  if (dist > v_border)\\n    t = 1.0;\\n  else if (dist > 0.0)\\n    t = dist / v_border;\\n\\n  gl_FragColor = mix(transparent, v_color, t);\\n  #endif\\n}\\n\";module.exports=e})();\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/node-point/frag.glsl.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/node-point/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/node-point/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar utils_1 = __webpack_require__(/*! ../../../utils */ \"./node_modules/sigma/utils/index.js\");\nvar node_1 = __webpack_require__(/*! ../../node */ \"./node_modules/sigma/rendering/node.js\");\nvar vert_glsl_1 = __importDefault(__webpack_require__(/*! ./vert.glsl.js */ \"./node_modules/sigma/rendering/programs/node-point/vert.glsl.js\"));\nvar frag_glsl_1 = __importDefault(__webpack_require__(/*! ./frag.glsl.js */ \"./node_modules/sigma/rendering/programs/node-point/frag.glsl.js\"));\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\nvar UNIFORMS = [\"u_sizeRatio\", \"u_pixelRatio\", \"u_matrix\"];\nvar NodePointProgram = /** @class */ (function (_super) {\n    __extends(NodePointProgram, _super);\n    function NodePointProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodePointProgram.prototype.getDefinition = function () {\n        return {\n            VERTICES: 1,\n            VERTEX_SHADER_SOURCE: vert_glsl_1.default,\n            FRAGMENT_SHADER_SOURCE: frag_glsl_1.default,\n            METHOD: WebGLRenderingContext.POINTS,\n            UNIFORMS: UNIFORMS,\n            ATTRIBUTES: [\n                { name: \"a_position\", size: 2, type: FLOAT },\n                { name: \"a_size\", size: 1, type: FLOAT },\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n                { name: \"a_id\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n            ],\n        };\n    };\n    NodePointProgram.prototype.processVisibleItem = function (nodeIndex, startIndex, data) {\n        var array = this.array;\n        array[startIndex++] = data.x;\n        array[startIndex++] = data.y;\n        array[startIndex++] = data.size;\n        array[startIndex++] = (0, utils_1.floatColor)(data.color);\n        array[startIndex++] = nodeIndex;\n    };\n    NodePointProgram.prototype.setUniforms = function (_a, _b) {\n        var sizeRatio = _a.sizeRatio, pixelRatio = _a.pixelRatio, matrix = _a.matrix;\n        var gl = _b.gl, uniformLocations = _b.uniformLocations;\n        var u_sizeRatio = uniformLocations.u_sizeRatio, u_pixelRatio = uniformLocations.u_pixelRatio, u_matrix = uniformLocations.u_matrix;\n        gl.uniform1f(u_pixelRatio, pixelRatio);\n        gl.uniform1f(u_sizeRatio, sizeRatio);\n        gl.uniformMatrix3fv(u_matrix, false, matrix);\n    };\n    return NodePointProgram;\n}(node_1.NodeProgram));\nexports[\"default\"] = NodePointProgram;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/node-point/index.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/programs/node-point/vert.glsl.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sigma/rendering/programs/node-point/vert.glsl.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("(()=>{\"use strict\";var e={d:(o,n)=>{for(var t in n)e.o(n,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:n[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>n});const n=\"attribute vec4 a_id;\\nattribute vec4 a_color;\\nattribute vec2 a_position;\\nattribute float a_size;\\n\\nuniform float u_sizeRatio;\\nuniform float u_pixelRatio;\\nuniform mat3 u_matrix;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  gl_Position = vec4(\\n    (u_matrix * vec3(a_position, 1)).xy,\\n    0,\\n    1\\n  );\\n\\n  // Multiply the point size twice:\\n  //  - x SCALING_RATIO to correct the canvas scaling\\n  //  - x 2 to correct the formulae\\n  gl_PointSize = a_size / u_sizeRatio * u_pixelRatio * 2.0;\\n\\n  v_border = (0.5 / a_size) * u_sizeRatio;\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n\";module.exports=o})();\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/programs/node-point/vert.glsl.js?");

/***/ }),

/***/ "./node_modules/sigma/rendering/utils.js":
/*!***********************************************!*\
  !*** ./node_modules/sigma/rendering/utils.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n/**\n * Sigma.js Shader Utils\n * ======================\n *\n * Code used to load sigma's shaders.\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.loadProgram = exports.loadFragmentShader = exports.loadVertexShader = void 0;\n/**\n * Function used to load a shader.\n */\nfunction loadShader(type, gl, source) {\n    var glType = type === \"VERTEX\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\n    // Creating the shader\n    var shader = gl.createShader(glType);\n    if (shader === null) {\n        throw new Error(\"loadShader: error while creating the shader\");\n    }\n    // Loading source\n    gl.shaderSource(shader, source);\n    // Compiling the shader\n    gl.compileShader(shader);\n    // Retrieving compilation status\n    var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    // Throwing if something went awry\n    if (!successfullyCompiled) {\n        var infoLog = gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        throw new Error(\"loadShader: error while compiling the shader:\\n\".concat(infoLog, \"\\n\").concat(source));\n    }\n    return shader;\n}\nfunction loadVertexShader(gl, source) {\n    return loadShader(\"VERTEX\", gl, source);\n}\nexports.loadVertexShader = loadVertexShader;\nfunction loadFragmentShader(gl, source) {\n    return loadShader(\"FRAGMENT\", gl, source);\n}\nexports.loadFragmentShader = loadFragmentShader;\n/**\n * Function used to load a program.\n */\nfunction loadProgram(gl, shaders) {\n    var program = gl.createProgram();\n    if (program === null) {\n        throw new Error(\"loadProgram: error while creating the program.\");\n    }\n    var i, l;\n    // Attaching the shaders\n    for (i = 0, l = shaders.length; i < l; i++)\n        gl.attachShader(program, shaders[i]);\n    gl.linkProgram(program);\n    // Checking status\n    var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!successfullyLinked) {\n        gl.deleteProgram(program);\n        throw new Error(\"loadProgram: error while linking the program.\");\n    }\n    return program;\n}\nexports.loadProgram = loadProgram;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/rendering/utils.js?");

/***/ }),

/***/ "./node_modules/sigma/settings.js":
/*!****************************************!*\
  !*** ./node_modules/sigma/settings.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.resolveSettings = exports.validateSettings = exports.DEFAULT_EDGE_PROGRAM_CLASSES = exports.DEFAULT_NODE_PROGRAM_CLASSES = exports.DEFAULT_SETTINGS = void 0;\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/sigma/utils/index.js\");\nvar node_point_1 = __importDefault(__webpack_require__(/*! ./rendering/programs/node-point */ \"./node_modules/sigma/rendering/programs/node-point/index.js\"));\nvar edge_rectangle_1 = __importDefault(__webpack_require__(/*! ./rendering/programs/edge-rectangle */ \"./node_modules/sigma/rendering/programs/edge-rectangle/index.js\"));\nvar edge_arrow_1 = __importDefault(__webpack_require__(/*! ./rendering/programs/edge-arrow */ \"./node_modules/sigma/rendering/programs/edge-arrow/index.js\"));\nvar edge_labels_1 = __webpack_require__(/*! ./rendering/edge-labels */ \"./node_modules/sigma/rendering/edge-labels.js\");\nvar node_labels_1 = __webpack_require__(/*! ./rendering/node-labels */ \"./node_modules/sigma/rendering/node-labels.js\");\nvar node_hover_1 = __webpack_require__(/*! ./rendering/node-hover */ \"./node_modules/sigma/rendering/node-hover.js\");\nexports.DEFAULT_SETTINGS = {\n    // Performance\n    hideEdgesOnMove: false,\n    hideLabelsOnMove: false,\n    renderLabels: true,\n    renderEdgeLabels: false,\n    enableEdgeEvents: false,\n    // Component rendering\n    defaultNodeColor: \"#999\",\n    defaultNodeType: \"circle\",\n    defaultEdgeColor: \"#ccc\",\n    defaultEdgeType: \"line\",\n    labelFont: \"Arial\",\n    labelSize: 14,\n    labelWeight: \"normal\",\n    labelColor: { color: \"#000\" },\n    edgeLabelFont: \"Arial\",\n    edgeLabelSize: 14,\n    edgeLabelWeight: \"normal\",\n    edgeLabelColor: { attribute: \"color\" },\n    stagePadding: 30,\n    zoomToSizeRatioFunction: Math.sqrt,\n    itemSizesReference: \"screen\",\n    defaultDrawEdgeLabel: edge_labels_1.drawStraightEdgeLabel,\n    defaultDrawNodeLabel: node_labels_1.drawDiscNodeLabel,\n    defaultDrawNodeHover: node_hover_1.drawDiscNodeHover,\n    // Labels\n    labelDensity: 1,\n    labelGridCellSize: 100,\n    labelRenderedSizeThreshold: 6,\n    // Reducers\n    nodeReducer: null,\n    edgeReducer: null,\n    // Features\n    zIndex: false,\n    minCameraRatio: null,\n    maxCameraRatio: null,\n    // Lifecycle\n    allowInvalidContainer: false,\n    // Program classes\n    nodeProgramClasses: {},\n    nodeHoverProgramClasses: {},\n    edgeProgramClasses: {},\n};\nexports.DEFAULT_NODE_PROGRAM_CLASSES = {\n    circle: node_point_1.default,\n};\nexports.DEFAULT_EDGE_PROGRAM_CLASSES = {\n    arrow: edge_arrow_1.default,\n    line: edge_rectangle_1.default,\n};\nfunction validateSettings(settings) {\n    if (typeof settings.labelDensity !== \"number\" || settings.labelDensity < 0) {\n        throw new Error(\"Settings: invalid `labelDensity`. Expecting a positive number.\");\n    }\n    var minCameraRatio = settings.minCameraRatio, maxCameraRatio = settings.maxCameraRatio;\n    if (typeof minCameraRatio === \"number\" && typeof maxCameraRatio === \"number\" && maxCameraRatio < minCameraRatio) {\n        throw new Error(\"Settings: invalid camera ratio boundaries. Expecting `maxCameraRatio` to be greater than `minCameraRatio`.\");\n    }\n}\nexports.validateSettings = validateSettings;\nfunction resolveSettings(settings) {\n    var resolvedSettings = (0, utils_1.assign)({}, exports.DEFAULT_SETTINGS, settings);\n    resolvedSettings.nodeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_NODE_PROGRAM_CLASSES, resolvedSettings.nodeProgramClasses);\n    resolvedSettings.edgeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_EDGE_PROGRAM_CLASSES, resolvedSettings.edgeProgramClasses);\n    return resolvedSettings;\n}\nexports.resolveSettings = resolveSettings;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/settings.js?");

/***/ }),

/***/ "./node_modules/sigma/sigma.js":
/*!*************************************!*\
  !*** ./node_modules/sigma/sigma.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar camera_1 = __importDefault(__webpack_require__(/*! ./core/camera */ \"./node_modules/sigma/core/camera.js\"));\nvar mouse_1 = __importDefault(__webpack_require__(/*! ./core/captors/mouse */ \"./node_modules/sigma/core/captors/mouse.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/sigma/types.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/sigma/utils/index.js\");\nvar labels_1 = __webpack_require__(/*! ./core/labels */ \"./node_modules/sigma/core/labels.js\");\nvar settings_1 = __webpack_require__(/*! ./settings */ \"./node_modules/sigma/settings.js\");\nvar touch_1 = __importDefault(__webpack_require__(/*! ./core/captors/touch */ \"./node_modules/sigma/core/captors/touch.js\"));\nvar matrices_1 = __webpack_require__(/*! ./utils/matrices */ \"./node_modules/sigma/utils/matrices.js\");\nvar array_1 = __webpack_require__(/*! ./utils/array */ \"./node_modules/sigma/utils/array.js\");\nvar picking_1 = __webpack_require__(/*! ./utils/picking */ \"./node_modules/sigma/utils/picking.js\");\n/**\n * Constants.\n */\nvar X_LABEL_MARGIN = 150;\nvar Y_LABEL_MARGIN = 50;\n/**\n * Important functions.\n */\nfunction applyNodeDefaults(settings, key, data) {\n    if (!data.hasOwnProperty(\"x\") || !data.hasOwnProperty(\"y\"))\n        throw new Error(\"Sigma: could not find a valid position (x, y) for node \\\"\".concat(key, \"\\\". All your nodes must have a number \\\"x\\\" and \\\"y\\\". Maybe your forgot to apply a layout or your \\\"nodeReducer\\\" is not returning the correct data?\"));\n    if (!data.color)\n        data.color = settings.defaultNodeColor;\n    if (!data.label && data.label !== \"\")\n        data.label = null;\n    if (data.label !== undefined && data.label !== null)\n        data.label = \"\" + data.label;\n    else\n        data.label = null;\n    if (!data.size)\n        data.size = 2;\n    if (!data.hasOwnProperty(\"hidden\"))\n        data.hidden = false;\n    if (!data.hasOwnProperty(\"highlighted\"))\n        data.highlighted = false;\n    if (!data.hasOwnProperty(\"forceLabel\"))\n        data.forceLabel = false;\n    if (!data.type || data.type === \"\")\n        data.type = settings.defaultNodeType;\n    if (!data.zIndex)\n        data.zIndex = 0;\n    return data;\n}\nfunction applyEdgeDefaults(settings, _key, data) {\n    if (!data.color)\n        data.color = settings.defaultEdgeColor;\n    if (!data.label)\n        data.label = \"\";\n    if (!data.size)\n        data.size = 0.5;\n    if (!data.hasOwnProperty(\"hidden\"))\n        data.hidden = false;\n    if (!data.hasOwnProperty(\"forceLabel\"))\n        data.forceLabel = false;\n    if (!data.type || data.type === \"\")\n        data.type = settings.defaultEdgeType;\n    if (!data.zIndex)\n        data.zIndex = 0;\n    return data;\n}\n/**\n * Main class.\n *\n * @constructor\n * @param {Graph}       graph     - Graph to render.\n * @param {HTMLElement} container - DOM container in which to render.\n * @param {object}      settings  - Optional settings.\n */\nvar Sigma = /** @class */ (function (_super) {\n    __extends(Sigma, _super);\n    function Sigma(graph, container, settings) {\n        if (settings === void 0) { settings = {}; }\n        var _this = _super.call(this) || this;\n        _this.elements = {};\n        _this.canvasContexts = {};\n        _this.webGLContexts = {};\n        _this.pickingLayers = new Set();\n        _this.textures = {};\n        _this.frameBuffers = {};\n        _this.activeListeners = {};\n        _this.labelGrid = new labels_1.LabelGrid();\n        _this.nodeDataCache = {};\n        _this.edgeDataCache = {};\n        // Indices to keep track of the index of the item inside programs\n        _this.nodeProgramIndex = {};\n        _this.edgeProgramIndex = {};\n        _this.nodesWithForcedLabels = new Set();\n        _this.edgesWithForcedLabels = new Set();\n        _this.nodeExtent = { x: [0, 1], y: [0, 1] };\n        _this.nodeZExtent = [Infinity, -Infinity];\n        _this.edgeZExtent = [Infinity, -Infinity];\n        _this.matrix = (0, matrices_1.identity)();\n        _this.invMatrix = (0, matrices_1.identity)();\n        _this.correctionRatio = 1;\n        _this.customBBox = null;\n        _this.normalizationFunction = (0, utils_1.createNormalizationFunction)({\n            x: [0, 1],\n            y: [0, 1],\n        });\n        // Cache:\n        _this.graphToViewportRatio = 1;\n        _this.itemIDsIndex = {};\n        _this.nodeIndices = {};\n        _this.edgeIndices = {};\n        // Starting dimensions and pixel ratio\n        _this.width = 0;\n        _this.height = 0;\n        _this.pixelRatio = (0, utils_1.getPixelRatio)();\n        _this.pickingDownSizingRatio = 2 * _this.pixelRatio;\n        // Graph State\n        _this.displayedNodeLabels = new Set();\n        _this.displayedEdgeLabels = new Set();\n        _this.highlightedNodes = new Set();\n        _this.hoveredNode = null;\n        _this.hoveredEdge = null;\n        // Internal states\n        _this.renderFrame = null;\n        _this.renderHighlightedNodesFrame = null;\n        _this.needToProcess = false;\n        _this.checkEdgesEventsFrame = null;\n        // Programs\n        _this.nodePrograms = {};\n        _this.nodeHoverPrograms = {};\n        _this.edgePrograms = {};\n        // Resolving settings\n        _this.settings = (0, settings_1.resolveSettings)(settings);\n        // Validating\n        (0, settings_1.validateSettings)(_this.settings);\n        (0, utils_1.validateGraph)(graph);\n        if (!(container instanceof HTMLElement))\n            throw new Error(\"Sigma: container should be an html element.\");\n        // Properties\n        _this.graph = graph;\n        _this.container = container;\n        // Initializing contexts\n        _this.createWebGLContext(\"edges\", { picking: settings.enableEdgeEvents });\n        _this.createCanvasContext(\"edgeLabels\");\n        _this.createWebGLContext(\"nodes\", { picking: true });\n        _this.createCanvasContext(\"labels\");\n        _this.createCanvasContext(\"hovers\");\n        _this.createWebGLContext(\"hoverNodes\");\n        _this.createCanvasContext(\"mouse\");\n        // Initial resize\n        _this.resize();\n        // Loading programs\n        for (var type in _this.settings.nodeProgramClasses) {\n            var NodeProgramClass = _this.settings.nodeProgramClasses[type];\n            _this.nodePrograms[type] = new NodeProgramClass(_this.webGLContexts.nodes, _this.frameBuffers.nodes, _this);\n            var NodeHoverProgram = NodeProgramClass;\n            if (type in _this.settings.nodeHoverProgramClasses) {\n                NodeHoverProgram = _this.settings.nodeHoverProgramClasses[type];\n            }\n            _this.nodeHoverPrograms[type] = new NodeHoverProgram(_this.webGLContexts.hoverNodes, null, _this);\n        }\n        for (var type in _this.settings.edgeProgramClasses) {\n            var EdgeProgramClass = _this.settings.edgeProgramClasses[type];\n            _this.edgePrograms[type] = new EdgeProgramClass(_this.webGLContexts.edges, _this.frameBuffers.edges, _this);\n        }\n        // Initializing the camera\n        _this.camera = new camera_1.default();\n        // Binding camera events\n        _this.bindCameraHandlers();\n        // Initializing captors\n        _this.mouseCaptor = new mouse_1.default(_this.elements.mouse, _this);\n        _this.touchCaptor = new touch_1.default(_this.elements.mouse, _this);\n        // Binding event handlers\n        _this.bindEventHandlers();\n        // Binding graph handlers\n        _this.bindGraphHandlers();\n        // Trigger eventual settings-related things\n        _this.handleSettingsUpdate();\n        // Processing data for the first time & render\n        _this.refresh();\n        return _this;\n    }\n    /**---------------------------------------------------------------------------\n     * Internal methods.\n     **---------------------------------------------------------------------------\n     */\n    /**\n     * Internal function used to create a canvas element.\n     * @param  {string} id - Context's id.\n     * @return {Sigma}\n     */\n    Sigma.prototype.createCanvas = function (id) {\n        var canvas = (0, utils_1.createElement)(\"canvas\", {\n            position: \"absolute\",\n        }, {\n            class: \"sigma-\".concat(id),\n        });\n        this.elements[id] = canvas;\n        this.container.appendChild(canvas);\n        return canvas;\n    };\n    /**\n     * Internal function used to create a canvas context and add the relevant\n     * DOM elements.\n     *\n     * @param  {string} id - Context's id.\n     * @return {Sigma}\n     */\n    Sigma.prototype.createCanvasContext = function (id) {\n        var canvas = this.createCanvas(id);\n        var contextOptions = {\n            preserveDrawingBuffer: false,\n            antialias: false,\n        };\n        this.canvasContexts[id] = canvas.getContext(\"2d\", contextOptions);\n        return this;\n    };\n    /**\n     * Internal function used to create a WebGL context and add the relevant DOM\n     * elements.\n     *\n     * @param  {string}  id      - Context's id.\n     * @param  {object?} options - #getContext params to override (optional)\n     * @return {Sigma}\n     */\n    Sigma.prototype.createWebGLContext = function (id, options) {\n        var canvas = this.createCanvas(id);\n        if (options === null || options === void 0 ? void 0 : options.hidden)\n            canvas.remove();\n        var contextOptions = __assign({ preserveDrawingBuffer: false, antialias: false }, (options || {}));\n        var context;\n        // First we try webgl2 for an easy performance boost\n        context = canvas.getContext(\"webgl2\", contextOptions);\n        // Else we fall back to webgl\n        if (!context)\n            context = canvas.getContext(\"webgl\", contextOptions);\n        // Edge, I am looking right at you...\n        if (!context)\n            context = canvas.getContext(\"experimental-webgl\", contextOptions);\n        var gl = context;\n        this.webGLContexts[id] = gl;\n        // Blending:\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        // Prepare frame buffer for picking layers:\n        if (options === null || options === void 0 ? void 0 : options.picking) {\n            this.pickingLayers.add(id);\n            var newFrameBuffer = gl.createFramebuffer();\n            if (!newFrameBuffer)\n                throw new Error(\"Sigma: cannot create a new frame buffer for layer \".concat(id));\n            this.frameBuffers[id] = newFrameBuffer;\n        }\n        return this;\n    };\n    /**\n     * Method (re)binding WebGL texture (for picking).\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.resetWebGLTexture = function (id) {\n        var gl = this.webGLContexts[id];\n        var frameBuffer = this.frameBuffers[id];\n        var currentTexture = this.textures[id];\n        if (currentTexture)\n            gl.deleteTexture(currentTexture);\n        var pickingTexture = gl.createTexture();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n        gl.bindTexture(gl.TEXTURE_2D, pickingTexture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width / this.pickingDownSizingRatio, this.height / this.pickingDownSizingRatio, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, pickingTexture, 0);\n        this.textures[id] = pickingTexture;\n        return this;\n    };\n    /**\n     * Method binding camera handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindCameraHandlers = function () {\n        var _this = this;\n        this.activeListeners.camera = function () {\n            _this.scheduleRender();\n        };\n        this.camera.on(\"updated\", this.activeListeners.camera);\n        return this;\n    };\n    /**\n     * Method unbinding camera handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.unbindCameraHandlers = function () {\n        this.camera.removeListener(\"updated\", this.activeListeners.camera);\n        return this;\n    };\n    /**\n     * Method that returns the closest node to a given position.\n     */\n    Sigma.prototype.getNodeAtPosition = function (position) {\n        var x = position.x, y = position.y;\n        var color = (0, picking_1.getPixelColor)(this.webGLContexts.nodes, this.frameBuffers.nodes, x, y, this.pickingDownSizingRatio);\n        var index = utils_1.colorToIndex.apply(void 0, __spreadArray([], __read(color), false));\n        var itemAt = this.itemIDsIndex[index];\n        return itemAt && itemAt.type === \"node\" ? itemAt.id : null;\n    };\n    /**\n     * Method binding event handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindEventHandlers = function () {\n        var _this = this;\n        // Handling window resize\n        this.activeListeners.handleResize = function () {\n            // need to call a refresh to rebuild the labelgrid\n            _this.scheduleRefresh();\n        };\n        window.addEventListener(\"resize\", this.activeListeners.handleResize);\n        // Handling mouse move\n        this.activeListeners.handleMove = function (e) {\n            var baseEvent = {\n                event: e,\n                preventSigmaDefault: function () {\n                    e.preventSigmaDefault();\n                },\n            };\n            var nodeToHover = _this.getNodeAtPosition(e);\n            if (nodeToHover && _this.hoveredNode !== nodeToHover && !_this.nodeDataCache[nodeToHover].hidden) {\n                // Handling passing from one node to the other directly\n                if (_this.hoveredNode)\n                    _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), { node: _this.hoveredNode }));\n                _this.hoveredNode = nodeToHover;\n                _this.emit(\"enterNode\", __assign(__assign({}, baseEvent), { node: nodeToHover }));\n                _this.scheduleHighlightedNodesRender();\n                return;\n            }\n            // Checking if the hovered node is still hovered\n            if (_this.hoveredNode) {\n                if (_this.getNodeAtPosition(e) !== _this.hoveredNode) {\n                    var node = _this.hoveredNode;\n                    _this.hoveredNode = null;\n                    _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), { node: node }));\n                    _this.scheduleHighlightedNodesRender();\n                    return;\n                }\n            }\n            if (_this.settings.enableEdgeEvents) {\n                _this.checkEdgeHoverEvents(baseEvent);\n            }\n        };\n        // Handling click\n        var createMouseListener = function (eventType) {\n            return function (e) {\n                var baseEvent = {\n                    event: e,\n                    preventSigmaDefault: function () {\n                        e.preventSigmaDefault();\n                    },\n                };\n                var isFakeSigmaMouseEvent = e.original.isFakeSigmaMouseEvent;\n                var nodeAtPosition = isFakeSigmaMouseEvent ? _this.getNodeAtPosition(e) : _this.hoveredNode;\n                if (nodeAtPosition)\n                    return _this.emit(\"\".concat(eventType, \"Node\"), __assign(__assign({}, baseEvent), { node: nodeAtPosition }));\n                if (_this.settings.enableEdgeEvents) {\n                    var edge = _this.getEdgeAtPoint(e.x, e.y);\n                    if (edge)\n                        return _this.emit(\"\".concat(eventType, \"Edge\"), __assign(__assign({}, baseEvent), { edge: edge }));\n                }\n                return _this.emit(\"\".concat(eventType, \"Stage\"), baseEvent);\n            };\n        };\n        this.activeListeners.handleClick = createMouseListener(\"click\");\n        this.activeListeners.handleRightClick = createMouseListener(\"rightClick\");\n        this.activeListeners.handleDoubleClick = createMouseListener(\"doubleClick\");\n        this.activeListeners.handleWheel = createMouseListener(\"wheel\");\n        this.activeListeners.handleDown = createMouseListener(\"down\");\n        this.mouseCaptor.on(\"mousemove\", this.activeListeners.handleMove);\n        this.mouseCaptor.on(\"click\", this.activeListeners.handleClick);\n        this.mouseCaptor.on(\"rightClick\", this.activeListeners.handleRightClick);\n        this.mouseCaptor.on(\"doubleClick\", this.activeListeners.handleDoubleClick);\n        this.mouseCaptor.on(\"wheel\", this.activeListeners.handleWheel);\n        this.mouseCaptor.on(\"mousedown\", this.activeListeners.handleDown);\n        // TODO\n        // Deal with Touch captor events\n        return this;\n    };\n    /**\n     * Method binding graph handlers\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindGraphHandlers = function () {\n        var _this = this;\n        var graph = this.graph;\n        var LAYOUT_IMPACTING_FIELDS = new Set([\"x\", \"y\", \"zIndex\", \"type\"]);\n        this.activeListeners.eachNodeAttributesUpdatedGraphUpdate = function (e) {\n            var _a;\n            var updatedFields = (_a = e.hints) === null || _a === void 0 ? void 0 : _a.attributes;\n            // we process all nodes\n            _this.graph.forEachNode(function (node) { return _this.updateNode(node); });\n            // if coord, type or zIndex have changed, we need to schedule a render\n            // (zIndex for the programIndex)\n            var layoutChanged = !updatedFields || updatedFields.some(function (f) { return LAYOUT_IMPACTING_FIELDS.has(f); });\n            _this.refresh({ partialGraph: { nodes: graph.nodes() }, skipIndexation: !layoutChanged, schedule: true });\n        };\n        this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate = function (e) {\n            var _a;\n            var updatedFields = (_a = e.hints) === null || _a === void 0 ? void 0 : _a.attributes;\n            // we process all edges\n            _this.graph.forEachEdge(function (edge) { return _this.updateEdge(edge); });\n            var layoutChanged = updatedFields && [\"zIndex\", \"type\"].some(function (f) { return updatedFields === null || updatedFields === void 0 ? void 0 : updatedFields.includes(f); });\n            _this.refresh({ partialGraph: { edges: graph.edges() }, skipIndexation: !layoutChanged, schedule: true });\n        };\n        // On add node, we add the node in indices and then call for a render\n        this.activeListeners.addNodeGraphUpdate = function (payload) {\n            var node = payload.key;\n            // we process the node\n            _this.addNode(node);\n            // schedule a render for the node\n            _this.refresh({ partialGraph: { nodes: [node] }, skipIndexation: false, schedule: true });\n        };\n        // On update node, we update indices and then call for a render\n        this.activeListeners.updateNodeGraphUpdate = function (payload) {\n            var node = payload.key;\n            // schedule a render for the node\n            _this.refresh({ partialGraph: { nodes: [node] }, skipIndexation: false, schedule: true });\n        };\n        // On drop node, we remove the node from indices and then call for a refresh\n        this.activeListeners.dropNodeGraphUpdate = function (payload) {\n            var node = payload.key;\n            // we process the node\n            _this.removeNode(node);\n            // schedule a render for everything\n            _this.refresh({ schedule: true });\n        };\n        // On add edge, we remove the edge from indices and then call for a refresh\n        this.activeListeners.addEdgeGraphUpdate = function (payload) {\n            var edge = payload.key;\n            // we process the edge\n            _this.addEdge(edge);\n            // schedule a render for the edge\n            _this.refresh({ partialGraph: { edges: [edge] }, schedule: true });\n        };\n        // On update edge, we update indices and then call for a refresh\n        this.activeListeners.updateEdgeGraphUpdate = function (payload) {\n            var edge = payload.key;\n            // schedule a repaint for the edge\n            _this.refresh({ partialGraph: { edges: [edge] }, skipIndexation: false, schedule: true });\n        };\n        // On drop edge, we remove the edge from indices and then call for a refresh\n        this.activeListeners.dropEdgeGraphUpdate = function (payload) {\n            var edge = payload.key;\n            // we process the edge\n            _this.removeEdge(edge);\n            // schedule a render for all edges\n            _this.refresh({ schedule: true });\n        };\n        // On clear edges, we clear the edge indices and then call for a refresh\n        this.activeListeners.clearEdgesGraphUpdate = function () {\n            // we clear the edge data structures\n            _this.clearEdgeState();\n            _this.clearEdgeIndices();\n            // schedule a render for all edges\n            _this.refresh({ schedule: true });\n        };\n        // On graph clear, we clear indices and then call for a refresh\n        this.activeListeners.clearGraphUpdate = function () {\n            // clear graph state\n            _this.clearEdgeState();\n            _this.clearNodeState();\n            // clear graph indices\n            _this.clearEdgeIndices();\n            _this.clearNodeIndices();\n            // schedule a render for all\n            _this.refresh({ schedule: true });\n        };\n        graph.on(\"nodeAdded\", this.activeListeners.addNodeGraphUpdate);\n        graph.on(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\n        graph.on(\"nodeAttributesUpdated\", this.activeListeners.updateNodeGraphUpdate);\n        graph.on(\"eachNodeAttributesUpdated\", this.activeListeners.eachNodeAttributesUpdatedGraphUpdate);\n        graph.on(\"edgeAdded\", this.activeListeners.addEdgeGraphUpdate);\n        graph.on(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n        graph.on(\"edgeAttributesUpdated\", this.activeListeners.updateEdgeGraphUpdate);\n        graph.on(\"eachEdgeAttributesUpdated\", this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate);\n        graph.on(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n        graph.on(\"cleared\", this.activeListeners.clearGraphUpdate);\n        return this;\n    };\n    /**\n     * Method used to unbind handlers from the graph.\n     *\n     * @return {undefined}\n     */\n    Sigma.prototype.unbindGraphHandlers = function () {\n        var graph = this.graph;\n        graph.removeListener(\"nodeAdded\", this.activeListeners.addNodeGraphUpdate);\n        graph.removeListener(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\n        graph.removeListener(\"nodeAttributesUpdated\", this.activeListeners.updateNodeGraphUpdate);\n        graph.removeListener(\"eachNodeAttributesUpdated\", this.activeListeners.eachNodeAttributesUpdatedGraphUpdate);\n        graph.removeListener(\"edgeAdded\", this.activeListeners.addEdgeGraphUpdate);\n        graph.removeListener(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n        graph.removeListener(\"edgeAttributesUpdated\", this.activeListeners.updateEdgeGraphUpdate);\n        graph.removeListener(\"eachEdgeAttributesUpdated\", this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate);\n        graph.removeListener(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n        graph.removeListener(\"cleared\", this.activeListeners.clearGraphUpdate);\n    };\n    /**\n     * Method dealing with \"leaveEdge\" and \"enterEdge\" events.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.checkEdgeHoverEvents = function (payload) {\n        var edgeToHover = this.hoveredNode ? null : this.getEdgeAtPoint(payload.event.x, payload.event.y);\n        if (edgeToHover !== this.hoveredEdge) {\n            if (this.hoveredEdge)\n                this.emit(\"leaveEdge\", __assign(__assign({}, payload), { edge: this.hoveredEdge }));\n            if (edgeToHover)\n                this.emit(\"enterEdge\", __assign(__assign({}, payload), { edge: edgeToHover }));\n            this.hoveredEdge = edgeToHover;\n        }\n        return this;\n    };\n    /**\n     * Method looking for an edge colliding with a given point at (x, y). Returns\n     * the key of the edge if any, or null else.\n     */\n    Sigma.prototype.getEdgeAtPoint = function (x, y) {\n        var color = (0, picking_1.getPixelColor)(this.webGLContexts.edges, this.frameBuffers.edges, x, y, this.pickingDownSizingRatio);\n        var index = utils_1.colorToIndex.apply(void 0, __spreadArray([], __read(color), false));\n        var itemAt = this.itemIDsIndex[index];\n        return itemAt && itemAt.type === \"edge\" ? itemAt.id : null;\n    };\n    /**\n     * Method used to process the whole graph's data.\n     *  - extent\n     *  - normalizationFunction\n     *  - compute node's coordinate\n     *  - labelgrid\n     *  - program data allocation\n     * @return {Sigma}\n     */\n    Sigma.prototype.process = function () {\n        var _this = this;\n        var graph = this.graph;\n        var settings = this.settings;\n        var dimensions = this.getDimensions();\n        //\n        // NODES\n        //\n        this.nodeExtent = (0, utils_1.graphExtent)(this.graph);\n        this.normalizationFunction = (0, utils_1.createNormalizationFunction)(this.customBBox || this.nodeExtent);\n        // NOTE: it is important to compute this matrix after computing the node's extent\n        // because #.getGraphDimensions relies on it\n        var nullCamera = new camera_1.default();\n        var nullCameraMatrix = (0, utils_1.matrixFromCamera)(nullCamera.getState(), dimensions, this.getGraphDimensions(), this.getSetting(\"stagePadding\") || 0);\n        // Resetting the label grid\n        // TODO: it's probably better to do this explicitly or on resizes for layout and anims\n        this.labelGrid.resizeAndClear(dimensions, settings.labelGridCellSize);\n        var nodesPerPrograms = {};\n        var nodeIndices = {};\n        var edgeIndices = {};\n        var itemIDsIndex = {};\n        var incrID = 1;\n        var nodes = graph.nodes();\n        // Do some indexation on the whole graph\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            var node = nodes[i];\n            var data = this.nodeDataCache[node];\n            // Get initial coordinates\n            var attrs = graph.getNodeAttributes(node);\n            data.x = attrs.x;\n            data.y = attrs.y;\n            this.normalizationFunction.applyTo(data);\n            // labelgrid\n            if (typeof data.label === \"string\" && !data.hidden)\n                this.labelGrid.add(node, data.size, this.framedGraphToViewport(data, { matrix: nullCameraMatrix }));\n            // update count per program\n            nodesPerPrograms[data.type] = (nodesPerPrograms[data.type] || 0) + 1;\n        }\n        this.labelGrid.organize();\n        // Allocate memory to programs\n        for (var type in this.nodePrograms) {\n            if (!this.nodePrograms.hasOwnProperty(type)) {\n                throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(type, \"\\\"!\"));\n            }\n            this.nodePrograms[type].reallocate(nodesPerPrograms[type] || 0);\n            // We reset that count here, so that we can reuse it while calling the Program#process methods:\n            nodesPerPrograms[type] = 0;\n        }\n        // Order nodes by zIndex before to add them to program\n        if (this.settings.zIndex && this.nodeZExtent[0] !== this.nodeZExtent[1])\n            nodes = (0, utils_1.zIndexOrdering)(this.nodeZExtent, function (node) { return _this.nodeDataCache[node].zIndex; }, nodes);\n        // Add data to programs\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            var node = nodes[i];\n            nodeIndices[node] = incrID;\n            itemIDsIndex[nodeIndices[node]] = { type: \"node\", id: node };\n            incrID++;\n            var data = this.nodeDataCache[node];\n            this.addNodeToProgram(node, nodeIndices[node], nodesPerPrograms[data.type]++);\n        }\n        //\n        // EDGES\n        //\n        var edgesPerPrograms = {};\n        var edges = graph.edges();\n        // Allocate memory to programs\n        for (var i = 0, l = edges.length; i < l; i++) {\n            var edge = edges[i];\n            var data = this.edgeDataCache[edge];\n            edgesPerPrograms[data.type] = (edgesPerPrograms[data.type] || 0) + 1;\n        }\n        // Order edges by zIndex before to add them to program\n        if (this.settings.zIndex && this.edgeZExtent[0] !== this.edgeZExtent[1])\n            edges = (0, utils_1.zIndexOrdering)(this.edgeZExtent, function (edge) { return _this.edgeDataCache[edge].zIndex; }, edges);\n        for (var type in this.edgePrograms) {\n            if (!this.edgePrograms.hasOwnProperty(type)) {\n                throw new Error(\"Sigma: could not find a suitable program for edge type \\\"\".concat(type, \"\\\"!\"));\n            }\n            this.edgePrograms[type].reallocate(edgesPerPrograms[type] || 0);\n            // We reset that count here, so that we can reuse it while calling the Program#process methods:\n            edgesPerPrograms[type] = 0;\n        }\n        // Add data to programs\n        for (var i = 0, l = edges.length; i < l; i++) {\n            var edge = edges[i];\n            edgeIndices[edge] = incrID;\n            itemIDsIndex[edgeIndices[edge]] = { type: \"edge\", id: edge };\n            incrID++;\n            var data = this.edgeDataCache[edge];\n            this.addEdgeToProgram(edge, edgeIndices[edge], edgesPerPrograms[data.type]++);\n        }\n        this.itemIDsIndex = itemIDsIndex;\n        this.nodeIndices = nodeIndices;\n        this.edgeIndices = edgeIndices;\n        return this;\n    };\n    /**\n     * Method that backports potential settings updates where it's needed.\n     * @private\n     */\n    Sigma.prototype.handleSettingsUpdate = function () {\n        this.camera.minRatio = this.settings.minCameraRatio;\n        this.camera.maxRatio = this.settings.maxCameraRatio;\n        this.camera.setState(this.camera.validateState(this.camera.getState()));\n        return this;\n    };\n    /**\n     * Method used to render labels.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderLabels = function () {\n        if (!this.settings.renderLabels)\n            return this;\n        var cameraState = this.camera.getState();\n        // Selecting labels to draw\n        var labelsToDisplay = this.labelGrid.getLabelsToDisplay(cameraState.ratio, this.settings.labelDensity);\n        (0, array_1.extend)(labelsToDisplay, this.nodesWithForcedLabels);\n        this.displayedNodeLabels = new Set();\n        // Drawing labels\n        var context = this.canvasContexts.labels;\n        for (var i = 0, l = labelsToDisplay.length; i < l; i++) {\n            var node = labelsToDisplay[i];\n            var data = this.nodeDataCache[node];\n            // If the node was already drawn (like if it is eligible AND has\n            // `forceLabel`), we don't want to draw it again\n            // NOTE: we can do better probably\n            if (this.displayedNodeLabels.has(node))\n                continue;\n            // If the node is hidden, we don't need to display its label obviously\n            if (data.hidden)\n                continue;\n            var _a = this.framedGraphToViewport(data), x = _a.x, y = _a.y;\n            // NOTE: we can cache the labels we need to render until the camera's ratio changes\n            var size = this.scaleSize(data.size);\n            // Is node big enough?\n            if (!data.forceLabel && size < this.settings.labelRenderedSizeThreshold)\n                continue;\n            // Is node actually on screen (with some margin)\n            // NOTE: we used to rely on the quadtree for this, but the coordinates\n            // conversion make it unreliable and at that point we already converted\n            // to viewport coordinates and since the label grid already culls the\n            // number of potential labels to display this looks like a good\n            // performance compromise.\n            // NOTE: labelGrid.getLabelsToDisplay could probably optimize by not\n            // considering cells obviously outside of the range of the current\n            // view rectangle.\n            if (x < -X_LABEL_MARGIN ||\n                x > this.width + X_LABEL_MARGIN ||\n                y < -Y_LABEL_MARGIN ||\n                y > this.height + Y_LABEL_MARGIN)\n                continue;\n            // Because displayed edge labels depend directly on actually rendered node\n            // labels, we need to only add to this.displayedNodeLabels nodes whose label\n            // is rendered.\n            // This makes this.displayedNodeLabels depend on viewport, which might become\n            // an issue once we start memoizing getLabelsToDisplay.\n            this.displayedNodeLabels.add(node);\n            var _b = this.settings, nodeProgramClasses = _b.nodeProgramClasses, defaultDrawNodeLabel = _b.defaultDrawNodeLabel;\n            var drawLabel = nodeProgramClasses[data.type].drawLabel || defaultDrawNodeLabel;\n            drawLabel(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), this.settings);\n        }\n        return this;\n    };\n    /**\n     * Method used to render edge labels, based on which node labels were\n     * rendered.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderEdgeLabels = function () {\n        if (!this.settings.renderEdgeLabels)\n            return this;\n        var context = this.canvasContexts.edgeLabels;\n        // Clearing\n        context.clearRect(0, 0, this.width, this.height);\n        var edgeLabelsToDisplay = (0, labels_1.edgeLabelsToDisplayFromNodes)({\n            graph: this.graph,\n            hoveredNode: this.hoveredNode,\n            displayedNodeLabels: this.displayedNodeLabels,\n            highlightedNodes: this.highlightedNodes,\n        });\n        (0, array_1.extend)(edgeLabelsToDisplay, this.edgesWithForcedLabels);\n        var displayedLabels = new Set();\n        for (var i = 0, l = edgeLabelsToDisplay.length; i < l; i++) {\n            var edge = edgeLabelsToDisplay[i], extremities = this.graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]], edgeData = this.edgeDataCache[edge];\n            // If the edge was already drawn (like if it is eligible AND has\n            // `forceLabel`), we don't want to draw it again\n            if (displayedLabels.has(edge))\n                continue;\n            // If the edge is hidden we don't need to display its label\n            // NOTE: the test on sourceData & targetData is probably paranoid at this point?\n            if (edgeData.hidden || sourceData.hidden || targetData.hidden) {\n                continue;\n            }\n            var _a = this.settings, edgeProgramClasses = _a.edgeProgramClasses, defaultDrawEdgeLabel = _a.defaultDrawEdgeLabel;\n            var drawLabel = edgeProgramClasses[edgeData.type].drawLabel || defaultDrawEdgeLabel;\n            drawLabel(context, __assign(__assign({ key: edge }, edgeData), { size: this.scaleSize(edgeData.size) }), __assign(__assign(__assign({ key: extremities[0] }, sourceData), this.framedGraphToViewport(sourceData)), { size: this.scaleSize(sourceData.size) }), __assign(__assign(__assign({ key: extremities[1] }, targetData), this.framedGraphToViewport(targetData)), { size: this.scaleSize(targetData.size) }), this.settings);\n            displayedLabels.add(edge);\n        }\n        this.displayedEdgeLabels = displayedLabels;\n        return this;\n    };\n    /**\n     * Method used to render the highlighted nodes.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderHighlightedNodes = function () {\n        var _this = this;\n        var context = this.canvasContexts.hovers;\n        // Clearing\n        context.clearRect(0, 0, this.width, this.height);\n        // Rendering\n        var render = function (node) {\n            var data = _this.nodeDataCache[node];\n            var _a = _this.framedGraphToViewport(data), x = _a.x, y = _a.y;\n            var size = _this.scaleSize(data.size);\n            var _b = _this.settings, nodeProgramClasses = _b.nodeProgramClasses, defaultDrawNodeHover = _b.defaultDrawNodeHover;\n            var drawHover = nodeProgramClasses[data.type].drawHover || defaultDrawNodeHover;\n            drawHover(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), _this.settings);\n        };\n        var nodesToRender = [];\n        if (this.hoveredNode && !this.nodeDataCache[this.hoveredNode].hidden) {\n            nodesToRender.push(this.hoveredNode);\n        }\n        this.highlightedNodes.forEach(function (node) {\n            // The hovered node has already been highlighted\n            if (node !== _this.hoveredNode)\n                nodesToRender.push(node);\n        });\n        // Draw labels:\n        nodesToRender.forEach(function (node) { return render(node); });\n        // Draw WebGL nodes on top of the labels:\n        var nodesPerPrograms = {};\n        // 1. Count nodes per type:\n        nodesToRender.forEach(function (node) {\n            var type = _this.nodeDataCache[node].type;\n            nodesPerPrograms[type] = (nodesPerPrograms[type] || 0) + 1;\n        });\n        // 2. Allocate for each type for the proper number of nodes\n        for (var type in this.nodeHoverPrograms) {\n            this.nodeHoverPrograms[type].reallocate(nodesPerPrograms[type] || 0);\n            // Also reset count, to use when rendering:\n            nodesPerPrograms[type] = 0;\n        }\n        // 3. Process all nodes to render:\n        nodesToRender.forEach(function (node) {\n            var data = _this.nodeDataCache[node];\n            _this.nodeHoverPrograms[data.type].process(0, nodesPerPrograms[data.type]++, data);\n        });\n        // 4. Clear hovered nodes layer:\n        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\n        // 5. Render:\n        for (var type in this.nodeHoverPrograms) {\n            var program = this.nodeHoverPrograms[type];\n            program.render({\n                matrix: this.matrix,\n                width: this.width,\n                height: this.height,\n                pixelRatio: this.pixelRatio,\n                zoomRatio: this.camera.ratio,\n                sizeRatio: 1 / this.scaleSize(),\n                correctionRatio: this.correctionRatio,\n                downSizingRatio: this.pickingDownSizingRatio,\n            });\n        }\n    };\n    /**\n     * Method used to schedule a hover render.\n     *\n     */\n    Sigma.prototype.scheduleHighlightedNodesRender = function () {\n        var _this = this;\n        if (this.renderHighlightedNodesFrame || this.renderFrame)\n            return;\n        this.renderHighlightedNodesFrame = (0, utils_1.requestFrame)(function () {\n            // Resetting state\n            _this.renderHighlightedNodesFrame = null;\n            // Rendering\n            _this.renderHighlightedNodes();\n            _this.renderEdgeLabels();\n        });\n    };\n    /**\n     * Method used to render.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.render = function () {\n        var _this = this;\n        this.emit(\"beforeRender\");\n        var exitRender = function () {\n            _this.emit(\"afterRender\");\n            return _this;\n        };\n        // If a render was scheduled, we cancel it\n        if (this.renderFrame) {\n            (0, utils_1.cancelFrame)(this.renderFrame);\n            this.renderFrame = null;\n        }\n        // First we need to resize\n        this.resize();\n        // Do we need to reprocess data?\n        if (this.needToProcess)\n            this.process();\n        this.needToProcess = false;\n        // Clearing the canvases\n        this.clear();\n        // Prepare the textures\n        this.pickingLayers.forEach(function (layer) { return _this.resetWebGLTexture(layer); });\n        // If we have no nodes we can stop right there\n        if (!this.graph.order)\n            return exitRender();\n        // TODO: improve this heuristic or move to the captor itself?\n        // TODO: deal with the touch captor here as well\n        var mouseCaptor = this.mouseCaptor;\n        var moving = this.camera.isAnimated() ||\n            mouseCaptor.isMoving ||\n            mouseCaptor.draggedEvents ||\n            mouseCaptor.currentWheelDirection;\n        // Then we need to extract a matrix from the camera\n        var cameraState = this.camera.getState();\n        var viewportDimensions = this.getDimensions();\n        var graphDimensions = this.getGraphDimensions();\n        var padding = this.getSetting(\"stagePadding\") || 0;\n        this.matrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding);\n        this.invMatrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding, true);\n        this.correctionRatio = (0, utils_1.getMatrixImpact)(this.matrix, cameraState, viewportDimensions);\n        this.graphToViewportRatio = this.getGraphToViewportRatio();\n        // [jacomyal]\n        // This comment is related to the one above the `getMatrixImpact` definition:\n        // - `this.correctionRatio` is somehow not completely explained\n        // - `this.graphToViewportRatio` is the ratio of a distance in the viewport divided by the same distance in the\n        //   graph\n        // - `this.normalizationFunction.ratio` is basically `Math.max(graphDX, graphDY)`\n        // And now, I observe that if I multiply these three ratios, I have something constant, which value remains 2, even\n        // when I change the graph, the viewport or the camera. It might be useful later so I prefer to let this comment:\n        // console.log(this.graphToViewportRatio * this.correctionRatio * this.normalizationFunction.ratio * 2);\n        var params = {\n            matrix: this.matrix,\n            width: this.width,\n            height: this.height,\n            pixelRatio: this.pixelRatio,\n            zoomRatio: this.camera.ratio,\n            sizeRatio: 1 / this.scaleSize(),\n            correctionRatio: this.correctionRatio,\n            downSizingRatio: this.pickingDownSizingRatio,\n        };\n        // Drawing nodes\n        for (var type in this.nodePrograms) {\n            var program = this.nodePrograms[type];\n            program.render(params);\n        }\n        // Drawing edges\n        if (!this.settings.hideEdgesOnMove || !moving) {\n            for (var type in this.edgePrograms) {\n                var program = this.edgePrograms[type];\n                program.render(params);\n            }\n        }\n        // Do not display labels on move per setting\n        if (this.settings.hideLabelsOnMove && moving)\n            return exitRender();\n        this.renderLabels();\n        this.renderEdgeLabels();\n        this.renderHighlightedNodes();\n        return exitRender();\n    };\n    /**\n     * Add a node in the internal data structures.\n     * @private\n     * @param key The node's graphology ID\n     */\n    Sigma.prototype.addNode = function (key) {\n        // Node display data resolution:\n        //  1. First we get the node's attributes\n        //  2. We optionally reduce them using the function provided by the user\n        //     Note that this function must return a total object and won't be merged\n        //  3. We apply our defaults, while running some vital checks\n        //  4. We apply the normalization function\n        // We shallow copy node data to avoid dangerous behaviors from reducers\n        var attr = Object.assign({}, this.graph.getNodeAttributes(key));\n        if (this.settings.nodeReducer)\n            attr = this.settings.nodeReducer(key, attr);\n        var data = applyNodeDefaults(this.settings, key, attr);\n        this.nodeDataCache[key] = data;\n        // Label:\n        // We delete and add if needed because this function is also used from\n        // update\n        this.nodesWithForcedLabels.delete(key);\n        if (data.forceLabel && !data.hidden)\n            this.nodesWithForcedLabels.add(key);\n        // Highlighted:\n        // We remove and re add if needed because this function is also used from\n        // update\n        this.highlightedNodes.delete(key);\n        if (data.highlighted && !data.hidden)\n            this.highlightedNodes.add(key);\n        // zIndex\n        if (this.settings.zIndex) {\n            if (data.zIndex < this.nodeZExtent[0])\n                this.nodeZExtent[0] = data.zIndex;\n            if (data.zIndex > this.nodeZExtent[1])\n                this.nodeZExtent[1] = data.zIndex;\n        }\n    };\n    /**\n     * Update a node the internal data structures.\n     * @private\n     * @param key The node's graphology ID\n     */\n    Sigma.prototype.updateNode = function (key) {\n        this.addNode(key);\n        // Re-apply normalization on the node\n        var data = this.nodeDataCache[key];\n        this.normalizationFunction.applyTo(data);\n    };\n    /**\n     * Remove a node from the internal data structures.\n     * @private\n     * @param key The node's graphology ID\n     */\n    Sigma.prototype.removeNode = function (key) {\n        // Remove from node cache\n        delete this.nodeDataCache[key];\n        // Remove from node program index\n        delete this.nodeProgramIndex[key];\n        // Remove from higlighted nodes\n        this.highlightedNodes.delete(key);\n        // Remove from hovered\n        if (this.hoveredNode === key)\n            this.hoveredNode = null;\n        // Remove from forced label\n        this.nodesWithForcedLabels.delete(key);\n    };\n    /**\n     * Add an edge into the internal data structures.\n     * @private\n     * @param key The edge's graphology ID\n     */\n    Sigma.prototype.addEdge = function (key) {\n        // Edge display data resolution:\n        //  1. First we get the edge's attributes\n        //  2. We optionally reduce them using the function provided by the user\n        //  3. Note that this function must return a total object and won't be merged\n        //  4. We apply our defaults, while running some vital checks\n        // We shallow copy edge data to avoid dangerous behaviors from reducers\n        var attr = Object.assign({}, this.graph.getEdgeAttributes(key));\n        if (this.settings.edgeReducer)\n            attr = this.settings.edgeReducer(key, attr);\n        var data = applyEdgeDefaults(this.settings, key, attr);\n        this.edgeDataCache[key] = data;\n        // Forced label\n        // we filter and re push if needed because this function is also used from\n        // update\n        this.edgesWithForcedLabels.delete(key);\n        if (data.forceLabel && !data.hidden)\n            this.edgesWithForcedLabels.add(key);\n        // Check zIndex\n        if (this.settings.zIndex) {\n            if (data.zIndex < this.edgeZExtent[0])\n                this.edgeZExtent[0] = data.zIndex;\n            if (data.zIndex > this.edgeZExtent[1])\n                this.edgeZExtent[1] = data.zIndex;\n        }\n    };\n    /**\n     * Update an edge in the internal data structures.\n     * @private\n     * @param key The edge's graphology ID\n     */\n    Sigma.prototype.updateEdge = function (key) {\n        this.addEdge(key);\n    };\n    /**\n     * Remove an edge from the internal data structures.\n     * @private\n     * @param key The edge's graphology ID\n     */\n    Sigma.prototype.removeEdge = function (key) {\n        // Remove from edge cache\n        delete this.edgeDataCache[key];\n        // Remove from programId index\n        delete this.edgeProgramIndex[key];\n        // Remove from hovered\n        if (this.hoveredEdge === key)\n            this.hoveredEdge = null;\n        // Remove from forced label\n        this.edgesWithForcedLabels.delete(key);\n    };\n    /**\n     * Clear all indices related to nodes.\n     * @private\n     */\n    Sigma.prototype.clearNodeIndices = function () {\n        // LabelGrid & nodeExtent are only manage/populated in the process function\n        this.labelGrid = new labels_1.LabelGrid();\n        this.nodeExtent = { x: [0, 1], y: [0, 1] };\n        this.nodeDataCache = {};\n        this.edgeProgramIndex = {};\n        this.nodesWithForcedLabels = new Set();\n        this.nodeZExtent = [Infinity, -Infinity];\n    };\n    /**\n     * Clear all indices related to edges.\n     * @private\n     */\n    Sigma.prototype.clearEdgeIndices = function () {\n        this.edgeDataCache = {};\n        this.edgeProgramIndex = {};\n        this.edgesWithForcedLabels = new Set();\n        this.edgeZExtent = [Infinity, -Infinity];\n    };\n    /**\n     * Clear all indices.\n     * @private\n     */\n    Sigma.prototype.clearIndices = function () {\n        this.clearEdgeIndices();\n        this.clearNodeIndices();\n    };\n    /**\n     * Clear all graph state related to nodes.\n     * @private\n     */\n    Sigma.prototype.clearNodeState = function () {\n        this.displayedNodeLabels = new Set();\n        this.highlightedNodes = new Set();\n        this.hoveredNode = null;\n    };\n    /**\n     * Clear all graph state related to edges.\n     * @private\n     */\n    Sigma.prototype.clearEdgeState = function () {\n        this.displayedEdgeLabels = new Set();\n        this.highlightedNodes = new Set();\n        this.hoveredEdge = null;\n    };\n    /**\n     * Clear all graph state.\n     * @private\n     */\n    Sigma.prototype.clearState = function () {\n        this.clearEdgeState();\n        this.clearNodeState();\n    };\n    /**\n     * Add the node data to its program.\n     * @private\n     * @param node The node's graphology ID\n     * @param fingerprint A fingerprint used to identity the node with picking\n     * @param position The index where to place the node in the program\n     */\n    Sigma.prototype.addNodeToProgram = function (node, fingerprint, position) {\n        var data = this.nodeDataCache[node];\n        var nodeProgram = this.nodePrograms[data.type];\n        if (!nodeProgram)\n            throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(data.type, \"\\\"!\"));\n        nodeProgram.process(fingerprint, position, data);\n        // Saving program index\n        this.nodeProgramIndex[node] = position;\n    };\n    /**\n     * Add the edge data to its program.\n     * @private\n     * @param edge The edge's graphology ID\n     * @param fingerprint A fingerprint used to identity the edge with picking\n     * @param position The index where to place the edge in the program\n     */\n    Sigma.prototype.addEdgeToProgram = function (edge, fingerprint, position) {\n        var data = this.edgeDataCache[edge];\n        var edgeProgram = this.edgePrograms[data.type];\n        if (!edgeProgram)\n            throw new Error(\"Sigma: could not find a suitable program for edge type \\\"\".concat(data.type, \"\\\"!\"));\n        var extremities = this.graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]];\n        edgeProgram.process(fingerprint, position, sourceData, targetData, data);\n        // Saving program index\n        this.edgeProgramIndex[edge] = position;\n    };\n    /**---------------------------------------------------------------------------\n     * Public API.\n     **---------------------------------------------------------------------------\n     */\n    /**\n     * Method returning the renderer's camera.\n     *\n     * @return {Camera}\n     */\n    Sigma.prototype.getCamera = function () {\n        return this.camera;\n    };\n    /**\n     * Method setting the renderer's camera.\n     *\n     * @param  {Camera} camera - New camera.\n     * @return {Sigma}\n     */\n    Sigma.prototype.setCamera = function (camera) {\n        this.unbindCameraHandlers();\n        this.camera = camera;\n        this.bindCameraHandlers();\n    };\n    /**\n     * Method returning the container DOM element.\n     *\n     * @return {HTMLElement}\n     */\n    Sigma.prototype.getContainer = function () {\n        return this.container;\n    };\n    /**\n     * Method returning the renderer's graph.\n     *\n     * @return {Graph}\n     */\n    Sigma.prototype.getGraph = function () {\n        return this.graph;\n    };\n    /**\n     * Method used to set the renderer's graph.\n     *\n     * @return {Graph}\n     */\n    Sigma.prototype.setGraph = function (graph) {\n        if (graph === this.graph)\n            return;\n        // Unbinding handlers on the current graph\n        this.unbindGraphHandlers();\n        if (this.checkEdgesEventsFrame !== null) {\n            (0, utils_1.cancelFrame)(this.checkEdgesEventsFrame);\n            this.checkEdgesEventsFrame = null;\n        }\n        // Installing new graph\n        this.graph = graph;\n        // Binding new handlers\n        this.bindGraphHandlers();\n        // Re-rendering now to avoid discrepancies from now to next frame\n        this.refresh();\n    };\n    /**\n     * Method returning the mouse captor.\n     *\n     * @return {MouseCaptor}\n     */\n    Sigma.prototype.getMouseCaptor = function () {\n        return this.mouseCaptor;\n    };\n    /**\n     * Method returning the touch captor.\n     *\n     * @return {TouchCaptor}\n     */\n    Sigma.prototype.getTouchCaptor = function () {\n        return this.touchCaptor;\n    };\n    /**\n     * Method returning the current renderer's dimensions.\n     *\n     * @return {Dimensions}\n     */\n    Sigma.prototype.getDimensions = function () {\n        return { width: this.width, height: this.height };\n    };\n    /**\n     * Method returning the current graph's dimensions.\n     *\n     * @return {Dimensions}\n     */\n    Sigma.prototype.getGraphDimensions = function () {\n        var extent = this.customBBox || this.nodeExtent;\n        return {\n            width: extent.x[1] - extent.x[0] || 1,\n            height: extent.y[1] - extent.y[0] || 1,\n        };\n    };\n    /**\n     * Method used to get all the sigma node attributes.\n     * It's usefull for example to get the position of a node\n     * and to get values that are set by the nodeReducer\n     *\n     * @param  {string} key - The node's key.\n     * @return {NodeDisplayData | undefined} A copy of the desired node's attribute or undefined if not found\n     */\n    Sigma.prototype.getNodeDisplayData = function (key) {\n        var node = this.nodeDataCache[key];\n        return node ? Object.assign({}, node) : undefined;\n    };\n    /**\n     * Method used to get all the sigma edge attributes.\n     * It's useful for example to get values that are set by the edgeReducer.\n     *\n     * @param  {string} key - The edge's key.\n     * @return {EdgeDisplayData | undefined} A copy of the desired edge's attribute or undefined if not found\n     */\n    Sigma.prototype.getEdgeDisplayData = function (key) {\n        var edge = this.edgeDataCache[key];\n        return edge ? Object.assign({}, edge) : undefined;\n    };\n    /**\n     * Method used to get the set of currently displayed node labels.\n     *\n     * @return {Set<string>} A set of node keys whose label is displayed.\n     */\n    Sigma.prototype.getNodeDisplayedLabels = function () {\n        return new Set(this.displayedNodeLabels);\n    };\n    /**\n     * Method used to get the set of currently displayed edge labels.\n     *\n     * @return {Set<string>} A set of edge keys whose label is displayed.\n     */\n    Sigma.prototype.getEdgeDisplayedLabels = function () {\n        return new Set(this.displayedEdgeLabels);\n    };\n    /**\n     * Method returning a copy of the settings collection.\n     *\n     * @return {Settings} A copy of the settings collection.\n     */\n    Sigma.prototype.getSettings = function () {\n        return __assign({}, this.settings);\n    };\n    /**\n     * Method returning the current value for a given setting key.\n     *\n     * @param  {string} key - The setting key to get.\n     * @return {any} The value attached to this setting key or undefined if not found\n     */\n    Sigma.prototype.getSetting = function (key) {\n        return this.settings[key];\n    };\n    /**\n     * Method setting the value of a given setting key. Note that this will schedule\n     * a new render next frame.\n     *\n     * @param  {string} key - The setting key to set.\n     * @param  {any}    value - The value to set.\n     * @return {Sigma}\n     */\n    Sigma.prototype.setSetting = function (key, value) {\n        this.settings[key] = value;\n        (0, settings_1.validateSettings)(this.settings);\n        this.handleSettingsUpdate();\n        this.refresh();\n        return this;\n    };\n    /**\n     * Method updating the value of a given setting key using the provided function.\n     * Note that this will schedule a new render next frame.\n     *\n     * @param  {string}   key     - The setting key to set.\n     * @param  {function} updater - The update function.\n     * @return {Sigma}\n     */\n    Sigma.prototype.updateSetting = function (key, updater) {\n        this.settings[key] = updater(this.settings[key]);\n        (0, settings_1.validateSettings)(this.settings);\n        this.handleSettingsUpdate();\n        this.scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method used to resize the renderer.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.resize = function () {\n        var previousWidth = this.width, previousHeight = this.height;\n        this.width = this.container.offsetWidth;\n        this.height = this.container.offsetHeight;\n        this.pixelRatio = (0, utils_1.getPixelRatio)();\n        if (this.width === 0) {\n            if (this.settings.allowInvalidContainer)\n                this.width = 1;\n            else\n                throw new Error(\"Sigma: Container has no width. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\n        }\n        if (this.height === 0) {\n            if (this.settings.allowInvalidContainer)\n                this.height = 1;\n            else\n                throw new Error(\"Sigma: Container has no height. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\n        }\n        // If nothing has changed, we can stop right here\n        if (previousWidth === this.width && previousHeight === this.height)\n            return this;\n        this.emit(\"resize\");\n        // Sizing dom elements\n        for (var id in this.elements) {\n            var element = this.elements[id];\n            element.style.width = this.width + \"px\";\n            element.style.height = this.height + \"px\";\n        }\n        // Sizing canvas contexts\n        for (var id in this.canvasContexts) {\n            this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n            this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n            if (this.pixelRatio !== 1)\n                this.canvasContexts[id].scale(this.pixelRatio, this.pixelRatio);\n        }\n        // Sizing WebGL contexts\n        for (var id in this.webGLContexts) {\n            this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n            this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n            var gl = this.webGLContexts[id];\n            gl.viewport(0, 0, this.width * this.pixelRatio, this.height * this.pixelRatio);\n            // Clear picking texture if needed\n            if (this.pickingLayers.has(id)) {\n                var currentTexture = this.textures[id];\n                if (currentTexture)\n                    gl.deleteTexture(currentTexture);\n            }\n        }\n        return this;\n    };\n    /**\n     * Method used to clear all the canvases.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.clear = function () {\n        this.webGLContexts.nodes.clear(this.webGLContexts.nodes.COLOR_BUFFER_BIT);\n        this.webGLContexts.edges.clear(this.webGLContexts.edges.COLOR_BUFFER_BIT);\n        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\n        this.canvasContexts.labels.clearRect(0, 0, this.width, this.height);\n        this.canvasContexts.hovers.clearRect(0, 0, this.width, this.height);\n        this.canvasContexts.edgeLabels.clearRect(0, 0, this.width, this.height);\n        return this;\n    };\n    /**\n     * Method used to refresh, i.e. force the renderer to reprocess graph\n     * data and render, but keep the state.\n     * - if a partialGraph is provided, we only reprocess those nodes & edges.\n     * - if schedule is TRUE, we schedule a render instead of sync render\n     * - if skipIndexation is TRUE, then labelGrid & program indexation are skipped (can be used if you haven't modify x, y, zIndex & size)\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.refresh = function (opts) {\n        var _this = this;\n        var _a, _b;\n        var skipIndexation = (opts === null || opts === void 0 ? void 0 : opts.skipIndexation) !== undefined ? opts === null || opts === void 0 ? void 0 : opts.skipIndexation : false;\n        var schedule = (opts === null || opts === void 0 ? void 0 : opts.schedule) !== undefined ? opts.schedule : false;\n        var fullRefresh = !opts || !opts.partialGraph;\n        if (fullRefresh) {\n            // Re-index graph data\n            this.clearEdgeIndices();\n            this.clearNodeIndices();\n            this.graph.forEachNode(function (node) { return _this.addNode(node); });\n            this.graph.forEachEdge(function (edge) { return _this.addEdge(edge); });\n        }\n        else {\n            var nodes = ((_a = opts.partialGraph) === null || _a === void 0 ? void 0 : _a.nodes) || [];\n            for (var i = 0, l = (nodes === null || nodes === void 0 ? void 0 : nodes.length) || 0; i < l; i++) {\n                var node = nodes[i];\n                // Recompute node's data (ie. apply reducer)\n                this.updateNode(node);\n                // Add node to the program if layout is unchanged.\n                // otherwise it will be done in the process function\n                if (skipIndexation) {\n                    var programIndex = this.nodeProgramIndex[node];\n                    if (programIndex === undefined)\n                        throw new Error(\"Sigma: node \\\"\".concat(node, \"\\\" can't be repaint\"));\n                    this.addNodeToProgram(node, this.nodeIndices[node], programIndex);\n                }\n            }\n            var edges = ((_b = opts === null || opts === void 0 ? void 0 : opts.partialGraph) === null || _b === void 0 ? void 0 : _b.edges) || [];\n            for (var i = 0, l = edges.length; i < l; i++) {\n                var edge = edges[i];\n                // Recompute edge's data (ie. apply reducer)\n                this.updateEdge(edge);\n                // Add edge to the program\n                // otherwise it will be done in the process function\n                if (skipIndexation) {\n                    var programIndex = this.edgeProgramIndex[edge];\n                    if (programIndex === undefined)\n                        throw new Error(\"Sigma: edge \\\"\".concat(edge, \"\\\" can't be repaint\"));\n                    this.addEdgeToProgram(edge, this.edgeIndices[edge], programIndex);\n                }\n            }\n        }\n        // Do we need to call the process function ?\n        if (fullRefresh || !skipIndexation)\n            this.needToProcess = true;\n        if (schedule)\n            this.scheduleRender();\n        else\n            this.render();\n        return this;\n    };\n    /**\n     * Method used to schedule a render at the next available frame.\n     * This method can be safely called on a same frame because it basically\n     * debounces refresh to the next frame.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.scheduleRender = function () {\n        var _this = this;\n        if (!this.renderFrame) {\n            this.renderFrame = (0, utils_1.requestFrame)(function () {\n                _this.render();\n            });\n        }\n        return this;\n    };\n    /**\n     * Method used to schedule a refresh (i.e. fully reprocess graph data and render)\n     * at the next available frame.\n     * This method can be safely called on a same frame because it basically\n     * debounces refresh to the next frame.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.scheduleRefresh = function (opts) {\n        return this.refresh(__assign(__assign({}, opts), { schedule: true }));\n    };\n    /**\n     * Method used to (un)zoom, while preserving the position of a viewport point.\n     * Used for instance to zoom \"on the mouse cursor\".\n     *\n     * @param viewportTarget\n     * @param newRatio\n     * @return {CameraState}\n     */\n    Sigma.prototype.getViewportZoomedState = function (viewportTarget, newRatio) {\n        var _a = this.camera.getState(), ratio = _a.ratio, angle = _a.angle, x = _a.x, y = _a.y;\n        // TODO: handle max zoom\n        var ratioDiff = newRatio / ratio;\n        var center = {\n            x: this.width / 2,\n            y: this.height / 2,\n        };\n        var graphMousePosition = this.viewportToFramedGraph(viewportTarget);\n        var graphCenterPosition = this.viewportToFramedGraph(center);\n        return {\n            angle: angle,\n            x: (graphMousePosition.x - graphCenterPosition.x) * (1 - ratioDiff) + x,\n            y: (graphMousePosition.y - graphCenterPosition.y) * (1 - ratioDiff) + y,\n            ratio: newRatio,\n        };\n    };\n    /**\n     * Method returning the abstract rectangle containing the graph according\n     * to the camera's state.\n     *\n     * @return {object} - The view's rectangle.\n     */\n    Sigma.prototype.viewRectangle = function () {\n        // TODO: reduce relative margin?\n        var marginX = (0 * this.width) / 8, marginY = (0 * this.height) / 8;\n        var p1 = this.viewportToFramedGraph({ x: 0 - marginX, y: 0 - marginY }), p2 = this.viewportToFramedGraph({ x: this.width + marginX, y: 0 - marginY }), h = this.viewportToFramedGraph({ x: 0, y: this.height + marginY });\n        return {\n            x1: p1.x,\n            y1: p1.y,\n            x2: p2.x,\n            y2: p2.y,\n            height: p2.y - h.y,\n        };\n    };\n    /**\n     * Method returning the coordinates of a point from the framed graph system to the viewport system. It allows\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\n     *\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n     * of computations.\n     */\n    Sigma.prototype.framedGraphToViewport = function (coordinates, override) {\n        if (override === void 0) { override = {}; }\n        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !!override.graphDimensions;\n        var matrix = override.matrix\n            ? override.matrix\n            : recomputeMatrix\n                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0)\n                : this.matrix;\n        var viewportPos = (0, matrices_1.multiplyVec2)(matrix, coordinates);\n        return {\n            x: ((1 + viewportPos.x) * this.width) / 2,\n            y: ((1 - viewportPos.y) * this.height) / 2,\n        };\n    };\n    /**\n     * Method returning the coordinates of a point from the viewport system to the framed graph system. It allows\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\n     *\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n     * of computations.\n     */\n    Sigma.prototype.viewportToFramedGraph = function (coordinates, override) {\n        if (override === void 0) { override = {}; }\n        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !override.graphDimensions;\n        var invMatrix = override.matrix\n            ? override.matrix\n            : recomputeMatrix\n                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0, true)\n                : this.invMatrix;\n        var res = (0, matrices_1.multiplyVec2)(invMatrix, {\n            x: (coordinates.x / this.width) * 2 - 1,\n            y: 1 - (coordinates.y / this.height) * 2,\n        });\n        if (isNaN(res.x))\n            res.x = 0;\n        if (isNaN(res.y))\n            res.y = 0;\n        return res;\n    };\n    /**\n     * Method used to translate a point's coordinates from the viewport system (pixel distance from the top-left of the\n     * stage) to the graph system (the reference system of data as they are in the given graph instance).\n     *\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\n     * based on a different view than the one being currently being displayed on screen.\n     *\n     * @param {Coordinates}                  viewportPoint\n     * @param {CoordinateConversionOverride} override\n     */\n    Sigma.prototype.viewportToGraph = function (viewportPoint, override) {\n        if (override === void 0) { override = {}; }\n        return this.normalizationFunction.inverse(this.viewportToFramedGraph(viewportPoint, override));\n    };\n    /**\n     * Method used to translate a point's coordinates from the graph system (the reference system of data as they are in\n     * the given graph instance) to the viewport system (pixel distance from the top-left of the stage).\n     *\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\n     * based on a different view than the one being currently being displayed on screen.\n     *\n     * @param {Coordinates}                  graphPoint\n     * @param {CoordinateConversionOverride} override\n     */\n    Sigma.prototype.graphToViewport = function (graphPoint, override) {\n        if (override === void 0) { override = {}; }\n        return this.framedGraphToViewport(this.normalizationFunction(graphPoint), override);\n    };\n    /**\n     * Method returning the distance multiplier between the graph system and the\n     * viewport system.\n     */\n    Sigma.prototype.getGraphToViewportRatio = function () {\n        var graphP1 = { x: 0, y: 0 };\n        var graphP2 = { x: 1, y: 1 };\n        var graphD = Math.sqrt(Math.pow(graphP1.x - graphP2.x, 2) + Math.pow(graphP1.y - graphP2.y, 2));\n        var viewportP1 = this.graphToViewport(graphP1);\n        var viewportP2 = this.graphToViewport(graphP2);\n        var viewportD = Math.sqrt(Math.pow(viewportP1.x - viewportP2.x, 2) + Math.pow(viewportP1.y - viewportP2.y, 2));\n        return viewportD / graphD;\n    };\n    /**\n     * Method returning the graph's bounding box.\n     *\n     * @return {{ x: Extent, y: Extent }}\n     */\n    Sigma.prototype.getBBox = function () {\n        return this.nodeExtent;\n    };\n    /**\n     * Method returning the graph's custom bounding box, if any.\n     *\n     * @return {{ x: Extent, y: Extent } | null}\n     */\n    Sigma.prototype.getCustomBBox = function () {\n        return this.customBBox;\n    };\n    /**\n     * Method used to override the graph's bounding box with a custom one. Give `null` as the argument to stop overriding.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.setCustomBBox = function (customBBox) {\n        this.customBBox = customBBox;\n        this.scheduleRender();\n        return this;\n    };\n    /**\n     * Method used to shut the container & release event listeners.\n     *\n     * @return {undefined}\n     */\n    Sigma.prototype.kill = function () {\n        var _a;\n        // Emitting \"kill\" events so that plugins and such can cleanup\n        this.emit(\"kill\");\n        // Releasing events\n        this.removeAllListeners();\n        // Releasing camera handlers\n        this.unbindCameraHandlers();\n        // Releasing DOM events & captors\n        window.removeEventListener(\"resize\", this.activeListeners.handleResize);\n        this.mouseCaptor.kill();\n        this.touchCaptor.kill();\n        // Releasing graph handlers\n        this.unbindGraphHandlers();\n        // Releasing cache & state\n        this.clearIndices();\n        this.clearState();\n        this.nodeDataCache = {};\n        this.edgeDataCache = {};\n        this.highlightedNodes.clear();\n        // Clearing frames\n        if (this.renderFrame) {\n            (0, utils_1.cancelFrame)(this.renderFrame);\n            this.renderFrame = null;\n        }\n        if (this.renderHighlightedNodesFrame) {\n            (0, utils_1.cancelFrame)(this.renderHighlightedNodesFrame);\n            this.renderHighlightedNodesFrame = null;\n        }\n        // Destroying WebGL contexts\n        for (var id in this.webGLContexts) {\n            var context = this.webGLContexts[id];\n            (_a = context.getExtension(\"WEBGL_lose_context\")) === null || _a === void 0 ? void 0 : _a.loseContext();\n        }\n        // Destroying canvases\n        var container = this.container;\n        while (container.firstChild)\n            container.removeChild(container.firstChild);\n        // Destroying remaining collections\n        this.canvasContexts = {};\n        this.webGLContexts = {};\n        this.elements = {};\n        this.nodePrograms = {};\n        this.nodeHoverPrograms = {};\n        this.edgePrograms = {};\n    };\n    /**\n     * Method used to scale the given size according to the camera's ratio, i.e.\n     * zooming state.\n     *\n     * @param  {number?} size -        The size to scale (node size, edge thickness etc.).\n     * @param  {number?} cameraRatio - A camera ratio (defaults to the actual camera ratio).\n     * @return {number}              - The scaled size.\n     */\n    Sigma.prototype.scaleSize = function (size, cameraRatio) {\n        if (size === void 0) { size = 1; }\n        if (cameraRatio === void 0) { cameraRatio = this.camera.ratio; }\n        return ((size / this.settings.zoomToSizeRatioFunction(cameraRatio)) *\n            (this.getSetting(\"itemSizesReference\") === \"positions\" ? cameraRatio * this.graphToViewportRatio : 1));\n    };\n    /**\n     * Method that returns the collection of all used canvases.\n     * At the moment, the instantiated canvases are the following, and in the\n     * following order in the DOM:\n     * - `edges`\n     * - `nodes`\n     * - `edgeLabels`\n     * - `labels`\n     * - `hovers`\n     * - `hoverNodes`\n     * - `mouse`\n     *\n     * @return {PlainObject<HTMLCanvasElement>} - The collection of canvases.\n     */\n    Sigma.prototype.getCanvases = function () {\n        return __assign({}, this.elements);\n    };\n    return Sigma;\n}(types_1.TypedEventEmitter));\nexports[\"default\"] = Sigma;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/sigma.js?");

/***/ }),

/***/ "./node_modules/sigma/types.js":
/*!*************************************!*\
  !*** ./node_modules/sigma/types.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TypedEventEmitter = void 0;\n/**\n * Sigma.js Types\n * ===============\n *\n * Various type declarations used throughout the library.\n * @module\n */\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar TypedEventEmitter = /** @class */ (function (_super) {\n    __extends(TypedEventEmitter, _super);\n    function TypedEventEmitter() {\n        var _this = _super.call(this) || this;\n        _this.rawEmitter = _this;\n        return _this;\n    }\n    return TypedEventEmitter;\n}(events_1.EventEmitter));\nexports.TypedEventEmitter = TypedEventEmitter;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/types.js?");

/***/ }),

/***/ "./node_modules/sigma/utils/animate.js":
/*!*********************************************!*\
  !*** ./node_modules/sigma/utils/animate.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.animateNodes = exports.ANIMATE_DEFAULTS = void 0;\nvar index_1 = __webpack_require__(/*! ./index */ \"./node_modules/sigma/utils/index.js\");\nvar easings_1 = __importDefault(__webpack_require__(/*! ./easings */ \"./node_modules/sigma/utils/easings.js\"));\nexports.ANIMATE_DEFAULTS = {\n    easing: \"quadraticInOut\",\n    duration: 150,\n};\n/**\n * Function used to animate the nodes.\n */\nfunction animateNodes(graph, targets, opts, callback) {\n    var options = Object.assign({}, exports.ANIMATE_DEFAULTS, opts);\n    var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n    var start = Date.now();\n    var startPositions = {};\n    for (var node in targets) {\n        var attrs = targets[node];\n        startPositions[node] = {};\n        for (var k in attrs)\n            startPositions[node][k] = graph.getNodeAttribute(node, k);\n    }\n    var frame = null;\n    var step = function () {\n        frame = null;\n        var p = (Date.now() - start) / options.duration;\n        if (p >= 1) {\n            // Animation is done\n            for (var node in targets) {\n                var attrs = targets[node];\n                // We use given values to avoid precision issues and for convenience\n                for (var k in attrs)\n                    graph.setNodeAttribute(node, k, attrs[k]);\n            }\n            if (typeof callback === \"function\")\n                callback();\n            return;\n        }\n        p = easing(p);\n        for (var node in targets) {\n            var attrs = targets[node];\n            var s = startPositions[node];\n            for (var k in attrs)\n                graph.setNodeAttribute(node, k, attrs[k] * p + s[k] * (1 - p));\n        }\n        frame = (0, index_1.requestFrame)(step);\n    };\n    step();\n    return function () {\n        if (frame)\n            (0, index_1.cancelFrame)(frame);\n    };\n}\nexports.animateNodes = animateNodes;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/utils/animate.js?");

/***/ }),

/***/ "./node_modules/sigma/utils/array.js":
/*!*******************************************!*\
  !*** ./node_modules/sigma/utils/array.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n/**\n * Extend function\n * ================\n *\n * Function used to push a bunch of values into an array at once.\n * Freely inspired by @Yomguithereal/helpers/extend.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.extend = void 0;\n/**\n * Extends the target array with the given values.\n *\n * @param  {array} array  - Target array.\n * @param  {array} values - A set of the values to add.\n */\nfunction extend(array, values) {\n    var l2 = values.size;\n    if (l2 === 0)\n        return;\n    var l1 = array.length;\n    array.length += l2;\n    var i = 0;\n    values.forEach(function (value) {\n        array[l1 + i] = value;\n        i++;\n    });\n}\nexports.extend = extend;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/utils/array.js?");

/***/ }),

/***/ "./node_modules/sigma/utils/data.js":
/*!******************************************!*\
  !*** ./node_modules/sigma/utils/data.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HTML_COLORS = void 0;\nexports.HTML_COLORS = {\n    black: \"#000000\",\n    silver: \"#C0C0C0\",\n    gray: \"#808080\",\n    grey: \"#808080\",\n    white: \"#FFFFFF\",\n    maroon: \"#800000\",\n    red: \"#FF0000\",\n    purple: \"#800080\",\n    fuchsia: \"#FF00FF\",\n    green: \"#008000\",\n    lime: \"#00FF00\",\n    olive: \"#808000\",\n    yellow: \"#FFFF00\",\n    navy: \"#000080\",\n    blue: \"#0000FF\",\n    teal: \"#008080\",\n    aqua: \"#00FFFF\",\n    darkblue: \"#00008B\",\n    mediumblue: \"#0000CD\",\n    darkgreen: \"#006400\",\n    darkcyan: \"#008B8B\",\n    deepskyblue: \"#00BFFF\",\n    darkturquoise: \"#00CED1\",\n    mediumspringgreen: \"#00FA9A\",\n    springgreen: \"#00FF7F\",\n    cyan: \"#00FFFF\",\n    midnightblue: \"#191970\",\n    dodgerblue: \"#1E90FF\",\n    lightseagreen: \"#20B2AA\",\n    forestgreen: \"#228B22\",\n    seagreen: \"#2E8B57\",\n    darkslategray: \"#2F4F4F\",\n    darkslategrey: \"#2F4F4F\",\n    limegreen: \"#32CD32\",\n    mediumseagreen: \"#3CB371\",\n    turquoise: \"#40E0D0\",\n    royalblue: \"#4169E1\",\n    steelblue: \"#4682B4\",\n    darkslateblue: \"#483D8B\",\n    mediumturquoise: \"#48D1CC\",\n    indigo: \"#4B0082\",\n    darkolivegreen: \"#556B2F\",\n    cadetblue: \"#5F9EA0\",\n    cornflowerblue: \"#6495ED\",\n    rebeccapurple: \"#663399\",\n    mediumaquamarine: \"#66CDAA\",\n    dimgray: \"#696969\",\n    dimgrey: \"#696969\",\n    slateblue: \"#6A5ACD\",\n    olivedrab: \"#6B8E23\",\n    slategray: \"#708090\",\n    slategrey: \"#708090\",\n    lightslategray: \"#778899\",\n    lightslategrey: \"#778899\",\n    mediumslateblue: \"#7B68EE\",\n    lawngreen: \"#7CFC00\",\n    chartreuse: \"#7FFF00\",\n    aquamarine: \"#7FFFD4\",\n    skyblue: \"#87CEEB\",\n    lightskyblue: \"#87CEFA\",\n    blueviolet: \"#8A2BE2\",\n    darkred: \"#8B0000\",\n    darkmagenta: \"#8B008B\",\n    saddlebrown: \"#8B4513\",\n    darkseagreen: \"#8FBC8F\",\n    lightgreen: \"#90EE90\",\n    mediumpurple: \"#9370DB\",\n    darkviolet: \"#9400D3\",\n    palegreen: \"#98FB98\",\n    darkorchid: \"#9932CC\",\n    yellowgreen: \"#9ACD32\",\n    sienna: \"#A0522D\",\n    brown: \"#A52A2A\",\n    darkgray: \"#A9A9A9\",\n    darkgrey: \"#A9A9A9\",\n    lightblue: \"#ADD8E6\",\n    greenyellow: \"#ADFF2F\",\n    paleturquoise: \"#AFEEEE\",\n    lightsteelblue: \"#B0C4DE\",\n    powderblue: \"#B0E0E6\",\n    firebrick: \"#B22222\",\n    darkgoldenrod: \"#B8860B\",\n    mediumorchid: \"#BA55D3\",\n    rosybrown: \"#BC8F8F\",\n    darkkhaki: \"#BDB76B\",\n    mediumvioletred: \"#C71585\",\n    indianred: \"#CD5C5C\",\n    peru: \"#CD853F\",\n    chocolate: \"#D2691E\",\n    tan: \"#D2B48C\",\n    lightgray: \"#D3D3D3\",\n    lightgrey: \"#D3D3D3\",\n    thistle: \"#D8BFD8\",\n    orchid: \"#DA70D6\",\n    goldenrod: \"#DAA520\",\n    palevioletred: \"#DB7093\",\n    crimson: \"#DC143C\",\n    gainsboro: \"#DCDCDC\",\n    plum: \"#DDA0DD\",\n    burlywood: \"#DEB887\",\n    lightcyan: \"#E0FFFF\",\n    lavender: \"#E6E6FA\",\n    darksalmon: \"#E9967A\",\n    violet: \"#EE82EE\",\n    palegoldenrod: \"#EEE8AA\",\n    lightcoral: \"#F08080\",\n    khaki: \"#F0E68C\",\n    aliceblue: \"#F0F8FF\",\n    honeydew: \"#F0FFF0\",\n    azure: \"#F0FFFF\",\n    sandybrown: \"#F4A460\",\n    wheat: \"#F5DEB3\",\n    beige: \"#F5F5DC\",\n    whitesmoke: \"#F5F5F5\",\n    mintcream: \"#F5FFFA\",\n    ghostwhite: \"#F8F8FF\",\n    salmon: \"#FA8072\",\n    antiquewhite: \"#FAEBD7\",\n    linen: \"#FAF0E6\",\n    lightgoldenrodyellow: \"#FAFAD2\",\n    oldlace: \"#FDF5E6\",\n    magenta: \"#FF00FF\",\n    deeppink: \"#FF1493\",\n    orangered: \"#FF4500\",\n    tomato: \"#FF6347\",\n    hotpink: \"#FF69B4\",\n    coral: \"#FF7F50\",\n    darkorange: \"#FF8C00\",\n    lightsalmon: \"#FFA07A\",\n    orange: \"#FFA500\",\n    lightpink: \"#FFB6C1\",\n    pink: \"#FFC0CB\",\n    gold: \"#FFD700\",\n    peachpuff: \"#FFDAB9\",\n    navajowhite: \"#FFDEAD\",\n    moccasin: \"#FFE4B5\",\n    bisque: \"#FFE4C4\",\n    mistyrose: \"#FFE4E1\",\n    blanchedalmond: \"#FFEBCD\",\n    papayawhip: \"#FFEFD5\",\n    lavenderblush: \"#FFF0F5\",\n    seashell: \"#FFF5EE\",\n    cornsilk: \"#FFF8DC\",\n    lemonchiffon: \"#FFFACD\",\n    floralwhite: \"#FFFAF0\",\n    snow: \"#FFFAFA\",\n    lightyellow: \"#FFFFE0\",\n    ivory: \"#FFFFF0\",\n};\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/utils/data.js?");

/***/ }),

/***/ "./node_modules/sigma/utils/easings.js":
/*!*********************************************!*\
  !*** ./node_modules/sigma/utils/easings.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cubicInOut = exports.cubicOut = exports.cubicIn = exports.quadraticInOut = exports.quadraticOut = exports.quadraticIn = exports.linear = void 0;\n/**\n * Sigma.js Easings\n * =================\n *\n * Handy collection of easing functions.\n * @module\n */\nvar linear = function (k) { return k; };\nexports.linear = linear;\nvar quadraticIn = function (k) { return k * k; };\nexports.quadraticIn = quadraticIn;\nvar quadraticOut = function (k) { return k * (2 - k); };\nexports.quadraticOut = quadraticOut;\nvar quadraticInOut = function (k) {\n    if ((k *= 2) < 1)\n        return 0.5 * k * k;\n    return -0.5 * (--k * (k - 2) - 1);\n};\nexports.quadraticInOut = quadraticInOut;\nvar cubicIn = function (k) { return k * k * k; };\nexports.cubicIn = cubicIn;\nvar cubicOut = function (k) { return --k * k * k + 1; };\nexports.cubicOut = cubicOut;\nvar cubicInOut = function (k) {\n    if ((k *= 2) < 1)\n        return 0.5 * k * k * k;\n    return 0.5 * ((k -= 2) * k * k + 2);\n};\nexports.cubicInOut = cubicInOut;\nvar easings = {\n    linear: exports.linear,\n    quadraticIn: exports.quadraticIn,\n    quadraticOut: exports.quadraticOut,\n    quadraticInOut: exports.quadraticInOut,\n    cubicIn: exports.cubicIn,\n    cubicOut: exports.cubicOut,\n    cubicInOut: exports.cubicInOut,\n};\nexports[\"default\"] = easings;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/utils/easings.js?");

/***/ }),

/***/ "./node_modules/sigma/utils/index.js":
/*!*******************************************!*\
  !*** ./node_modules/sigma/utils/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.validateGraph = exports.extractPixel = exports.getMatrixImpact = exports.matrixFromCamera = exports.getCorrectionRatio = exports.colorToIndex = exports.indexToColor = exports.floatColor = exports.rgbaToFloat = exports.parseColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.graphExtent = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.assign = exports.isPlainObject = void 0;\nvar is_graph_1 = __importDefault(__webpack_require__(/*! graphology-utils/is-graph */ \"./node_modules/graphology-utils/is-graph.js\"));\nvar matrices_1 = __webpack_require__(/*! ./matrices */ \"./node_modules/sigma/utils/matrices.js\");\nvar data_1 = __webpack_require__(/*! ./data */ \"./node_modules/sigma/utils/data.js\");\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction isPlainObject(value) {\n    return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Helper to use Object.assign with more than two objects.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assign(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        Object.assign(target, o);\n    }\n    return target;\n}\nexports.assign = assign;\n/**\n * Very simple recursive Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignDeep(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        for (var k in o) {\n            if (isPlainObject(o[k])) {\n                target[k] = assignDeep(target[k], o[k]);\n            }\n            else {\n                target[k] = o[k];\n            }\n        }\n    }\n    return target;\n}\nexports.assignDeep = assignDeep;\n/**\n * Just some dirty trick to make requestAnimationFrame and cancelAnimationFrame \"work\" in Node.js, for unit tests:\n */\nexports.requestFrame = typeof requestAnimationFrame !== \"undefined\"\n    ? function (callback) { return requestAnimationFrame(callback); }\n    : function (callback) { return setTimeout(callback, 0); };\nexports.cancelFrame = typeof cancelAnimationFrame !== \"undefined\"\n    ? function (requestID) { return cancelAnimationFrame(requestID); }\n    : function (requestID) { return clearTimeout(requestID); };\n/**\n * Function used to create DOM elements easily.\n *\n * @param  {string} tag        - Tag name of the element to create.\n * @param  {object} style      - Styles map.\n * @param  {object} attributes - Attributes map.\n * @return {HTMLElement}\n */\nfunction createElement(tag, style, attributes) {\n    var element = document.createElement(tag);\n    if (style) {\n        for (var k in style) {\n            element.style[k] = style[k];\n        }\n    }\n    if (attributes) {\n        for (var k in attributes) {\n            element.setAttribute(k, attributes[k]);\n        }\n    }\n    return element;\n}\nexports.createElement = createElement;\n/**\n * Function returning the browser's pixel ratio.\n *\n * @return {number}\n */\nfunction getPixelRatio() {\n    if (typeof window.devicePixelRatio !== \"undefined\")\n        return window.devicePixelRatio;\n    return 1;\n}\nexports.getPixelRatio = getPixelRatio;\n/**\n * Function returning the graph's node extent in x & y.\n *\n * @param  {Graph}\n * @return {object}\n */\nfunction graphExtent(graph) {\n    if (!graph.order)\n        return { x: [0, 1], y: [0, 1] };\n    var xMin = Infinity;\n    var xMax = -Infinity;\n    var yMin = Infinity;\n    var yMax = -Infinity;\n    graph.forEachNode(function (_, attr) {\n        var x = attr.x, y = attr.y;\n        if (x < xMin)\n            xMin = x;\n        if (x > xMax)\n            xMax = x;\n        if (y < yMin)\n            yMin = y;\n        if (y > yMax)\n            yMax = y;\n    });\n    return { x: [xMin, xMax], y: [yMin, yMax] };\n}\nexports.graphExtent = graphExtent;\nfunction createNormalizationFunction(extent) {\n    var _b = __read(extent.x, 2), minX = _b[0], maxX = _b[1], _c = __read(extent.y, 2), minY = _c[0], maxY = _c[1];\n    var ratio = Math.max(maxX - minX, maxY - minY), dX = (maxX + minX) / 2, dY = (maxY + minY) / 2;\n    if (ratio === 0 || Math.abs(ratio) === Infinity || isNaN(ratio))\n        ratio = 1;\n    if (isNaN(dX))\n        dX = 0;\n    if (isNaN(dY))\n        dY = 0;\n    var fn = function (data) {\n        return {\n            x: 0.5 + (data.x - dX) / ratio,\n            y: 0.5 + (data.y - dY) / ratio,\n        };\n    };\n    // TODO: possibility to apply this in batch over array of indices\n    fn.applyTo = function (data) {\n        data.x = 0.5 + (data.x - dX) / ratio;\n        data.y = 0.5 + (data.y - dY) / ratio;\n    };\n    fn.inverse = function (data) {\n        return {\n            x: dX + ratio * (data.x - 0.5),\n            y: dY + ratio * (data.y - 0.5),\n        };\n    };\n    fn.ratio = ratio;\n    return fn;\n}\nexports.createNormalizationFunction = createNormalizationFunction;\n/**\n * Function ordering the given elements in reverse z-order so they drawn\n * the correct way.\n *\n * @param  {number}   extent   - [min, max] z values.\n * @param  {function} getter   - Z attribute getter function.\n * @param  {array}    elements - The array to sort.\n * @return {array} - The sorted array.\n */\nfunction zIndexOrdering(_extent, getter, elements) {\n    // If k is > n, we'll use a standard sort\n    return elements.sort(function (a, b) {\n        var zA = getter(a) || 0, zB = getter(b) || 0;\n        if (zA < zB)\n            return -1;\n        if (zA > zB)\n            return 1;\n        return 0;\n    });\n    // TODO: counting sort optimization\n}\nexports.zIndexOrdering = zIndexOrdering;\n/**\n * WebGL utils\n * ===========\n */\n/**\n * Memoized function returning a float-encoded color from various string\n * formats describing colors.\n */\nvar INT8 = new Int8Array(4);\nvar INT32 = new Int32Array(INT8.buffer, 0, 1);\nvar FLOAT32 = new Float32Array(INT8.buffer, 0, 1);\nvar RGBA_TEST_REGEX = /^\\s*rgba?\\s*\\(/;\nvar RGBA_EXTRACT_REGEX = /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)(?:\\s*,\\s*(.*)?)?\\)\\s*$/;\nfunction parseColor(val) {\n    var r = 0; // byte\n    var g = 0; // byte\n    var b = 0; // byte\n    var a = 1; // float\n    // Handling hexadecimal notation\n    if (val[0] === \"#\") {\n        if (val.length === 4) {\n            r = parseInt(val.charAt(1) + val.charAt(1), 16);\n            g = parseInt(val.charAt(2) + val.charAt(2), 16);\n            b = parseInt(val.charAt(3) + val.charAt(3), 16);\n        }\n        else {\n            r = parseInt(val.charAt(1) + val.charAt(2), 16);\n            g = parseInt(val.charAt(3) + val.charAt(4), 16);\n            b = parseInt(val.charAt(5) + val.charAt(6), 16);\n        }\n        if (val.length === 9) {\n            a = parseInt(val.charAt(7) + val.charAt(8), 16) / 255;\n        }\n    }\n    // Handling rgb notation\n    else if (RGBA_TEST_REGEX.test(val)) {\n        var match = val.match(RGBA_EXTRACT_REGEX);\n        if (match) {\n            r = +match[1];\n            g = +match[2];\n            b = +match[3];\n            if (match[4])\n                a = +match[4];\n        }\n    }\n    return { r: r, g: g, b: b, a: a };\n}\nexports.parseColor = parseColor;\nvar FLOAT_COLOR_CACHE = {};\nfor (var htmlColor in data_1.HTML_COLORS) {\n    FLOAT_COLOR_CACHE[htmlColor] = floatColor(data_1.HTML_COLORS[htmlColor]);\n    // Replicating cache for hex values for free\n    FLOAT_COLOR_CACHE[data_1.HTML_COLORS[htmlColor]] = FLOAT_COLOR_CACHE[htmlColor];\n}\nfunction rgbaToFloat(r, g, b, a, masking) {\n    INT32[0] = (a << 24) | (b << 16) | (g << 8) | r;\n    if (masking)\n        INT32[0] = INT32[0] & 0xfeffffff;\n    return FLOAT32[0];\n}\nexports.rgbaToFloat = rgbaToFloat;\nfunction floatColor(val) {\n    // If the color is already computed, we yield it\n    if (typeof FLOAT_COLOR_CACHE[val] !== \"undefined\")\n        return FLOAT_COLOR_CACHE[val];\n    var parsed = parseColor(val);\n    var r = parsed.r, g = parsed.g, b = parsed.b;\n    var a = parsed.a;\n    a = (a * 255) | 0;\n    var color = rgbaToFloat(r, g, b, a, true);\n    FLOAT_COLOR_CACHE[val] = color;\n    return color;\n}\nexports.floatColor = floatColor;\nvar FLOAT_INDEX_CACHE = {};\nfunction indexToColor(index) {\n    // If the index is already computed, we yield it\n    if (typeof FLOAT_INDEX_CACHE[index] !== \"undefined\")\n        return FLOAT_INDEX_CACHE[index];\n    // To address issue #1397, one strategy is to keep encoding 4 bytes colors,\n    // but with alpha hard-set to 1.0 (or 255):\n    var r = (index & 0x00ff0000) >>> 16;\n    var g = (index & 0x0000ff00) >>> 8;\n    var b = index & 0x000000ff;\n    var a = 0x000000ff;\n    // The original 4 bytes color encoding was the following:\n    // const r = (index & 0xff000000) >>> 24;\n    // const g = (index & 0x00ff0000) >>> 16;\n    // const b = (index & 0x0000ff00) >>> 8;\n    // const a = index & 0x000000ff;\n    var color = rgbaToFloat(r, g, b, a, true);\n    FLOAT_INDEX_CACHE[index] = color;\n    return color;\n}\nexports.indexToColor = indexToColor;\nfunction colorToIndex(r, g, b, _a) {\n    // As for the function indexToColor, because of #1397 and the \"alpha is always\n    // 1.0\" strategy, we need to fix this function as well:\n    return b + (g << 8) + (r << 16);\n    // The original 4 bytes color decoding is the following:\n    // return a + (b << 8) + (g << 16) + (r << 24);\n}\nexports.colorToIndex = colorToIndex;\n/**\n * In sigma, the graph is normalized into a [0, 1], [0, 1] square, before being given to the various renderers. This\n * helps to deal with quadtree in particular.\n * But at some point, we need to rescale it so that it takes the best place in the screen, i.e. we always want to see two\n * nodes \"touching\" opposite sides of the graph, with the camera being at its default state.\n *\n * This function determines this ratio.\n */\nfunction getCorrectionRatio(viewportDimensions, graphDimensions) {\n    var viewportRatio = viewportDimensions.height / viewportDimensions.width;\n    var graphRatio = graphDimensions.height / graphDimensions.width;\n    // If the stage and the graphs are in different directions (such as the graph being wider that tall while the stage\n    // is taller than wide), we can stop here to have indeed nodes touching opposite sides:\n    if ((viewportRatio < 1 && graphRatio > 1) || (viewportRatio > 1 && graphRatio < 1)) {\n        return 1;\n    }\n    // Else, we need to fit the graph inside the stage:\n    // 1. If the graph is \"squarer\" (i.e. with a ratio closer to 1), we need to make the largest sides touch;\n    // 2. If the stage is \"squarer\", we need to make the smallest sides touch.\n    return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));\n}\nexports.getCorrectionRatio = getCorrectionRatio;\n/**\n * Function returning a matrix from the current state of the camera.\n */\n// TODO: it's possible to optimize this drastically!\nfunction matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {\n    var angle = state.angle, ratio = state.ratio, x = state.x, y = state.y;\n    var width = viewportDimensions.width, height = viewportDimensions.height;\n    var matrix = (0, matrices_1.identity)();\n    var smallestDimension = Math.min(width, height) - 2 * padding;\n    var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);\n    if (!inverse) {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), -angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 1 / ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), -x, -y));\n    }\n    else {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), x, y));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));\n    }\n    return matrix;\n}\nexports.matrixFromCamera = matrixFromCamera;\n/**\n * All these transformations we apply on the matrix to get it rescale the graph\n * as we want make it very hard to get pixel-perfect distances in WebGL. This\n * function returns a factor that properly cancels the matrix effect on lengths.\n *\n * [jacomyal]\n * To be fully honest, I can't really explain happens here... I notice that the\n * following ratio works (i.e. it correctly compensates the matrix impact on all\n * camera states I could try):\n * > `R = size(V) / size(M * V) / W`\n * as long as `M * V` is in the direction of W (ie. parallel to (Ox)). It works\n * as well with H and a vector that transforms into something parallel to (Oy).\n *\n * Also, note that we use `angle` and not `-angle` (that would seem logical,\n * since we want to anticipate the rotation), because the image is vertically\n * swapped in WebGL.\n */\nfunction getMatrixImpact(matrix, cameraState, viewportDimensions) {\n    var _b = (0, matrices_1.multiplyVec2)(matrix, { x: Math.cos(cameraState.angle), y: Math.sin(cameraState.angle) }, 0), x = _b.x, y = _b.y;\n    return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;\n}\nexports.getMatrixImpact = getMatrixImpact;\n/**\n * Function extracting the color at the given pixel.\n */\nfunction extractPixel(gl, x, y, array) {\n    var data = array || new Uint8Array(4);\n    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return data;\n}\nexports.extractPixel = extractPixel;\n/**\n * Check if the graph variable is a valid graph, and if sigma can render it.\n */\nfunction validateGraph(graph) {\n    // check if it's a valid graphology instance\n    if (!(0, is_graph_1.default)(graph))\n        throw new Error(\"Sigma: invalid graph instance.\");\n    // check if nodes have x/y attributes\n    graph.forEachNode(function (key, attributes) {\n        if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {\n            throw new Error(\"Sigma: Coordinates of node \".concat(key, \" are invalid. A node must have a numeric 'x' and 'y' attribute.\"));\n        }\n    });\n}\nexports.validateGraph = validateGraph;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/utils/index.js?");

/***/ }),

/***/ "./node_modules/sigma/utils/matrices.js":
/*!**********************************************!*\
  !*** ./node_modules/sigma/utils/matrices.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.multiplyVec2 = exports.multiply = exports.translate = exports.rotate = exports.scale = exports.identity = void 0;\nfunction identity() {\n    return Float32Array.of(1, 0, 0, 0, 1, 0, 0, 0, 1);\n}\nexports.identity = identity;\n// TODO: optimize\nfunction scale(m, x, y) {\n    m[0] = x;\n    m[4] = typeof y === \"number\" ? y : x;\n    return m;\n}\nexports.scale = scale;\nfunction rotate(m, r) {\n    var s = Math.sin(r), c = Math.cos(r);\n    m[0] = c;\n    m[1] = s;\n    m[3] = -s;\n    m[4] = c;\n    return m;\n}\nexports.rotate = rotate;\nfunction translate(m, x, y) {\n    m[6] = x;\n    m[7] = y;\n    return m;\n}\nexports.translate = translate;\nfunction multiply(a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2];\n    var a10 = a[3], a11 = a[4], a12 = a[5];\n    var a20 = a[6], a21 = a[7], a22 = a[8];\n    var b00 = b[0], b01 = b[1], b02 = b[2];\n    var b10 = b[3], b11 = b[4], b12 = b[5];\n    var b20 = b[6], b21 = b[7], b22 = b[8];\n    a[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    a[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    a[2] = b00 * a02 + b01 * a12 + b02 * a22;\n    a[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    a[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    a[5] = b10 * a02 + b11 * a12 + b12 * a22;\n    a[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    a[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    a[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return a;\n}\nexports.multiply = multiply;\nfunction multiplyVec2(a, b, z) {\n    if (z === void 0) { z = 1; }\n    var a00 = a[0];\n    var a01 = a[1];\n    var a10 = a[3];\n    var a11 = a[4];\n    var a20 = a[6];\n    var a21 = a[7];\n    var b0 = b.x;\n    var b1 = b.y;\n    return { x: b0 * a00 + b1 * a10 + a20 * z, y: b0 * a01 + b1 * a11 + a21 * z };\n}\nexports.multiplyVec2 = multiplyVec2;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/utils/matrices.js?");

/***/ }),

/***/ "./node_modules/sigma/utils/picking.js":
/*!*********************************************!*\
  !*** ./node_modules/sigma/utils/picking.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getPixelColor = void 0;\nfunction getPixelColor(gl, frameBuffer, x, y, downSizingRatio) {\n    if (downSizingRatio === void 0) { downSizingRatio = 1; }\n    var pixel = new Uint8Array(4);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.readPixels(x / downSizingRatio, gl.drawingBufferHeight / downSizingRatio - y / downSizingRatio, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n    var _a = __read(pixel, 4), r = _a[0], g = _a[1], b = _a[2], a = _a[3];\n    return [r, g, b, a];\n}\nexports.getPixelColor = getPixelColor;\n\n\n//# sourceURL=webpack://three-deg/./node_modules/sigma/utils/picking.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var graphology__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphology */ \"./node_modules/graphology/dist/graphology.umd.min.js\");\n/* harmony import */ var graphology__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(graphology__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sigma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sigma */ \"./node_modules/sigma/index.js\");\n/* harmony import */ var sigma__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sigma__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var graphology_layout_force_worker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphology-layout-force/worker.js */ \"./node_modules/graphology-layout-force/worker.js\");\n/* harmony import */ var graphology_layout_force_worker_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(graphology_layout_force_worker_js__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n// simple constants\nconst NODE_COLOR = \"#DE5555\";\nconst NODE_NORMAL_SIZE = 20;\nconst NODE_BIG_SIZE = 50;\nconst LINE_COLOR = \"#983D3D\";\nconst LINE_NORMAL_SIZE = 5;\nconst NODE_BIG_RADIUS = 25;\n// HTML Element constants\nconst container = document.getElementById(\"sigma-container\");\nconst zoomInBtn = document.getElementById(\"zoom-in\");\nconst zoomOutBtn = document.getElementById(\"zoom-out\");\nconst zoomResetBtn = document.getElementById(\"zoom-reset\");\n// Sigma and Graphology constants\nconst graph = new (graphology__WEBPACK_IMPORTED_MODULE_0___default())();\n\n// actual graph building and rendering\ngraph.addNode(\"John\", { x: 0, y: 0, size: 5, label: \"John\", color: \"blue\" });\ngraph.addNode(\"Mary\", { x: 0, y: 0, size: 5, label: \"Mary\", color: \"red\" });\n\ngraph.addEdge(\"John\", \"Mary\");\n\nconst layout = new (graphology_layout_force_worker_js__WEBPACK_IMPORTED_MODULE_2___default())(graph, { isNodeFixed: (_, attr) => attr.highlighted });\nlayout.start();\nconst renderer = new (sigma__WEBPACK_IMPORTED_MODULE_1___default())(graph, container, {\n\tminCameraRatio: 0.1,\n\tmaxCameraRatio: 10\n});\nconst camera = renderer.getCamera();\n// HTML Event Bindings\nzoomInBtn.addEventListener(\"click\", () => {\n\tcamera.animatedZoom({ duration: 600 });\n});\nzoomOutBtn.addEventListener(\"click\", () => {\n\tcamera.animatedUnzoom({ duration: 600 });\n});\nzoomResetBtn.addEventListener(\"click\", () => {\n\tcamera.animatedReset({ duration: 600 });\n});\n\n\n//# sourceURL=webpack://three-deg/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;